<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Rock</name>
    </assembly>
    <members>
        <member name="T:Rock.Address.GeocodeContainer">
            <summary>
            Singleton class that uses MEF to load and cache all of the GeocodeComponent classes
            </summary>
        </member>
        <member name="T:Rock.Extension.Container`2">
            <summary>
            Singleton generic class that uses MEF to load and cache all of the component classes
            </summary>
        </member>
        <member name="T:Rock.Extension.IContainer">
            <summary>
            Interface for MEF Container
            </summary>
        </member>
        <member name="M:Rock.Extension.IContainer.Refresh">
            <summary>
            Refreshes the components.
            </summary>
        </member>
        <member name="P:Rock.Extension.IContainer.Dictionary">
            <summary>
            Gets the component name and attributes.
            </summary>
        </member>
        <member name="M:Rock.Extension.Container`2.Refresh">
            <summary>
            Forces a reloading of all the GeocodeService classes
            </summary>
        </member>
        <member name="P:Rock.Extension.Container`2.Components">
            <summary>
            Gets the componentss.
            </summary>
        </member>
        <member name="P:Rock.Extension.Container`2.Dictionary">
            <summary>
            Gets the component names and their attributes
            </summary>
        </member>
        <member name="P:Rock.Extension.Container`2.MEFComponents">
            <summary>
            Gets or sets the components.
            </summary>
            <value>
            The components.
            </value>
        </member>
        <member name="P:Rock.Address.GeocodeContainer.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="T:Rock.CMS.AuthDTO">
            <summary>
            Data Transfer Object for Auth object
            </summary>
        </member>
        <member name="M:Rock.Data.DTO`1.#ctor">
            <summary>
            Initializes a new instance of the data transformation object.
            </summary>
        </member>
        <member name="M:Rock.Data.DTO`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the data transformation object from a model
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:Rock.Data.DTO`1.CopyFromModel(`0)">
            <summary>
            Copies properties to the model
            </summary>
            <param name="dto"></param>
        </member>
        <member name="M:Rock.Data.DTO`1.CopyToModel(`0)">
            <summary>
            Copies properties from the model
            </summary>
            <param name="model"></param>
        </member>
        <member name="P:Rock.Data.DTO`1.Id">
            <summary>
            The Id
            </summary>
        </member>
        <member name="P:Rock.Data.DTO`1.Guid">
            <summary>
            Gets or sets the GUID.
            </summary>
            <value>
            The GUID.
            </value>
        </member>
        <member name="P:Rock.Data.DTO`1.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Data.DTO`1.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Data.DTO`1.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Data.DTO`1.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="M:Rock.CMS.AuthDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.CMS.AuthDTO.#ctor(Rock.CMS.Auth)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="auth"></param>
        </member>
        <member name="M:Rock.CMS.AuthDTO.CopyFromModel(Rock.CMS.Auth)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="auth"></param>
        </member>
        <member name="M:Rock.CMS.AuthDTO.CopyToModel(Rock.CMS.Auth)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="auth"></param>
        </member>
        <member name="T:Rock.CMS.AuthService">
            <summary>
            Auth Service class
            </summary>
            <summary>
            Auth POCO Service class
            </summary>
        </member>
        <member name="T:Rock.Data.Service`1">
            <summary>
            Generic POCO service class
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rock.Data.Service`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Data.Service`1"/> class.
            </summary>
        </member>
        <member name="M:Rock.Data.Service`1.#ctor(Rock.Data.IRepository{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Data.Service`1"/> class.
            </summary>
            <param name="repository">The repository.</param>
        </member>
        <member name="M:Rock.Data.Service`1.Queryable">
            <summary>
            Gets an <see cref="T:System.Linq.IQueryable`1"/> list of all models
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.Service`1.Get(System.Int32)">
            <summary>
            Gets the model with the id value
            </summary>
            <param name="id">id</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.Service`1.TryGet(System.Int32,`0@)">
            <summary>
            Trys to get the model with the id value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.Service`1.GetByEncryptedKey(System.String)">
            <summary>
            Gets the model by the public encrypted key.
            </summary>
            <param name="encryptedKey">The encrypted key.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.Service`1.GetByPublicKey(System.String)">
            <summary>
            Gets the model by the public un-encrypted key.
            </summary>
            <param name="publicKey">The public key.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.Service`1.Add(`0,System.Nullable{System.Int32})">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <param name="personId">The person id.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.Service`1.Attach(`0)">
            <summary>
            Attaches the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Rock.Data.Service`1.Delete(`0,System.Nullable{System.Int32})">
            <summary>
            Deletes the specified item.
            </summary>
            <param name="item">The item.</param>
            <param name="personId">The person id.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.Service`1.Save(`0,System.Nullable{System.Int32})">
            <summary>
            Saves the specified item.
            </summary>
            <param name="item">The item.</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Data.Service`1.Reorder(System.Collections.Generic.List{`0},System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Reorders the specified items.
            </summary>
            <param name="items">The items.</param>
            <param name="oldIndex">The old index.</param>
            <param name="newIndex">The new index.</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="P:Rock.Data.Service`1.Repository">
            <summary>
            Gets the Repository.
            </summary>
        </member>
        <member name="M:Rock.Data.Service`2.QueryableDTO">
            <summary>
            Gets an <see cref="T:System.Linq.IQueryable`1"/> list of DTO objects
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.CMS.AuthService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.CMS.AuthService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.CMS.AuthService.GetByEntityTypeAndEntityId(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets Auths by Entity Type And Entity Id
            </summary>
            <param name="entityType">Entity Type.</param>
            <param name="entityId">Entity Id.</param>
            <returns>An enumerable list of Auth objects.</returns>
        </member>
        <member name="M:Rock.CMS.AuthService.GetByGroupId(System.Nullable{System.Int32})">
            <summary>
            Gets Auths by Group Id
            </summary>
            <param name="groupId">Group Id.</param>
            <returns>An enumerable list of Auth objects.</returns>
        </member>
        <member name="M:Rock.CMS.AuthService.GetByPersonId(System.Nullable{System.Int32})">
            <summary>
            Gets Auths by Person Id
            </summary>
            <param name="personId">Person Id.</param>
            <returns>An enumerable list of Auth objects.</returns>
        </member>
        <member name="M:Rock.CMS.AuthService.GetAuths(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Gets the authorizations for the entity and action.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="entityId">The entity id.</param>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.CMS.BlockDTO">
            <summary>
            Data Transfer Object for Block object
            </summary>
        </member>
        <member name="M:Rock.CMS.BlockDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.CMS.BlockDTO.#ctor(Rock.CMS.Block)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="block"></param>
        </member>
        <member name="M:Rock.CMS.BlockDTO.CopyFromModel(Rock.CMS.Block)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="block"></param>
        </member>
        <member name="M:Rock.CMS.BlockDTO.CopyToModel(Rock.CMS.Block)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="block"></param>
        </member>
        <member name="T:Rock.CMS.BlockInstanceDTO">
            <summary>
            Data Transfer Object for BlockInstance object
            </summary>
        </member>
        <member name="M:Rock.CMS.BlockInstanceDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.CMS.BlockInstanceDTO.#ctor(Rock.CMS.BlockInstance)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="blockInstance"></param>
        </member>
        <member name="M:Rock.CMS.BlockInstanceDTO.CopyFromModel(Rock.CMS.BlockInstance)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="blockInstance"></param>
        </member>
        <member name="M:Rock.CMS.BlockInstanceDTO.CopyToModel(Rock.CMS.BlockInstance)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="blockInstance"></param>
        </member>
        <member name="T:Rock.CMS.BlockInstanceService">
            <summary>
            BlockInstance Service class
            </summary>
            <summary>
            Block Instance POCO Service class
            </summary>
        </member>
        <member name="M:Rock.CMS.BlockInstanceService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.CMS.BlockInstanceService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.CMS.BlockInstanceService.GetByBlockId(System.Int32)">
            <summary>
            Gets Block Instances by Block Id
            </summary>
            <param name="blockId">Block Id.</param>
            <returns>An enumerable list of BlockInstance objects.</returns>
        </member>
        <member name="M:Rock.CMS.BlockInstanceService.GetByLayout(System.String)">
            <summary>
            Gets Block Instances by Layout
            </summary>
            <param name="layout">Layout.</param>
            <returns>An enumerable list of BlockInstance objects.</returns>
        </member>
        <member name="M:Rock.CMS.BlockInstanceService.GetByLayoutAndPageIdAndZone(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Gets Block Instances by Layout And Page Id And Zone
            </summary>
            <param name="layout">Layout.</param>
            <param name="pageId">Page Id.</param>
            <param name="zone">Zone.</param>
            <returns>An enumerable list of BlockInstance objects.</returns>
        </member>
        <member name="M:Rock.CMS.BlockInstanceService.GetByPageId(System.Nullable{System.Int32})">
            <summary>
            Gets Block Instances by Page Id
            </summary>
            <param name="pageId">Page Id.</param>
            <returns>An enumerable list of BlockInstance objects.</returns>
        </member>
        <member name="M:Rock.CMS.BlockInstanceService.Move(Rock.CMS.BlockInstance)">
            <summary>
            Moves the specified block instance to another zone.
            </summary>
            <param name="blockInstance">The block instance.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.CMS.BlockService">
            <summary>
            Block POCO Service class
            </summary>
            <summary>
            Block Service class
            </summary>
        </member>
        <member name="M:Rock.CMS.BlockService.GetByName(System.String)">
            <summary>
            Gets Blocks by Name
            </summary>
            <param name="name">Name.</param>
            <returns>An enumerable list of Block objects.</returns>
        </member>
        <member name="M:Rock.CMS.BlockService.GetByPath(System.String)">
            <summary>
            Gets Blocks by Path
            </summary>
            <param name="path">Path.</param>
            <returns>An enumerable list of Block objects.</returns>
        </member>
        <member name="M:Rock.CMS.BlockService.GetUnregisteredBlocks(System.String)">
            <summary>
            Gets a list of Blocks on the filesystem that have not yet been registered in the service.
            </summary>
            <param name="physWebAppPath">the physical path of the web application</param>
            <returns>a collection of <see cref="T:Rock.CMS.Block">Blocks</see> that are not yet registered</returns>
        </member>
        <member name="M:Rock.CMS.BlockService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.CMS.BlockService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="T:Rock.CMS.FileDTO">
            <summary>
            Data Transfer Object for File object
            </summary>
        </member>
        <member name="M:Rock.CMS.FileDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.CMS.FileDTO.#ctor(Rock.CMS.File)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="file"></param>
        </member>
        <member name="M:Rock.CMS.FileDTO.CopyFromModel(Rock.CMS.File)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="file"></param>
        </member>
        <member name="M:Rock.CMS.FileDTO.CopyToModel(Rock.CMS.File)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="file"></param>
        </member>
        <member name="T:Rock.CMS.FileService">
            <summary>
            File Service class
            </summary>
        </member>
        <member name="M:Rock.CMS.FileService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.CMS.FileService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="T:Rock.CMS.HtmlContentDTO">
            <summary>
            Data Transfer Object for HtmlContent object
            </summary>
        </member>
        <member name="M:Rock.CMS.HtmlContentDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.CMS.HtmlContentDTO.#ctor(Rock.CMS.HtmlContent)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="htmlContent"></param>
        </member>
        <member name="M:Rock.CMS.HtmlContentDTO.CopyFromModel(Rock.CMS.HtmlContent)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="htmlContent"></param>
        </member>
        <member name="M:Rock.CMS.HtmlContentDTO.CopyToModel(Rock.CMS.HtmlContent)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="htmlContent"></param>
        </member>
        <member name="T:Rock.CMS.HtmlContentService">
            <summary>
            HtmlContent Service class
            </summary>
            <summary>
            Html Content POCO Service class
            </summary>
        </member>
        <member name="M:Rock.CMS.HtmlContentService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.CMS.HtmlContentService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.CMS.HtmlContentService.GetByApprovedByPersonId(System.Nullable{System.Int32})">
            <summary>
            Gets Html Contents by Approved By Person Id
            </summary>
            <param name="approvedByPersonId">Approved By Person Id.</param>
            <returns>An enumerable list of HtmlContent objects.</returns>
        </member>
        <member name="M:Rock.CMS.HtmlContentService.GetByBlockId(System.Int32)">
            <summary>
            Gets Html Contents by Block Instance
            </summary>
            <param name="blockId">a block instance id</param>
            <returns>An enumerable list of HtmlContent objects.</returns>
        </member>
        <member name="M:Rock.CMS.HtmlContentService.GetByBlockIdAndEntityValueAndVersion(System.Int32,System.String,System.Int32)">
            <summary>
            Gets Html Content by BlockInstance And Entity Value And Version
            </summary>
            <param name="blockId">a block instance id</param>
            <param name="entityValue">Entity Value.</param>
            <param name="version">Version.</param>
            <returns>HtmlContent object.</returns>
        </member>
        <member name="M:Rock.CMS.HtmlContentService.GetActiveContent(System.Int32,System.String)">
            <summary>
            Gets the active content for a specific block-instance/context.
            </summary>
            <param name="blockId">a block instance id</param>
            <param name="entityValue">The entity value.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.CMS.HtmlContentService.GetContent(System.Int32,System.String)">
            <summary>
            Gets all versions of content for a specific block-instance/context.
            </summary>
            <param name="blockId">a block instance id</param>
            <param name="entityValue">The entity value.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.CMS.PageContextDTO">
            <summary>
            Data Transfer Object for PageContext object
            </summary>
        </member>
        <member name="M:Rock.CMS.PageContextDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.CMS.PageContextDTO.#ctor(Rock.CMS.PageContext)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="pageContext"></param>
        </member>
        <member name="M:Rock.CMS.PageContextDTO.CopyFromModel(Rock.CMS.PageContext)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="pageContext"></param>
        </member>
        <member name="M:Rock.CMS.PageContextDTO.CopyToModel(Rock.CMS.PageContext)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="pageContext"></param>
        </member>
        <member name="T:Rock.CMS.PageContextService">
            <summary>
            PageContext Service class
            </summary>
            <summary>
            Page Context POCO Service class
            </summary>
        </member>
        <member name="M:Rock.CMS.PageContextService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.CMS.PageContextService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.CMS.PageContextService.GetByPageId(System.Int32)">
            <summary>
            Gets Page Contexts by Page Id
            </summary>
            <param name="pageId">Page Id.</param>
            <returns>An enumerable list of PageContext objects.</returns>
        </member>
        <member name="T:Rock.CMS.PageContext">
            <summary>
            Page Route POCO Entity.
            </summary>
        </member>
        <member name="T:Rock.Data.ModelWithAttributes`1">
            <summary>
            Represents a model with attributes. 
            </summary>
        </member>
        <member name="T:Rock.Data.Model`1">
            <summary>
            Base class that all models need to inherit from
            </summary>
        </member>
        <member name="T:Rock.Data.IModel">
            <summary>
            Represents a POCO class model
            </summary>
        </member>
        <member name="T:Rock.Security.ISecured">
            <summary>
            Represents a securable object.  Note each ISecured object must also expose a static Read(int id) method if the object
            types will be used in a grid with a SecureField column
            </summary>
        </member>
        <member name="M:Rock.Security.ISecured.IsAuthorized(System.String,Rock.CRM.Person)">
            <summary>
            Return <c>true</c> if the user is authorized to perform the selected action on this object.
            </summary>
            <param name="action">The action.</param>
            <param name="person">The person.</param>
            <returns>
              <c>true</c> if the specified action is authorized; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Rock.Security.ISecured.IsAllowedByDefault(System.String)">
            <summary>
            If a user or role is not specifically allowed or denied to perform the selected action,
            return <c>true</c> if they should be allowed anyway or <c>false</c> if not.
            </summary>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="P:Rock.Security.ISecured.AuthEntity">
            <summary>
            The auth entity. Classes that implement the <see cref="T:Rock.Security.ISecured"/> interface should return
            a value that is unique across all <see cref="T:Rock.Security.ISecured"/> classes.  Typically this is the 
            qualified name of the class. 
            </summary>
        </member>
        <member name="P:Rock.Security.ISecured.Id">
            <summary>
            The Id
            </summary>
        </member>
        <member name="P:Rock.Security.ISecured.ParentAuthority">
            <summary>
            A parent authority.  If a user is not specifically allowed or denied access to 
            this object, Rock will check access to the parent authority specified by this property.
            </summary>
        </member>
        <member name="P:Rock.Security.ISecured.SupportedActions">
            <summary>
            A list of actions that this class supports.
            </summary>
        </member>
        <member name="P:Rock.Data.IModel.Guid">
            <summary>
            Gets or sets the GUID.
            </summary>
            <value>
            The GUID.
            </value>
        </member>
        <member name="M:Rock.Data.Model`1.Read``1(System.Int32)">
            <summary>
            Static method to return an object based on the id
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.Model`1.IsAuthorized(System.String,Rock.CRM.Person)">
            <summary>
            Return <c>true</c> if the user is authorized to perform the selected action on this object.
            </summary>
            <param name="action">The action.</param>
            <param name="person">The person.</param>
            <returns>
              <c>true</c> if the specified action is authorized; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Rock.Data.Model`1.IsAllowedByDefault(System.String)">
            <summary>
            If a user or role is not specifically allowed or denied to perform the selected action,
            return <c>true</c> if they should be allowed anyway or <c>false</c> if not.
            </summary>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.Model`1.OnAdding(Rock.Data.ModelUpdatingEventArgs)">
            <summary>
            Raises the <see cref="E:Adding"/> event.
            </summary>
            <param name="e">The <see cref="T:Rock.Data.ModelUpdatingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Data.Model`1.RaiseAddingEvent(System.Boolean@,System.Nullable{System.Int32})">
            <summary>
            Raises the adding event.
            </summary>
            <param name="cancel">if set to <c>true</c> [cancel].</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Data.Model`1.OnAdded(Rock.Data.ModelUpdatedEventArgs)">
            <summary>
            Raises the <see cref="E:Added"/> event.
            </summary>
            <param name="e">The <see cref="T:Rock.Data.ModelUpdatedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Data.Model`1.RaiseAddedEvent(System.Nullable{System.Int32})">
            <summary>
            Raises the added event.
            </summary>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Data.Model`1.OnDeleting(Rock.Data.ModelUpdatingEventArgs)">
            <summary>
            Raises the <see cref="E:Deleting"/> event.
            </summary>
            <param name="e">The <see cref="T:Rock.Data.ModelUpdatingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Data.Model`1.RaiseDeletingEvent(System.Boolean@,System.Nullable{System.Int32})">
            <summary>
            Raises the deleting event.
            </summary>
            <param name="cancel">if set to <c>true</c> [cancel].</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Data.Model`1.OnDeleted(Rock.Data.ModelUpdatedEventArgs)">
            <summary>
            Raises the <see cref="E:Deleted"/> event.
            </summary>
            <param name="e">The <see cref="T:Rock.Data.ModelUpdatedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Data.Model`1.RaiseDeletedEvent(System.Nullable{System.Int32})">
            <summary>
            Raises the deleted event.
            </summary>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Data.Model`1.OnUpdating(Rock.Data.ModelUpdatingEventArgs)">
            <summary>
            Raises the <see cref="E:Updating"/> event.
            </summary>
            <param name="e">The <see cref="T:Rock.Data.ModelUpdatingEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Data.Model`1.RaiseUpdatingEvent(System.Boolean@,System.Nullable{System.Int32})">
            <summary>
            Raises the updating event.
            </summary>
            <param name="cancel">if set to <c>true</c> [cancel].</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Data.Model`1.OnUpdated(Rock.Data.ModelUpdatedEventArgs)">
            <summary>
            Raises the <see cref="E:Updated"/> event.
            </summary>
            <param name="e">The <see cref="T:Rock.Data.ModelUpdatedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Data.Model`1.RaiseUpdatedEvent(System.Nullable{System.Int32})">
            <summary>
            Raises the updated event.
            </summary>
            <param name="personId">The person id.</param>
        </member>
        <member name="P:Rock.Data.Model`1.Id">
            <summary>
            The Id
            </summary>
        </member>
        <member name="P:Rock.Data.Model`1.Guid">
            <summary>
            Gets or sets the GUID.
            </summary>
            <value>
            The GUID.
            </value>
        </member>
        <member name="P:Rock.Data.Model`1.EncryptedKey">
            <summary>
            Gets a publicly viewable unique key for the model.
            </summary>
        </member>
        <member name="P:Rock.Data.Model`1.ValidationResults">
            <summary>
            Gets the validation results.
            </summary>
        </member>
        <member name="P:Rock.Data.Model`1.IsValid">
            <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
            <value>
              <c>true</c> if this instance is valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Data.Model`1.AuthEntity">
            <summary>
            The auth entity. Classes that implement the <see cref="T:Rock.Security.ISecured"/> interface should return
            a value that is unique across all <see cref="T:Rock.Security.ISecured"/> classes.  Typically this is the
            qualified name of the class.
            </summary>
        </member>
        <member name="P:Rock.Data.Model`1.ParentAuthority">
            <summary>
            A parent authority.  If a user is not specifically allowed or denied access to
            this object, Rock will check access to the parent authority specified by this property.
            </summary>
        </member>
        <member name="P:Rock.Data.Model`1.SupportedActions">
            <summary>
            A list of actions that this class supports.
            </summary>
        </member>
        <member name="E:Rock.Data.Model`1.Adding">
            <summary>
            Occurs when model is being added.
            </summary>
        </member>
        <member name="E:Rock.Data.Model`1.Added">
            <summary>
            Occurs when model was added.
            </summary>
        </member>
        <member name="E:Rock.Data.Model`1.Deleting">
            <summary>
            Occurs when model is being deleted.
            </summary>
        </member>
        <member name="E:Rock.Data.Model`1.Deleted">
            <summary>
            Occurs when model was deleted.
            </summary>
        </member>
        <member name="E:Rock.Data.Model`1.Updating">
            <summary>
            Occurs when model is being updated.
            </summary>
        </member>
        <member name="E:Rock.Data.Model`1.Updated">
            <summary>
            Occurs when model was updated
            </summary>
        </member>
        <member name="T:Rock.Attribute.IHasAttributes">
            <summary>
            Represents any class that supports having attributes
            </summary>
        </member>
        <member name="P:Rock.Attribute.IHasAttributes.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Attribute.IHasAttributes.Attributes">
            <summary>
            List of attributes associated with the object grouped by category.  This property will not include 
            the attribute values. The <see cref="P:Rock.Attribute.IHasAttributes.AttributeValues"/> property should be used to get attribute values
            </summary>
            <value>
            The attributes.
            </value>
        </member>
        <member name="P:Rock.Attribute.IHasAttributes.AttributeValues">
            <summary>
            Dictionary of all attributes and their value.
            </summary>
            <remarks>
            The dictionary key stores tha attribute's key, and the dictionary value is a KeyValuePair object that
            stores the attribute name as the key and a list of the attribute's values as it's value. 
            <example>
            Example
            </example>
            <code>
            <![CDATA[Dictionary<"AttributeKey", KeyValuePair<"Attribute Name", "Attribute Value">>]]>
            </code>
            </remarks>
            <value>
            The attribute values.
            </value>
        </member>
        <member name="P:Rock.Data.ModelWithAttributes`1.Attributes">
            <summary>
            List of attributes associated with the object.  This property will not include the attribute values.
            The <see cref="P:Rock.Data.ModelWithAttributes`1.AttributeValues"/> property should be used to get attribute values
            </summary>
            <value>
            The attributes.
            </value>
        </member>
        <member name="P:Rock.Data.ModelWithAttributes`1.AttributeValues">
            <summary>
            Dictionary of all attributes and their value.
            </summary>
            <value>
            The attribute values.
            </value>
        </member>
        <member name="T:Rock.Data.IAuditable">
            <summary>
            Represents a model that tracks when the model was created and last updated and by who
            </summary>
        </member>
        <member name="P:Rock.Data.IAuditable.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Data.IAuditable.ModifiedDateTime">
            <summary>
            Gets or sets the modified date time.
            </summary>
            <value>
            The modified date time.
            </value>
        </member>
        <member name="P:Rock.Data.IAuditable.CreatedDateTime">
            <summary>
            Gets or sets the created date time.
            </summary>
            <value>
            The created date time.
            </value>
        </member>
        <member name="P:Rock.Data.IAuditable.CreatedByPersonId">
            <summary>
            Gets or sets the created by person id.
            </summary>
            <value>
            The created by person id.
            </value>
        </member>
        <member name="P:Rock.Data.IAuditable.ModifiedByPersonId">
            <summary>
            Gets or sets the modified by person id.
            </summary>
            <value>
            The modified by person id.
            </value>
        </member>
        <member name="P:Rock.CMS.PageContext.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.CMS.PageContext.PageId">
            <summary>
            Gets or sets the Page Id.
            </summary>
            <value>
            Page Id.
            </value>
        </member>
        <member name="P:Rock.CMS.PageContext.Entity">
            <summary>
            Gets or sets the Entity.
            </summary>
            <value>
            Entity.
            </value>
        </member>
        <member name="P:Rock.CMS.PageContext.IdParameter">
            <summary>
            Gets or sets the page parameter that contains the entity's id.
            </summary>
            <value>
            Id Parameter.
            </value>
        </member>
        <member name="P:Rock.CMS.PageContext.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.PageContext.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.PageContext.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.PageContext.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.PageContext.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.CMS.PageContext.Page">
            <summary>
            Gets or sets the Page.
            </summary>
            <value>
            A <see cref="P:Rock.CMS.PageContext.Page"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.PageContext.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.PageContext.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.CMS.PageContextConfiguration">
            <summary>
            Page Route Configuration class.
            </summary>
        </member>
        <member name="M:Rock.CMS.PageContextConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.CMS.PageContextConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.CMS.PageDTO">
            <summary>
            Data Transfer Object for Page object
            </summary>
        </member>
        <member name="M:Rock.CMS.PageDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.CMS.PageDTO.#ctor(Rock.CMS.Page)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:Rock.CMS.PageDTO.CopyFromModel(Rock.CMS.Page)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:Rock.CMS.PageDTO.CopyToModel(Rock.CMS.Page)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="page"></param>
        </member>
        <member name="T:Rock.CMS.PageRouteDTO">
            <summary>
            Data Transfer Object for PageRoute object
            </summary>
        </member>
        <member name="M:Rock.CMS.PageRouteDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.CMS.PageRouteDTO.#ctor(Rock.CMS.PageRoute)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="pageRoute"></param>
        </member>
        <member name="M:Rock.CMS.PageRouteDTO.CopyFromModel(Rock.CMS.PageRoute)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="pageRoute"></param>
        </member>
        <member name="M:Rock.CMS.PageRouteDTO.CopyToModel(Rock.CMS.PageRoute)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="pageRoute"></param>
        </member>
        <member name="T:Rock.CMS.PageRouteService">
            <summary>
            PageRoute Service class
            </summary>
            <summary>
            Page Route POCO Service class
            </summary>
        </member>
        <member name="M:Rock.CMS.PageRouteService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.CMS.PageRouteService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.CMS.PageRouteService.GetByPageId(System.Int32)">
            <summary>
            Gets Page Routes by Page Id
            </summary>
            <param name="pageId">Page Id.</param>
            <returns>An enumerable list of PageRoute objects.</returns>
        </member>
        <member name="T:Rock.CMS.PageService">
            <summary>
            Page Service class
            </summary>
            <summary>
            Page POCO Service class
            </summary>
        </member>
        <member name="M:Rock.CMS.PageService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.CMS.PageService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.CMS.PageService.GetByParentPageId(System.Nullable{System.Int32})">
            <summary>
            Gets Pages by Parent Page Id
            </summary>
            <param name="parentPageId">Parent Page Id.</param>
            <returns>An enumerable list of Page objects.</returns>
        </member>
        <member name="M:Rock.CMS.PageService.GetBySiteId(System.Nullable{System.Int32})">
            <summary>
            Gets Pages by Site Id
            </summary>
            <param name="siteId">Site Id.</param>
            <returns>An enumerable list of Page objects.</returns>
        </member>
        <member name="T:Rock.CMS.SiteDomainDTO">
            <summary>
            Data Transfer Object for SiteDomain object
            </summary>
        </member>
        <member name="M:Rock.CMS.SiteDomainDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.CMS.SiteDomainDTO.#ctor(Rock.CMS.SiteDomain)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="siteDomain"></param>
        </member>
        <member name="M:Rock.CMS.SiteDomainDTO.CopyFromModel(Rock.CMS.SiteDomain)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="siteDomain"></param>
        </member>
        <member name="M:Rock.CMS.SiteDomainDTO.CopyToModel(Rock.CMS.SiteDomain)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="siteDomain"></param>
        </member>
        <member name="T:Rock.CMS.SiteDomainService">
            <summary>
            SiteDomain Service class
            </summary>
            <summary>
            Site Domain POCO Service class
            </summary>
        </member>
        <member name="M:Rock.CMS.SiteDomainService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.CMS.SiteDomainService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.CMS.SiteDomainService.GetByDomain(System.String)">
            <summary>
            Gets Site Domain by Domain
            </summary>
            <param name="domain">Domain.</param>
            <returns>SiteDomain object.</returns>
        </member>
        <member name="M:Rock.CMS.SiteDomainService.GetBySiteId(System.Int32)">
            <summary>
            Gets Site Domains by Site Id
            </summary>
            <param name="siteId">Site Id.</param>
            <returns>An enumerable list of SiteDomain objects.</returns>
        </member>
        <member name="M:Rock.CMS.SiteDomainService.GetBySiteIdAndDomain(System.Int32,System.String)">
            <summary>
            Gets Site Domains by Site Id And Domain
            </summary>
            <param name="siteId">Site Id.</param>
            <param name="domain">Domain.</param>
            <returns>An enumerable list of SiteDomain objects.</returns>
        </member>
        <member name="M:Rock.CMS.SiteDomainService.GetByDomainContained(System.String)">
            <summary>
            Gets the site domains that are contained by the specified domain
            </summary>
            <param name="domain">The full domain.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.CMS.SiteDTO">
            <summary>
            Data Transfer Object for Site object
            </summary>
        </member>
        <member name="M:Rock.CMS.SiteDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.CMS.SiteDTO.#ctor(Rock.CMS.Site)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="site"></param>
        </member>
        <member name="M:Rock.CMS.SiteDTO.CopyFromModel(Rock.CMS.Site)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="site"></param>
        </member>
        <member name="M:Rock.CMS.SiteDTO.CopyToModel(Rock.CMS.Site)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="site"></param>
        </member>
        <member name="T:Rock.CMS.SiteService">
            <summary>
            Site Service class
            </summary>
            <summary>
            Site POCO Service class
            </summary>
        </member>
        <member name="M:Rock.CMS.SiteService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.CMS.SiteService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.CMS.SiteService.GetByDefaultPageId(System.Nullable{System.Int32})">
            <summary>
            Gets Sites by Default Page Id
            </summary>
            <param name="defaultPageId">Default Page Id.</param>
            <returns>An enumerable list of Site objects.</returns>
        </member>
        <member name="T:Rock.CMS.UserDTO">
            <summary>
            Data Transfer Object for User object
            </summary>
        </member>
        <member name="M:Rock.CMS.UserDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.CMS.UserDTO.#ctor(Rock.CMS.User)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:Rock.CMS.UserDTO.CopyFromModel(Rock.CMS.User)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:Rock.CMS.UserDTO.CopyToModel(Rock.CMS.User)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="user"></param>
        </member>
        <member name="T:Rock.CMS.UserService">
            <summary>
            User Service class
            </summary>
            <summary>
            User POCO Service class
            </summary>
        </member>
        <member name="M:Rock.CMS.UserService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.CMS.UserService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.CMS.UserService.GetByApiKey(System.String)">
            <summary>
            Gets Users by Api Key
            </summary>
            <param name="apiKey">Api Key.</param>
            <returns>An enumerable list of User objects.</returns>
        </member>
        <member name="M:Rock.CMS.UserService.GetByPersonId(System.Nullable{System.Int32})">
            <summary>
            Gets Users by Person Id
            </summary>
            <param name="personId">Person Id.</param>
            <returns>An enumerable list of User objects.</returns>
        </member>
        <member name="M:Rock.CMS.UserService.GetByUserName(System.String)">
            <summary>
            Gets User by User Name
            </summary>
            <param name="userName">User Name.</param>
            <returns>User object.</returns>
        </member>
        <member name="M:Rock.CMS.UserService.Create(Rock.CRM.Person,Rock.CMS.AuthenticationType,System.String,System.String,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Creates a new user.
            </summary>
            <param name="person">The person.</param>
            <param name="authenticationType">Type of the authentication.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <param name="isConfirmed">if set to <c>true</c> [is confirmed].</param>
            <param name="currentPersonId">The current person id.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.CMS.UserService.ChangePassword(Rock.CMS.User,System.String,System.String)">
            <summary>
            Changes the password after first validating the existing password
            </summary>
            <param name="user">The user.</param>
            <param name="oldPassword">The old password.</param>
            <param name="newPassword">The new password.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.CMS.UserService.ChangePassword(Rock.CMS.User,System.String)">
            <summary>
            Changes the password.
            </summary>
            <param name="user">The user.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:Rock.CMS.UserService.Unlock(Rock.CMS.User)">
            <summary>
            Unlocks the user.
            </summary>
            <param name="user">The user.</param>
        </member>
        <member name="M:Rock.CMS.UserService.Validate(Rock.CMS.User,System.String)">
            <summary>
            Validates the specified user.
            </summary>
            <param name="user">The user.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.CMS.UserService.GetByConfirmationCode(System.String)">
            <summary>
            Gets the user by the encrypted confirmation code.
            </summary>
            <param name="code">The encrypted confirmation code.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.CMS.UserService.GetCurrentUser">
            <summary>
            Gets the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.CMS.UserService.GetCurrentUser(System.Boolean)">
            <summary>
            Gets the current user.
            </summary>
            <param name="userIsOnline">if set to <c>true</c> [user is online].</param>
            <returns></returns>
        </member>
        <member name="M:Rock.CMS.UserService.Validate(System.String,System.String)">
            <summary>
            Validates the user.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Communication.IEmailProvider.BouncedEmails(System.Boolean)">
            <summary>
            Returns a list of bounced emails.  Paramenter tells whether soft bounces should also be returned.
            </summary>
        </member>
        <member name="M:Rock.Communication.IEmailProvider.DeleteBouncedEmail(System.String)">
            <summary>
            Deletes bounced email from the email system
            </summary>
        </member>
        <member name="M:Rock.Communication.SendGridEmailProvider.BouncedEmails(System.Boolean)">
            <summary>
            Returns a list of bounced emails.  Paramenter tells whether soft bounces should also be returned.
            </summary>
        </member>
        <member name="M:Rock.Communication.SendGridEmailProvider.DeleteBouncedEmail(System.String)">
            <summary>
            Deletes bounced email from the email system
            </summary>
        </member>
        <member name="T:Rock.Core.AttributeDTO">
            <summary>
            Data Transfer Object for Attribute object
            </summary>
        </member>
        <member name="M:Rock.Core.AttributeDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Core.AttributeDTO.#ctor(Rock.Core.Attribute)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="attribute"></param>
        </member>
        <member name="M:Rock.Core.AttributeDTO.CopyFromModel(Rock.Core.Attribute)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="attribute"></param>
        </member>
        <member name="M:Rock.Core.AttributeDTO.CopyToModel(Rock.Core.Attribute)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="attribute"></param>
        </member>
        <member name="T:Rock.Core.AttributeQualifierDTO">
            <summary>
            Data Transfer Object for AttributeQualifier object
            </summary>
        </member>
        <member name="M:Rock.Core.AttributeQualifierDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Core.AttributeQualifierDTO.#ctor(Rock.Core.AttributeQualifier)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="attributeQualifier"></param>
        </member>
        <member name="M:Rock.Core.AttributeQualifierDTO.CopyFromModel(Rock.Core.AttributeQualifier)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="attributeQualifier"></param>
        </member>
        <member name="M:Rock.Core.AttributeQualifierDTO.CopyToModel(Rock.Core.AttributeQualifier)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="attributeQualifier"></param>
        </member>
        <member name="T:Rock.Core.AttributeQualifierService">
            <summary>
            AttributeQualifier Service class
            </summary>
            <summary>
            Attribute Qualifier POCO Service class
            </summary>
        </member>
        <member name="M:Rock.Core.AttributeQualifierService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Core.AttributeQualifierService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Core.AttributeQualifierService.GetByAttributeId(System.Int32)">
            <summary>
            Gets Attribute Qualifiers by Attribute Id
            </summary>
            <param name="attributeId">Attribute Id.</param>
            <returns>An enumerable list of AttributeQualifier objects.</returns>
        </member>
        <member name="T:Rock.Core.AttributeService">
            <summary>
            Attribute Service class
            </summary>
            <summary>
            Attribute POCO Service class
            </summary>
        </member>
        <member name="M:Rock.Core.AttributeService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Core.AttributeService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Core.AttributeService.GetByEntity(System.String)">
            <summary>
            Gets Attributes by Entity
            </summary>
            <param name="entity">Entity.</param>
            <returns>An enumerable list of Attribute objects.</returns>
        </member>
        <member name="M:Rock.Core.AttributeService.GetByEntityAndEntityQualifierColumnAndEntityQualifierValueAndKey(System.String,System.String,System.String,System.String)">
            <summary>
            Gets Attribute by Entity And Entity Qualifier Column And Entity Qualifier Value And Key
            </summary>
            <param name="entity">Entity.</param>
            <param name="entityQualifierColumn">Entity Qualifier Column.</param>
            <param name="entityQualifierValue">Entity Qualifier Value.</param>
            <param name="key">Key.</param>
            <returns>Attribute object.</returns>
        </member>
        <member name="M:Rock.Core.AttributeService.GetByFieldTypeId(System.Int32)">
            <summary>
            Gets Attributes by Field Type Id
            </summary>
            <param name="fieldTypeId">Field Type Id.</param>
            <returns>An enumerable list of Attribute objects.</returns>
        </member>
        <member name="M:Rock.Core.AttributeService.GetAttributesByEntityQualifier(System.String,System.String,System.String)">
            <summary>
            Gets the attributes by entity qualifier.
            </summary>
            <param name="entity">The entity.</param>
            <param name="entityQualifierColumn">The entity qualifier column.</param>
            <param name="entityQualifierValue">The entity qualifier value.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Core.AttributeService.GetGlobalAttribute(System.String)">
            <summary>
            Gets a global attribute.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Core.AttributeValueDTO">
            <summary>
            Data Transfer Object for AttributeValue object
            </summary>
        </member>
        <member name="M:Rock.Core.AttributeValueDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Core.AttributeValueDTO.#ctor(Rock.Core.AttributeValue)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="attributeValue"></param>
        </member>
        <member name="M:Rock.Core.AttributeValueDTO.CopyFromModel(Rock.Core.AttributeValue)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="attributeValue"></param>
        </member>
        <member name="M:Rock.Core.AttributeValueDTO.CopyToModel(Rock.Core.AttributeValue)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="attributeValue"></param>
        </member>
        <member name="T:Rock.Core.AttributeValueService">
            <summary>
            AttributeValue Service class
            </summary>
            <summary>
            Attribute Value POCO Service class
            </summary>
        </member>
        <member name="M:Rock.Core.AttributeValueService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Core.AttributeValueService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Core.AttributeValueService.GetByAttributeId(System.Int32)">
            <summary>
            Gets Attribute Values by Attribute Id
            </summary>
            <param name="attributeId">Attribute Id.</param>
            <returns>An enumerable list of AttributeValue objects.</returns>
        </member>
        <member name="M:Rock.Core.AttributeValueService.GetByAttributeIdAndEntityId(System.Int32,System.Nullable{System.Int32})">
            <summary>
            Gets Attribute Values by Attribute Id And Entity Id
            </summary>
            <param name="attributeId">Attribute Id.</param>
            <param name="entityId">Entity Id.</param>
            <returns>An enumerable list of AttributeValue objects.</returns>
        </member>
        <member name="M:Rock.Core.AttributeValueService.GetByEntityId(System.Nullable{System.Int32})">
            <summary>
            Gets Attribute Values by Entity Id
            </summary>
            <param name="entityId">Entity Id.</param>
            <returns>An enumerable list of AttributeValue objects.</returns>
        </member>
        <member name="M:Rock.Core.AttributeValueService.GetByAttributeIdAndEntityId(System.Int32,System.Int32)">
            <summary>
            Gets the by attribute id and entity id.
            </summary>
            <param name="attributeId">The attribute id.</param>
            <param name="entityId">The entity id.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Core.DefinedTypeDTO">
            <summary>
            Data Transfer Object for DefinedType object
            </summary>
        </member>
        <member name="M:Rock.Core.DefinedTypeDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Core.DefinedTypeDTO.#ctor(Rock.Core.DefinedType)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="definedType"></param>
        </member>
        <member name="M:Rock.Core.DefinedTypeDTO.CopyFromModel(Rock.Core.DefinedType)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="definedType"></param>
        </member>
        <member name="M:Rock.Core.DefinedTypeDTO.CopyToModel(Rock.Core.DefinedType)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="definedType"></param>
        </member>
        <member name="T:Rock.Core.DefinedTypeService">
            <summary>
            DefinedType Service class
            </summary>
            <summary>
            Defined Type POCO Service class
            </summary>
        </member>
        <member name="M:Rock.Core.DefinedTypeService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Core.DefinedTypeService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Core.DefinedTypeService.GetByFieldTypeId(System.Nullable{System.Int32})">
            <summary>
            Gets Defined Types by Field Type Id
            </summary>
            <param name="fieldTypeId">Field Type Id.</param>
            <returns>An enumerable list of DefinedType objects.</returns>
        </member>
        <member name="M:Rock.Core.DefinedTypeService.GetByGuid(System.Guid)">
            <summary>
            Gets Defined Type by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>DefinedType object.</returns>
        </member>
        <member name="T:Rock.Core.DefinedValueDTO">
            <summary>
            Data Transfer Object for DefinedValue object
            </summary>
        </member>
        <member name="M:Rock.Core.DefinedValueDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Core.DefinedValueDTO.#ctor(Rock.Core.DefinedValue)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="definedValue"></param>
        </member>
        <member name="M:Rock.Core.DefinedValueDTO.CopyFromModel(Rock.Core.DefinedValue)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="definedValue"></param>
        </member>
        <member name="M:Rock.Core.DefinedValueDTO.CopyToModel(Rock.Core.DefinedValue)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="definedValue"></param>
        </member>
        <member name="T:Rock.Core.DefinedValueService">
            <summary>
            DefinedValue Service class
            </summary>
            <summary>
            Defined Value POCO Service class
            </summary>
        </member>
        <member name="M:Rock.Core.DefinedValueService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Core.DefinedValueService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Core.DefinedValueService.GetByDefinedTypeId(System.Int32)">
            <summary>
            Gets Defined Values by Defined Type Id
            </summary>
            <param name="definedTypeId">Defined Type Id.</param>
            <returns>An enumerable list of DefinedValue objects.</returns>
        </member>
        <member name="M:Rock.Core.DefinedValueService.GetByGuid(System.Guid)">
            <summary>
            Gets Defined Value by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>DefinedValue object.</returns>
        </member>
        <member name="T:Rock.Core.EntityChangeDTO">
            <summary>
            Data Transfer Object for EntityChange object
            </summary>
        </member>
        <member name="M:Rock.Core.EntityChangeDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Core.EntityChangeDTO.#ctor(Rock.Core.EntityChange)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="entityChange"></param>
        </member>
        <member name="M:Rock.Core.EntityChangeDTO.CopyFromModel(Rock.Core.EntityChange)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="entityChange"></param>
        </member>
        <member name="M:Rock.Core.EntityChangeDTO.CopyToModel(Rock.Core.EntityChange)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="entityChange"></param>
        </member>
        <member name="T:Rock.Core.EntityChangeService">
            <summary>
            EntityChange Service class
            </summary>
            <summary>
            Entity Change Service class
            </summary>
        </member>
        <member name="M:Rock.Core.EntityChangeService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Core.EntityChangeService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Core.EntityChangeService.GetByChangeSet(System.Guid)">
            <summary>
            Gets Entity Changes by Change Set
            </summary>
            <param name="changeSet">Change Set.</param>
            <returns>An enumerable list of EntityChange objects.</returns>
        </member>
        <member name="T:Rock.Core.ExceptionLogDTO">
            <summary>
            Data Transfer Object for ExceptionLog object
            </summary>
        </member>
        <member name="M:Rock.Core.ExceptionLogDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Core.ExceptionLogDTO.#ctor(Rock.Core.ExceptionLog)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="exceptionLog"></param>
        </member>
        <member name="M:Rock.Core.ExceptionLogDTO.CopyFromModel(Rock.Core.ExceptionLog)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="exceptionLog"></param>
        </member>
        <member name="M:Rock.Core.ExceptionLogDTO.CopyToModel(Rock.Core.ExceptionLog)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="exceptionLog"></param>
        </member>
        <member name="T:Rock.Core.ExceptionLogService">
            <summary>
            ExceptionLog Service class
            </summary>
            <summary>
            Exception Log POCO Service class
            </summary>
        </member>
        <member name="M:Rock.Core.ExceptionLogService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Core.ExceptionLogService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Core.ExceptionLogService.GetByParentId(System.Nullable{System.Int32})">
            <summary>
            Gets Exception Logs by Parent Id
            </summary>
            <param name="parentId">Parent Id.</param>
            <returns>An enumerable list of ExceptionLog objects.</returns>
        </member>
        <member name="M:Rock.Core.ExceptionLogService.GetByPersonId(System.Nullable{System.Int32})">
            <summary>
            Gets Exception Logs by Person Id
            </summary>
            <param name="personId">Person Id.</param>
            <returns>An enumerable list of ExceptionLog objects.</returns>
        </member>
        <member name="M:Rock.Core.ExceptionLogService.GetBySiteId(System.Nullable{System.Int32})">
            <summary>
            Gets Exception Logs by Site Id
            </summary>
            <param name="siteId">Site Id.</param>
            <returns>An enumerable list of ExceptionLog objects.</returns>
        </member>
        <member name="T:Rock.Core.FieldTypeDTO">
            <summary>
            Data Transfer Object for FieldType object
            </summary>
        </member>
        <member name="M:Rock.Core.FieldTypeDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Core.FieldTypeDTO.#ctor(Rock.Core.FieldType)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="fieldType"></param>
        </member>
        <member name="M:Rock.Core.FieldTypeDTO.CopyFromModel(Rock.Core.FieldType)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="fieldType"></param>
        </member>
        <member name="M:Rock.Core.FieldTypeDTO.CopyToModel(Rock.Core.FieldType)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="fieldType"></param>
        </member>
        <member name="T:Rock.Core.FieldTypeService">
            <summary>
            FieldType Service class
            </summary>
            <summary>
            Field Type POCO Service class
            </summary>
        </member>
        <member name="M:Rock.Core.FieldTypeService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Core.FieldTypeService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Core.FieldTypeService.GetByName(System.String)">
            <summary>
            Gets Field Types by Name
            </summary>
            <param name="name">Name.</param>
            <returns>An enumerable list of FieldType objects.</returns>
        </member>
        <member name="T:Rock.Core.MetricDTO">
            <summary>
            Data Transfer Object for Metric object
            </summary>
        </member>
        <member name="M:Rock.Core.MetricDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Core.MetricDTO.#ctor(Rock.Core.Metric)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="metric"></param>
        </member>
        <member name="M:Rock.Core.MetricDTO.CopyFromModel(Rock.Core.Metric)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="metric"></param>
        </member>
        <member name="M:Rock.Core.MetricDTO.CopyToModel(Rock.Core.Metric)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="metric"></param>
        </member>
        <member name="T:Rock.Core.MetricService">
            <summary>
            Metric Service class
            </summary>
            <summary>
            Metric POCO Service class
            </summary>
        </member>
        <member name="M:Rock.Core.MetricService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Core.MetricService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Core.MetricService.GetByType(System.Nullable{System.Boolean})">
            <summary>
            Gets Metrics by Type
            </summary>
            <param name="entity">Type.</param>
            <returns>An enumerable list of Metric objects.</returns>
        </member>
        <member name="M:Rock.Core.MetricService.GetById(System.Nullable{System.Int32})">
            <summary>
            Gets Metric by Id
            </summary>
            <param name="metricId">metricId.</param>
            <returns>Metric object.</returns>
        </member>
        <member name="M:Rock.Core.MetricService.GetByGuid(System.Guid)">
            <summary>
            Gets Metric by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>Metric object.</returns>
        </member>
        <member name="T:Rock.Core.MetricValue">
            <summary>
            MetricValue POCO Entity.
            </summary>
        </member>
        <member name="T:Rock.Data.IOrdered">
            <summary>
            Represents a model that supports specific ordering
            </summary>
        </member>
        <member name="P:Rock.Data.IOrdered.Order">
            <summary>
            Gets or sets the order.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="M:Rock.Core.MetricValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Core.MetricValue"/> class.
            </summary>
        </member>
        <member name="P:Rock.Core.MetricValue.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Core.MetricValue.MetricId">
            <summary>
            Gets or sets the MetricId.
            </summary>
            <value>
            MetricId.
            </value>
        </member>
        <member name="P:Rock.Core.MetricValue.Value">
            <summary>
            Gets or sets the Value.
            </summary>
            <value>
            Value.
            </value>
        </member>
        <member name="P:Rock.Core.MetricValue.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Core.MetricValue.xValue">
            <summary>
            Gets or sets the xValue.
            </summary>
            <value>
            xValue.
            </value>
        </member>
        <member name="P:Rock.Core.MetricValue.isDateBased">
            <summary>
            Gets or sets the isDateBased flag.
            </summary>
            <value>
            isDateBased.
            </value>
        </member>
        <member name="P:Rock.Core.MetricValue.Label">
            <summary>
            Gets or sets the Label.
            </summary>
            <value>
            Label.
            </value>
        </member>
        <member name="P:Rock.Core.MetricValue.Order">
            <summary>
            Gets or sets the Order.
            </summary>
            <value>
            Order.
            </value>
        </member>
        <member name="P:Rock.Core.MetricValue.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Core.MetricValue.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Core.MetricValue.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Core.MetricValue.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Core.MetricValue.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Core.MetricValue.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Core.MetricValue.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Core.MetricValue.ParentAuthority">
            <summary>
            Gets the parent authority.
            </summary>
        </member>
        <member name="T:Rock.Core.MetricValueConfiguration">
            <summary>
            MetricValue Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Core.MetricValueConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Core.MetricValueConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Core.MetricValueDTO">
            <summary>
            Data Transfer Object for MetricValue object
            </summary>
        </member>
        <member name="M:Rock.Core.MetricValueDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Core.MetricValueDTO.#ctor(Rock.Core.MetricValue)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="metricValue"></param>
        </member>
        <member name="M:Rock.Core.MetricValueDTO.CopyFromModel(Rock.Core.MetricValue)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="metricValue"></param>
        </member>
        <member name="M:Rock.Core.MetricValueDTO.CopyToModel(Rock.Core.MetricValue)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="metricValue"></param>
        </member>
        <member name="T:Rock.Core.MetricValueService">
            <summary>
            MetricValue Service class
            </summary>
            <summary>
            MetricValue POCO Service class
            </summary>
        </member>
        <member name="M:Rock.Core.MetricValueService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Core.MetricValueService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Core.MetricValueService.MetricId(System.Nullable{System.Int32})">
            <summary>
            Gets MetricValues by MetricId
            </summary>
            <param name="metricId">metricId.</param>
            <returns>An enumerable list of MetricValue objects.</returns>
        </member>
        <member name="M:Rock.Core.MetricValueService.GetByGuid(System.Guid)">
            <summary>
            Gets MetricValue by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>MetricValue object.</returns>
        </member>
        <member name="T:Rock.Core.Metric">
            <summary>
            Metric POCO Entity.
            </summary>
        </member>
        <member name="M:Rock.Core.Metric.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Core.Metric"/> class.
            </summary>
        </member>
        <member name="P:Rock.Core.Metric.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.Type">
            <summary>
            Gets or sets the Type.
            </summary>
            <value>
            Type.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.Category">
            <summary>
            Gets or sets the Category.
            </summary>
            <value>
            Category.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.Title">
            <summary>
            Gets or sets the Title.
            </summary>
            <value>
            Title.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.Subtitle">
            <summary>
            Gets or sets the Subtitle.
            </summary>
            <value>
            Subtitle.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.MinValue">
            <summary>
            Gets or sets the MinValue.
            </summary>
            <value>
            MinValue.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.MaxValue">
            <summary>
            Gets or sets the MaxValue.
            </summary>
            <value>
            MaxValue.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.CollectionFrequency">
            <summary>
            Gets or sets the CollectionFrequency.
            </summary>
            <value>
            CollectionFrequency.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.LastCollected">
            <summary>
            Gets or sets the LastCollected date.
            </summary>
            <value>
            LastCollected.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.Source">
            <summary>
            Gets or sets the Source.
            </summary>
            <value>
            Source.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.SourceSQL">
            <summary>
            Gets or sets the SourceSQL.
            </summary>
            <value>
            SourceSQL.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.Order">
            <summary>
            Gets or sets the Order.
            </summary>
            <value>
            Order.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Core.Metric.MetricValues">
            <summary>
            Gets or sets the Metric Values.
            </summary>
            <value>
            Collection of Metric Values.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Core.Metric.ParentAuthority">
            <summary>
            Gets the parent authority.
            </summary>
        </member>
        <member name="T:Rock.Core.MetricConfiguration">
            <summary>
            Metric Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Core.MetricConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Core.MetricConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Core.EntityChange">
            <summary>
            Entity Change POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Core.EntityChange.ChangeSet">
            <summary>
            Gets or sets the Change Set.
            </summary>
            <value>
            Change Set.
            </value>
        </member>
        <member name="P:Rock.Core.EntityChange.ChangeType">
            <summary>
            Gets or sets the Change Type.
            </summary>
            <value>
            Change Type.
            </value>
        </member>
        <member name="P:Rock.Core.EntityChange.EntityType">
            <summary>
            Gets or sets the Entity Type.
            </summary>
            <value>
            Entity Type.
            </value>
        </member>
        <member name="P:Rock.Core.EntityChange.EntityId">
            <summary>
            Gets or sets the Entity Id.
            </summary>
            <value>
            Entity Id.
            </value>
        </member>
        <member name="P:Rock.Core.EntityChange.Property">
            <summary>
            Gets or sets the Property.
            </summary>
            <value>
            Property.
            </value>
        </member>
        <member name="P:Rock.Core.EntityChange.OriginalValue">
            <summary>
            Gets or sets the Original Value.
            </summary>
            <value>
            Original Value.
            </value>
        </member>
        <member name="P:Rock.Core.EntityChange.CurrentValue">
            <summary>
            Gets or sets the Current Value.
            </summary>
            <value>
            Current Value.
            </value>
        </member>
        <member name="P:Rock.Core.EntityChange.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Core.EntityChange.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Core.EntityChange.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Core.EntityChange.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Core.EntityChangeConfiguration">
            <summary>
            Entity Change Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Core.EntityChangeConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Core.EntityChangeConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Core.ExceptionLog">
            <summary>
            Exception Log POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Core.ExceptionLog.ParentId">
            <summary>
            Gets or sets the Parent Id.
            </summary>
            <value>
            Parent Id of the exeption, used for linking inner exceptions..
            </value>
        </member>
        <member name="P:Rock.Core.ExceptionLog.SiteId">
            <summary>
            Gets or sets the Site Id.
            </summary>
            <value>
            Site Id that the exception occurred on..
            </value>
        </member>
        <member name="P:Rock.Core.ExceptionLog.PageId">
            <summary>
            Gets or sets the Page Id.
            </summary>
            <value>
            Page Id that the exception occurred on..
            </value>
        </member>
        <member name="P:Rock.Core.ExceptionLog.ExceptionDate">
            <summary>
            Gets or sets the Exception Date.
            </summary>
            <value>
            Date / time that the exception occurred..
            </value>
        </member>
        <member name="P:Rock.Core.ExceptionLog.HasInnerException">
            <summary>
            Gets or sets the Has Inner Exception.
            </summary>
            <value>
            Whether the exception has an inner exception..
            </value>
        </member>
        <member name="P:Rock.Core.ExceptionLog.PersonId">
            <summary>
            Gets or sets the Person Id.
            </summary>
            <value>
            Person Id of the logged in person who experienced the exception..
            </value>
        </member>
        <member name="P:Rock.Core.ExceptionLog.StatusCode">
            <summary>
            Gets or sets the Status Code.
            </summary>
            <value>
            Status code that would have been thrown (404, 500, etc).
            </value>
        </member>
        <member name="P:Rock.Core.ExceptionLog.ExceptionType">
            <summary>
            Gets or sets the Exception Type.
            </summary>
            <value>
            Name of the exception.
            </value>
        </member>
        <member name="P:Rock.Core.ExceptionLog.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            The exception message..
            </value>
        </member>
        <member name="P:Rock.Core.ExceptionLog.Source">
            <summary>
            Gets or sets the Source.
            </summary>
            <value>
            What assembly the exception occurred in..
            </value>
        </member>
        <member name="P:Rock.Core.ExceptionLog.StackTrace">
            <summary>
            Gets or sets the Stack Trace.
            </summary>
            <value>
            The stack trace that was produced..
            </value>
        </member>
        <member name="P:Rock.Core.ExceptionLog.PageUrl">
            <summary>
            Gets or sets the Page Url.
            </summary>
            <value>
            The URL of the page that generated the exception..
            </value>
        </member>
        <member name="P:Rock.Core.ExceptionLog.ServerVariables">
            <summary>
            Gets or sets the Server Variables.
            </summary>
            <value>
            Server variables at the time of the exception..
            </value>
        </member>
        <member name="P:Rock.Core.ExceptionLog.QueryString">
            <summary>
            Gets or sets the Query String.
            </summary>
            <value>
            Full query string..
            </value>
        </member>
        <member name="P:Rock.Core.ExceptionLog.Form">
            <summary>
            Gets or sets the Form.
            </summary>
            <value>
            Form items at the time of the exception..
            </value>
        </member>
        <member name="P:Rock.Core.ExceptionLog.Cookies">
            <summary>
            Gets or sets the Cookies.
            </summary>
            <value>
            Cookies at the time of the exception..
            </value>
        </member>
        <member name="P:Rock.Core.ExceptionLog.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Core.ExceptionLog.Person">
            <summary>
            Gets or sets the Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Core.ExceptionLogConfiguration">
            <summary>
            Exception Log Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Core.ExceptionLogConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Core.ExceptionLogConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Core.ServiceLogDTO">
            <summary>
            Data Transfer Object for ServiceLog object
            </summary>
        </member>
        <member name="M:Rock.Core.ServiceLogDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Core.ServiceLogDTO.#ctor(Rock.Core.ServiceLog)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="serviceLog"></param>
        </member>
        <member name="M:Rock.Core.ServiceLogDTO.CopyFromModel(Rock.Core.ServiceLog)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="serviceLog"></param>
        </member>
        <member name="M:Rock.Core.ServiceLogDTO.CopyToModel(Rock.Core.ServiceLog)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="serviceLog"></param>
        </member>
        <member name="T:Rock.Core.ServiceLogService">
            <summary>
            ServiceLog Service class
            </summary>
        </member>
        <member name="M:Rock.Core.ServiceLogService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Core.ServiceLogService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="T:Rock.CRM.AddressDTO">
            <summary>
            Data Transfer Object for Address object
            </summary>
        </member>
        <member name="M:Rock.CRM.AddressDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.CRM.AddressDTO.#ctor(Rock.CRM.Address)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="address"></param>
        </member>
        <member name="M:Rock.CRM.AddressDTO.CopyFromModel(Rock.CRM.Address)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="address"></param>
        </member>
        <member name="M:Rock.CRM.AddressDTO.CopyToModel(Rock.CRM.Address)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="address"></param>
        </member>
        <member name="T:Rock.CRM.AddressService">
            <summary>
            Address Service class
            </summary>
            <summary>
            Address POCO Service class
            </summary>
        </member>
        <member name="M:Rock.CRM.AddressService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.CRM.AddressService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.CRM.AddressService.GetByRaw(System.String)">
            <summary>
            Gets Address by Raw
            </summary>
            <param name="raw">Raw.</param>
            <returns>Address object.</returns>
        </member>
        <member name="M:Rock.CRM.AddressService.GetByStreet1AndStreet2AndCityAndStateAndZip(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets Address by Street 1 And Street 2 And City And State And Zip
            </summary>
            <param name="street1">Street 1.</param>
            <param name="street2">Street 2.</param>
            <param name="city">City.</param>
            <param name="state">State.</param>
            <param name="zip">Zip.</param>
            <returns>Address object.</returns>
        </member>
        <member name="M:Rock.CRM.AddressService.Standardize(Rock.CRM.AddressDTO,System.Nullable{System.Int32})">
            <summary>
            Standardizes the specified <see cref="!:Rock.CRM.DTO.Address"/>
            </summary>
            <param name="address">The address.</param>
            <param name="personId">The person id.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.CRM.AddressService.Standardize(Rock.CRM.Address,System.Nullable{System.Int32})">
            <summary>
            Standardizes the specified <see cref="T:Rock.CRM.Address"/>
            </summary>
            <param name="address">The address.</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.CRM.AddressService.Geocode(Rock.CRM.AddressDTO,System.Nullable{System.Int32})">
            <summary>
            Geocodes the specified <see cref="!:Rock.CRM.DTO.Address"/>
            </summary>
            <param name="address">The address.</param>
            <param name="personId">The person id.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.CRM.AddressService.Geocode(Rock.CRM.Address,System.Nullable{System.Int32})">
            <summary>
            Geocodes the specified <see cref="T:Rock.CRM.Address"/>
            </summary>
            <param name="address">The address.</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.CRM.AddressService.GetByAddressDTO(Rock.CRM.AddressDTO,System.Nullable{System.Int32})">
            <summary>
            Looks for an existing address model first by searching for a raw value, and then by the street, 
            city, state, and zip of the specified address stub.  If a match is not found, then a new address
            block is returned.
            </summary>
            <param name="address">The address.</param>
            <param name="personId">The person id.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.CRM.Campus">
            <summary>
            Campus POCO Entity.
            </summary>
        </member>
        <member name="M:Rock.CRM.Campus.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Rock.CRM.Campus.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.CRM.Campus.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Given Name.
            </value>
        </member>
        <member name="P:Rock.CRM.Campus.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.CRM.Campus.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.CRM.Campus.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.CRM.Campus.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.CRM.Campus.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="T:Rock.CRM.CampusConfiguration">
            <summary>
            Campus Configuration class.
            </summary>
        </member>
        <member name="M:Rock.CRM.CampusConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.CRM.CampusConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.CRM.CampusDTO">
            <summary>
            Data Transfer Object for Campus object
            </summary>
        </member>
        <member name="M:Rock.CRM.CampusDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.CRM.CampusDTO.#ctor(Rock.CRM.Campus)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="campus"></param>
        </member>
        <member name="M:Rock.CRM.CampusDTO.CopyFromModel(Rock.CRM.Campus)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="campus"></param>
        </member>
        <member name="M:Rock.CRM.CampusDTO.CopyToModel(Rock.CRM.Campus)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="campus"></param>
        </member>
        <member name="T:Rock.CRM.CampusService">
            <summary>
            Campus Service class
            </summary>
        </member>
        <member name="M:Rock.CRM.CampusService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.CRM.CampusService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="T:Rock.CRM.EmailTemplateDTO">
            <summary>
            Data Transfer Object for EmailTemplate object
            </summary>
        </member>
        <member name="M:Rock.CRM.EmailTemplateDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.CRM.EmailTemplateDTO.#ctor(Rock.CRM.EmailTemplate)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="emailTemplate"></param>
        </member>
        <member name="M:Rock.CRM.EmailTemplateDTO.CopyFromModel(Rock.CRM.EmailTemplate)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="emailTemplate"></param>
        </member>
        <member name="M:Rock.CRM.EmailTemplateDTO.CopyToModel(Rock.CRM.EmailTemplate)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="emailTemplate"></param>
        </member>
        <member name="T:Rock.CRM.EmailTemplateService">
            <summary>
            EmailTemplate Service class
            </summary>
            <summary>
            Email Template POCO Service class
            </summary>
        </member>
        <member name="M:Rock.CRM.EmailTemplateService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.CRM.EmailTemplateService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.CRM.EmailTemplateService.GetByGuid(System.Guid)">
            <summary>
            Gets Email Template by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>EmailTemplate object.</returns>
        </member>
        <member name="M:Rock.CRM.EmailTemplateService.GetByPersonId(System.Nullable{System.Int32})">
            <summary>
            Gets Email Templates by Person Id
            </summary>
            <param name="personId">Person Id.</param>
            <returns>An enumerable list of EmailTemplate objects.</returns>
        </member>
        <member name="T:Rock.CRM.PersonDTO">
            <summary>
            Data Transfer Object for Person object
            </summary>
        </member>
        <member name="M:Rock.CRM.PersonDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.CRM.PersonDTO.#ctor(Rock.CRM.Person)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="person"></param>
        </member>
        <member name="M:Rock.CRM.PersonDTO.CopyFromModel(Rock.CRM.Person)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="person"></param>
        </member>
        <member name="M:Rock.CRM.PersonDTO.CopyToModel(Rock.CRM.Person)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="person"></param>
        </member>
        <member name="T:Rock.CRM.PersonMergedDTO">
            <summary>
            Data Transfer Object for PersonMerged object
            </summary>
        </member>
        <member name="M:Rock.CRM.PersonMergedDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.CRM.PersonMergedDTO.#ctor(Rock.CRM.PersonMerged)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="personMerged"></param>
        </member>
        <member name="M:Rock.CRM.PersonMergedDTO.CopyFromModel(Rock.CRM.PersonMerged)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="personMerged"></param>
        </member>
        <member name="M:Rock.CRM.PersonMergedDTO.CopyToModel(Rock.CRM.PersonMerged)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="personMerged"></param>
        </member>
        <member name="T:Rock.CRM.PersonMergedService">
            <summary>
            PersonMerged Service class
            </summary>
            <summary>
            Person Trail POCO Service class
            </summary>
        </member>
        <member name="M:Rock.CRM.PersonMergedService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.CRM.PersonMergedService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.CRM.PersonMergedService.GetByCurrentId(System.Int32)">
            <summary>
            Gets Person Trails by Current Id
            </summary>
            <param name="currentId">Current Id.</param>
            <returns>An enumerable list of PersonMerged objects.</returns>
        </member>
        <member name="M:Rock.CRM.PersonMergedService.Current(System.String)">
            <summary>
            Get's the current person Guid
            </summary>
            <param name="guid">The GUID.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.CRM.PersonMergedService.Current(System.Int32)">
            <summary>
            Get's the current person id
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.CRM.PersonService">
            <summary>
            Person Service class
            </summary>
            <summary>
            Person POCO Service class
            </summary>
        </member>
        <member name="M:Rock.CRM.PersonService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.CRM.PersonService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.CRM.PersonService.GetByEmail(System.String)">
            <summary>
            Gets People by Email
            </summary>
            <param name="email">Email.</param>
            <returns>An enumerable list of Person objects.</returns>
        </member>
        <member name="M:Rock.CRM.PersonService.GetByMaritalStatusId(System.Nullable{System.Int32})">
            <summary>
            Gets People by Marital Status Id
            </summary>
            <param name="maritalStatusId">Marital Status Id.</param>
            <returns>An enumerable list of Person objects.</returns>
        </member>
        <member name="M:Rock.CRM.PersonService.GetByPersonStatusId(System.Nullable{System.Int32})">
            <summary>
            Gets People by Person Status Id
            </summary>
            <param name="personStatusId">Person Status Id.</param>
            <returns>An enumerable list of Person objects.</returns>
        </member>
        <member name="M:Rock.CRM.PersonService.GetByRecordStatusId(System.Nullable{System.Int32})">
            <summary>
            Gets People by Record Status Id
            </summary>
            <param name="recordStatusId">Record Status Id.</param>
            <returns>An enumerable list of Person objects.</returns>
        </member>
        <member name="M:Rock.CRM.PersonService.GetByRecordStatusReasonId(System.Nullable{System.Int32})">
            <summary>
            Gets People by Record Status Reason Id
            </summary>
            <param name="recordStatusReasonId">Record Status Reason Id.</param>
            <returns>An enumerable list of Person objects.</returns>
        </member>
        <member name="M:Rock.CRM.PersonService.GetByRecordTypeId(System.Nullable{System.Int32})">
            <summary>
            Gets People by Record Type Id
            </summary>
            <param name="recordTypeId">Record Type Id.</param>
            <returns>An enumerable list of Person objects.</returns>
        </member>
        <member name="M:Rock.CRM.PersonService.GetBySuffixId(System.Nullable{System.Int32})">
            <summary>
            Gets People by Suffix Id
            </summary>
            <param name="suffixId">Suffix Id.</param>
            <returns>An enumerable list of Person objects.</returns>
        </member>
        <member name="M:Rock.CRM.PersonService.GetByTitleId(System.Nullable{System.Int32})">
            <summary>
            Gets People by Title Id
            </summary>
            <param name="titleId">Title Id.</param>
            <returns>An enumerable list of Person objects.</returns>
        </member>
        <member name="M:Rock.CRM.PersonService.GetByFullName(System.String)">
            <summary>
            Gets a list of people with a matching full name
            </summary>
            <param name="fullName">The full name.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.CRM.PersonService.GetByEncryptedID(System.String)">
            <summary>
            Gets the by encrypted ID.
            </summary>
            <param name="encryptedID">The encrypted ID.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.CRM.PersonService.Get(System.Int32,System.Boolean)">
            <summary>
            Gets Person by Id
            </summary>
            <param name="id">The id.</param>
            <param name="followTrail">if set to <c>true</c> follow the merge trail.</param>
            <returns>
            Person object.
            </returns>
        </member>
        <member name="M:Rock.CRM.PersonService.GetByEncryptedKey(System.String,System.Boolean)">
            <summary>
            Gets Person by Guid
            </summary>
            <param name="publicKey">The public key.</param>
            <param name="followTrail">if set to <c>true</c> follow the merge trail</param>
            <returns>
            Person object.
            </returns>
        </member>
        <member name="T:Rock.CRM.PersonMerged">
            <summary>
            Person Trail POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.CRM.PersonMerged.CurrentId">
            <summary>
            Gets or sets the Current Id.
            </summary>
            <value>
            Current Id.
            </value>
        </member>
        <member name="P:Rock.CRM.PersonMerged.CurrentGuid">
            <summary>
            Gets or sets the Current Guid.
            </summary>
            <value>
            Current Guid.
            </value>
        </member>
        <member name="P:Rock.CRM.PersonMerged.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.CRM.PersonMerged.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.CRM.PersonMerged.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.CRM.PersonMerged.CurrentPublicKey">
            <summary>
            Gets a publicly viewable unique key for the model.
            </summary>
        </member>
        <member name="T:Rock.CRM.PersonMergedConfiguration">
            <summary>
            Person Trail Configuration class.
            </summary>
        </member>
        <member name="M:Rock.CRM.PersonMergedConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.CRM.PersonMergedConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.CRM.PersonViewed">
            <summary>
            Person Viewed POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.CRM.PersonViewed.ViewerPersonId">
            <summary>
            Gets or sets the Viewer Person Id.
            </summary>
            <value>
            Viewer Person Id.
            </value>
        </member>
        <member name="P:Rock.CRM.PersonViewed.TargetPersonId">
            <summary>
            Gets or sets the Target Person Id.
            </summary>
            <value>
            Target Person Id.
            </value>
        </member>
        <member name="P:Rock.CRM.PersonViewed.ViewDateTime">
            <summary>
            Gets or sets the View Date Time.
            </summary>
            <value>
            View Date Time.
            </value>
        </member>
        <member name="P:Rock.CRM.PersonViewed.IpAddress">
            <summary>
            Gets or sets the Ip Address.
            </summary>
            <value>
            Ip Address.
            </value>
        </member>
        <member name="P:Rock.CRM.PersonViewed.Source">
            <summary>
            Gets or sets the Source.
            </summary>
            <value>
            Source.
            </value>
        </member>
        <member name="P:Rock.CRM.PersonViewed.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.CRM.PersonViewed.ViewerPerson">
            <summary>
            Gets or sets the Viewer Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CRM.PersonViewed.TargetPerson">
            <summary>
            Gets or sets the Target Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.CRM.PersonViewedConfiguration">
            <summary>
            Person Viewed Configuration class.
            </summary>
        </member>
        <member name="M:Rock.CRM.PersonViewedConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.CRM.PersonViewedConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.CRM.PersonViewedDTO">
            <summary>
            Data Transfer Object for PersonViewed object
            </summary>
        </member>
        <member name="M:Rock.CRM.PersonViewedDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.CRM.PersonViewedDTO.#ctor(Rock.CRM.PersonViewed)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="personViewed"></param>
        </member>
        <member name="M:Rock.CRM.PersonViewedDTO.CopyFromModel(Rock.CRM.PersonViewed)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="personViewed"></param>
        </member>
        <member name="M:Rock.CRM.PersonViewedDTO.CopyToModel(Rock.CRM.PersonViewed)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="personViewed"></param>
        </member>
        <member name="T:Rock.CRM.PersonViewedService">
            <summary>
            PersonViewed Service class
            </summary>
            <summary>
            Person Viewed POCO Service class
            </summary>
        </member>
        <member name="M:Rock.CRM.PersonViewedService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.CRM.PersonViewedService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.CRM.PersonViewedService.GetByTargetPersonId(System.Nullable{System.Int32})">
            <summary>
            Gets Person Vieweds by Target Person Id
            </summary>
            <param name="targetPersonId">Target Person Id.</param>
            <returns>An enumerable list of PersonViewed objects.</returns>
        </member>
        <member name="M:Rock.CRM.PersonViewedService.GetByViewerPersonId(System.Nullable{System.Int32})">
            <summary>
            Gets Person Vieweds by Viewer Person Id
            </summary>
            <param name="viewerPersonId">Viewer Person Id.</param>
            <returns>An enumerable list of PersonViewed objects.</returns>
        </member>
        <member name="T:Rock.CRM.PhoneNumberDTO">
            <summary>
            Data Transfer Object for PhoneNumber object
            </summary>
        </member>
        <member name="M:Rock.CRM.PhoneNumberDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.CRM.PhoneNumberDTO.#ctor(Rock.CRM.PhoneNumber)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="phoneNumber"></param>
        </member>
        <member name="M:Rock.CRM.PhoneNumberDTO.CopyFromModel(Rock.CRM.PhoneNumber)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="phoneNumber"></param>
        </member>
        <member name="M:Rock.CRM.PhoneNumberDTO.CopyToModel(Rock.CRM.PhoneNumber)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="phoneNumber"></param>
        </member>
        <member name="T:Rock.CRM.PhoneNumberService">
            <summary>
            PhoneNumber Service class
            </summary>
            <summary>
            Phone Number POCO Service class
            </summary>
        </member>
        <member name="M:Rock.CRM.PhoneNumberService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.CRM.PhoneNumberService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.CRM.PhoneNumberService.GetByPersonId(System.Int32)">
            <summary>
            Gets Phone Numbers by Person Id
            </summary>
            <param name="personId">Person Id.</param>
            <returns>An enumerable list of PhoneNumber objects.</returns>
        </member>
        <member name="T:Rock.Data.IRepository`1">
            <summary>
            Repository interface for POCO models
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rock.Data.IRepository`1.AsQueryable">
            <summary>
            Gets an <see cref="T:System.Linq.IQueryable`1"/> list of all models
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.IRepository`1.GetAll">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> list of all models.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.IRepository`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> list of models matching the where expression
            </summary>
            <param name="where">where expression</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.IRepository`1.Single(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets the only model matching the where expression.  Throws an exception if more than one
            model match.
            </summary>
            <param name="where">where expression</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.IRepository`1.First(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets the first model matching the where expression.  Throws an exception if no models 
            match.
            </summary>
            <param name="where">where expression</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.IRepository`1.FirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets the first model matching the where expression.  Returns null if no models 
            match.
            </summary>
            <param name="where">where expression</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.IRepository`1.Add(`0)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Rock.Data.IRepository`1.Attach(`0)">
            <summary>
            Attaches the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Rock.Data.IRepository`1.Delete(`0)">
            <summary>
            Deletes the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Rock.Data.IRepository`1.Save(System.Nullable{System.Int32})">
            <summary>
            Saves any changes made in the current context
            </summary>
            <param name="personId">The person id.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Extension.Component">
            <summary>
            Abstract class that custom component classes should derive from.  
            <example>
            The derived class should define the following type attributes
            </example>
            <code>
                [Description("<i>description of component</i>")]
                [Export( typeof( Component ) )]
                [ExportMetadata( "ComponentName", "<i>Name of Component</i>" )]
            </code>
            <example>
            The derived class can also optionally define one or more property type attributes
            </example>
            <code>
                [Rock.Attribute.Property( 1, "License Key", "The Required License Key" )]
            </code>
            <example>
            To get the value of a property, the derived class can use the AttributeValues property
            </example>
            <code>
                string licenseKey = AttributeValues["LicenseKey"].Value;
            </code>
            </summary>
        </member>
        <member name="M:Rock.Extension.Component.AttributeValue(System.String)">
            <summary>
            Gets the first value for an Attributes
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Extension.Component.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Extension.Component"/> class.
            </summary>
        </member>
        <member name="P:Rock.Extension.Component.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Extension.Component.Attributes">
            <summary>
            List of attributes associated with the object grouped by category.  This property will not include
            the attribute values. The <see cref="P:Rock.Extension.Component.AttributeValues"/> property should be used to get attribute values
            </summary>
            <value>
            The attributes.
            </value>
        </member>
        <member name="P:Rock.Extension.Component.AttributeValues">
            <summary>
            Dictionary of all attributes and their values.
            </summary>
            <value>
            The attribute values.
            </value>
        </member>
        <member name="P:Rock.Extension.Component.Order">
            <summary>
            Gets the order.
            </summary>
        </member>
        <member name="T:Rock.Extension.IComponentData">
            <summary>
            Component Metadata
            </summary>
        </member>
        <member name="P:Rock.Extension.IComponentData.ComponentName">
            <summary>
            Gets the name of the component.
            </summary>
            <value>
            The name of the component.
            </value>
        </member>
        <member name="T:Rock.Address.Geocode.TelaAtlas">
            <summary>
            The EZ-Locate geocoding service from <a href="http://www.geocode.com/">Tele Atlas</a>
            </summary>
        </member>
        <member name="T:Rock.Address.GeocodeComponent">
            <summary>
            The base class for all address geocoding components
            </summary>
        </member>
        <member name="M:Rock.Address.GeocodeComponent.Geocode(Rock.CRM.Address,System.String@)">
            <summary>
            Abstract method for geocoding the specified address.  Derived classes should implement
            this method to geocode the address.
            </summary>
            <param name="address">The address.</param>
            <param name="result">The result code unique to the service.</param>
            <returns>
            True/False value of whether the address was standardized succesfully
            </returns>
        </member>
        <member name="M:Rock.Address.Geocode.TelaAtlas.Geocode(Rock.CRM.Address,System.String@)">
            <summary>
            Geocodes the specified address.
            </summary>
            <param name="address">The address.</param>
            <param name="result">The result.</param>
            <returns>
            True/False value of whether the address was standardized was succesfully
            </returns>
        </member>
        <member name="T:Rock.Extension.ComponentDescription">
            <summary>
            Helper class for wrapping the properties of a MEF class to use in databinding
            </summary>
        </member>
        <member name="M:Rock.Extension.ComponentDescription.#ctor(System.Int32,Rock.Attribute.IHasAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Extension.ComponentDescription"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="service">The service.</param>
        </member>
        <member name="P:Rock.Extension.ComponentDescription.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Rock.Extension.ComponentDescription.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Rock.Extension.ComponentDescription.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Rock.Extension.ComponentDescription.IsActive">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Rock.Extension.ComponentDescription"/> is active.
            </summary>
            <value>
              <c>true</c> if active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Rock.Address.Standardize.MelissaData">
            <summary>
            The AddressCheck service from <a href="http://www.melissadata.com/">Melissa Data</a>
            </summary>
        </member>
        <member name="T:Rock.Address.StandardizeComponent">
            <summary>
            The base class for all address standardization components
            </summary>
        </member>
        <member name="M:Rock.Address.StandardizeComponent.Standardize(Rock.CRM.Address,System.String@)">
            <summary>
            Abstract method for standardizing the specified address.  Derived classes should implement
            this method to standardize the address.
            </summary>
            <param name="address">The address.</param>
            <param name="result">The result code unique to the service.</param>
            <returns>
            True/False value of whether the address was standardized succesfully
            </returns>
        </member>
        <member name="M:Rock.Address.Standardize.MelissaData.Standardize(Rock.CRM.Address,System.String@)">
            <summary>
            Standardizes the address
            </summary>
            <param name="address">The address.</param>
            <param name="result">The AddressCheck result code</param>
            <returns>
            True/False value of whether the address was standardized succesfully
            </returns>
        </member>
        <member name="T:Rock.Address.Standardize.StrikeIron">
            <summary>
            The USAddressVerification service from <a href="http://www.strikeiron.com/Home.aspx">StrikeIron</a>
            </summary>
        </member>
        <member name="M:Rock.Address.Standardize.StrikeIron.Standardize(Rock.CRM.Address,System.String@)">
            <summary>
            Standardizes the specified address.
            </summary>
            <remarks>
            The StrikeIron address verification will also attempt to geocode the address.  If this 
            geocode is succesful, the Geocode information of the address will be updated also.
            </remarks>
            <param name="address">The address.</param>
            <param name="result">The result.</param>
            <returns>
            True/False value of whether the address was standardized was succesfully
            </returns>
        </member>
        <member name="T:Rock.Address.StandardizeContainer">
            <summary>
            Singleton class that uses MEF to load and cache all of the StandardizeComponent classes
            </summary>
        </member>
        <member name="P:Rock.Address.StandardizeContainer.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="T:Rock.Address.Geocode.StrikeIron">
            <summary>
            The USAddressVerification service from <a href="http://www.strikeiron.com/Home.aspx">StrikeIron</a>
            </summary>
        </member>
        <member name="M:Rock.Address.Geocode.StrikeIron.Geocode(Rock.CRM.Address,System.String@)">
            <summary>
            Geocodes the specified address.
            </summary>
            <param name="address">The address.</param>
            <param name="result">The result.</param>
            <returns>
            True/False value of whether the address was standardized was succesfully
            </returns>
        </member>
        <member name="T:Rock.Address.Geocode.ServiceObjects">
            <summary>
            Geocoder service from <a href="http://www.serviceobjects.com">ServiceObjects</a>
            </summary>
        </member>
        <member name="M:Rock.Address.Geocode.ServiceObjects.Geocode(Rock.CRM.Address,System.String@)">
            <summary>
            Geocodes the specified address.
            </summary>
            <param name="address">The address.</param>
            <param name="result">The ServiceObjects result.</param>
            <returns>
            True/False value of whether the address was standardized succesfully
            </returns>
        </member>
        <member name="T:Rock.CMS.Auth">
            <summary>
            Auth POCO Entity.
            </summary>
        </member>
        <member name="M:Rock.CMS.Auth.IsAllowedByDefault(System.String)">
            <summary>
            The default authorization for a specific action.
            </summary>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="P:Rock.CMS.Auth.EntityType">
            <summary>
            Gets or sets the Entity Type.
            </summary>
            <value>
            Entity Type.
            </value>
        </member>
        <member name="P:Rock.CMS.Auth.EntityId">
            <summary>
            Gets or sets the Entity Id.
            </summary>
            <value>
            Entity Id.
            </value>
        </member>
        <member name="P:Rock.CMS.Auth.Order">
            <summary>
            Gets or sets the Order.
            </summary>
            <value>
            Order.
            </value>
        </member>
        <member name="P:Rock.CMS.Auth.Action">
            <summary>
            Gets or sets the Action.
            </summary>
            <value>
            Action.
            </value>
        </member>
        <member name="P:Rock.CMS.Auth.AllowOrDeny">
            <summary>
            Gets or sets the Allow Or Deny.
            </summary>
            <value>
            A = Allow, D = Deny.
            </value>
        </member>
        <member name="P:Rock.CMS.Auth.SpecialRole">
            <summary>
            Gets or sets the Special Role.
            </summary>
            <value>
            Enum[SpecialRole].
            </value>
        </member>
        <member name="P:Rock.CMS.Auth.PersonId">
            <summary>
            Gets or sets the Person Id.
            </summary>
            <value>
            Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.Auth.GroupId">
            <summary>
            Gets or sets the Group Id.
            </summary>
            <value>
            Group Id.
            </value>
        </member>
        <member name="P:Rock.CMS.Auth.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.Auth.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.Auth.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.Auth.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.Auth.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.CMS.Auth.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.Auth.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.Auth.Group">
            <summary>
            Gets or sets the Group.
            </summary>
            <value>
            A <see cref="T:Rock.Groups.Group"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.Auth.Person">
            <summary>
            Gets or sets the Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.CMS.AuthConfiguration">
            <summary>
            Auth Configuration class.
            </summary>
        </member>
        <member name="M:Rock.CMS.AuthConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.CMS.AuthConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.CMS.SpecialRole">
            <summary>
            Authorization for a special group of users not defined by a specific role or person
            </summary>
        </member>
        <member name="F:Rock.CMS.SpecialRole.None">
            <summary>
            No special role
            </summary>
        </member>
        <member name="F:Rock.CMS.SpecialRole.AllUsers">
            <summary>
            Authorize all users
            </summary>
        </member>
        <member name="F:Rock.CMS.SpecialRole.AllAuthenticatedUsers">
            <summary>
            Authorize all authenticated users
            </summary>
        </member>
        <member name="F:Rock.CMS.SpecialRole.AllUnAuthenticatedUsers">
            <summary>
            Authorize all un-authenticated users
            </summary>
        </member>
        <member name="T:Rock.CMS.Block">
            <summary>
            Block POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.CMS.Block.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.CMS.Block.Path">
            <summary>
            Gets or sets the Path.
            </summary>
            <value>
            Path.
            </value>
        </member>
        <member name="P:Rock.CMS.Block.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.CMS.Block.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.CMS.Block.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.Block.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.Block.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.Block.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.Block.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.CMS.Block.BlockInstances">
            <summary>
            Gets or sets the Block Instances.
            </summary>
            <value>
            Collection of Block Instances.
            </value>
        </member>
        <member name="P:Rock.CMS.Block.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.Block.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.CMS.BlockConfiguration">
            <summary>
            Block Configuration class.
            </summary>
        </member>
        <member name="M:Rock.CMS.BlockConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.CMS.BlockConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.CMS.BlockInstance">
            <summary>
            Block Instance POCO Entity.
            </summary>
        </member>
        <member name="M:Rock.CMS.BlockInstance.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Rock.CMS.BlockInstance.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.CMS.BlockInstance.PageId">
            <summary>
            Gets or sets the Page Id.
            </summary>
            <value>
            Page Id.
            </value>
        </member>
        <member name="P:Rock.CMS.BlockInstance.Layout">
            <summary>
            Gets or sets the Layout.
            </summary>
            <value>
            Layout.
            </value>
        </member>
        <member name="P:Rock.CMS.BlockInstance.BlockId">
            <summary>
            Gets or sets the Block Id.
            </summary>
            <value>
            Block Id.
            </value>
        </member>
        <member name="P:Rock.CMS.BlockInstance.Zone">
            <summary>
            Gets or sets the Zone.
            </summary>
            <value>
            Zone.
            </value>
        </member>
        <member name="P:Rock.CMS.BlockInstance.Order">
            <summary>
            Gets or sets the Order.
            </summary>
            <value>
            Order.
            </value>
        </member>
        <member name="P:Rock.CMS.BlockInstance.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.CMS.BlockInstance.OutputCacheDuration">
            <summary>
            Gets or sets the Output Cache Duration.
            </summary>
            <value>
            Output Cache Duration.
            </value>
        </member>
        <member name="P:Rock.CMS.BlockInstance.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.BlockInstance.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.BlockInstance.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.BlockInstance.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.BlockInstance.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.CMS.BlockInstance.HtmlContents">
            <summary>
            Gets or sets the Html Contents.
            </summary>
            <value>
            Collection of Html Contents.
            </value>
        </member>
        <member name="P:Rock.CMS.BlockInstance.Block">
            <summary>
            Gets or sets the Block.
            </summary>
            <value>
            A <see cref="P:Rock.CMS.BlockInstance.Block"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.BlockInstance.Page">
            <summary>
            Gets or sets the Page.
            </summary>
            <value>
            A <see cref="P:Rock.CMS.BlockInstance.Page"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.BlockInstance.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.BlockInstance.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.BlockInstance.SupportedActions">
            <summary>
            Gets the supported actions.
            </summary>
        </member>
        <member name="T:Rock.CMS.BlockInstanceConfiguration">
            <summary>
            Block Instance Configuration class.
            </summary>
        </member>
        <member name="M:Rock.CMS.BlockInstanceConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.CMS.BlockInstanceConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.CMS.File">
            <summary>
            File POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.CMS.File.IsTemporary">
            <summary>
            Gets or sets the Temporary.
            </summary>
            <value>
            Temporary.
            </value>
        </member>
        <member name="P:Rock.CMS.File.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.CMS.File.Data">
            <summary>
            Gets or sets the Data.
            </summary>
            <value>
            Data.
            </value>
        </member>
        <member name="P:Rock.CMS.File.Url">
            <summary>
            Gets or sets the Url.
            </summary>
            <value>
            Url.
            </value>
        </member>
        <member name="P:Rock.CMS.File.FileName">
            <summary>
            Gets or sets the File Name.
            </summary>
            <value>
            File Name.
            </value>
        </member>
        <member name="P:Rock.CMS.File.MimeType">
            <summary>
            Gets or sets the Mime Type.
            </summary>
            <value>
            Mime Type.
            </value>
        </member>
        <member name="P:Rock.CMS.File.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.CMS.File.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.File.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.File.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.File.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.File.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.CMS.File.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.File.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.CMS.FileConfiguration">
            <summary>
            File Configuration class.
            </summary>
        </member>
        <member name="M:Rock.CMS.FileConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.CMS.FileConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.CMS.HtmlContent">
            <summary>
            Html Content POCO Entity.
            </summary>
        </member>
        <member name="M:Rock.CMS.HtmlContent.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Rock.CMS.HtmlContent.BlockId">
            <summary>
            Gets or sets the Block Id.
            </summary>
            <value>
            Block Id.
            </value>
        </member>
        <member name="P:Rock.CMS.HtmlContent.EntityValue">
            <summary>
            Gets or sets the Entity Value.
            </summary>
            <value>
            Entity Value.
            </value>
        </member>
        <member name="P:Rock.CMS.HtmlContent.Version">
            <summary>
            Gets or sets the Version.
            </summary>
            <value>
            Version.
            </value>
        </member>
        <member name="P:Rock.CMS.HtmlContent.Content">
            <summary>
            Gets or sets the Content.
            </summary>
            <value>
            Content.
            </value>
        </member>
        <member name="P:Rock.CMS.HtmlContent.IsApproved">
            <summary>
            Gets or sets the Approved.
            </summary>
            <value>
            Approved.
            </value>
        </member>
        <member name="P:Rock.CMS.HtmlContent.ApprovedByPersonId">
            <summary>
            Gets or sets the Approved By Person Id.
            </summary>
            <value>
            Approved By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.HtmlContent.ApprovedDateTime">
            <summary>
            Gets or sets the Approved Date Time.
            </summary>
            <value>
            Approved Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.HtmlContent.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.HtmlContent.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.HtmlContent.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.HtmlContent.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.HtmlContent.StartDateTime">
            <summary>
            Gets or sets the Start Date Time.
            </summary>
            <value>
            Start Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.HtmlContent.ExpireDateTime">
            <summary>
            Gets or sets the Expire Date Time.
            </summary>
            <value>
            Expire Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.HtmlContent.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.CMS.HtmlContent.Block">
            <summary>
            Gets or sets the Block.
            </summary>
            <value>
            A <see cref="T:Rock.CMS.BlockInstance"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.HtmlContent.ApprovedByPerson">
            <summary>
            Gets or sets the Approved By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.HtmlContent.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.HtmlContent.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.CMS.HtmlContentConfiguration">
            <summary>
            Html Content Configuration class.
            </summary>
        </member>
        <member name="M:Rock.CMS.HtmlContentConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.CMS.HtmlContentConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.CMS.Page">
            <summary>
            Page POCO Entity.
            </summary>
        </member>
        <member name="M:Rock.CMS.Page.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Rock.CMS.Page.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.Title">
            <summary>
            Gets or sets the Title.
            </summary>
            <value>
            Title.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.ParentPageId">
            <summary>
            Gets or sets the Parent Page Id.
            </summary>
            <value>
            Parent Page Id.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.SiteId">
            <summary>
            Gets or sets the Site Id.
            </summary>
            <value>
            Site Id.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.Layout">
            <summary>
            Gets or sets the Layout.
            </summary>
            <value>
            Layout.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.RequiresEncryption">
            <summary>
            Gets or sets the Requires Encryption.
            </summary>
            <value>
            Requires Encryption.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.EnableViewState">
            <summary>
            Gets or sets the Enable View State.
            </summary>
            <value>
            Enable View State.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.MenuDisplayDescription">
            <summary>
            Gets or sets the Menu Display Description.
            </summary>
            <value>
            Menu Display Description.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.MenuDisplayIcon">
            <summary>
            Gets or sets the Menu Display Icon.
            </summary>
            <value>
            Menu Display Icon.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.MenuDisplayChildPages">
            <summary>
            Gets or sets the Menu Display Child Pages.
            </summary>
            <value>
            Menu Display Child Pages.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.DisplayInNavWhen">
            <summary>
            Gets or sets the Display In Nav When.
            </summary>
            <value>
            Determines when to display in a navigation 
            0 = When Security Allows
            1 = Always
            3 = Never   
            
            Enum[DisplayInNavWhen].
            </value>
        </member>
        <member name="P:Rock.CMS.Page.Order">
            <summary>
            Gets or sets the Order.
            </summary>
            <value>
            Order.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.OutputCacheDuration">
            <summary>
            Gets or sets the Output Cache Duration.
            </summary>
            <value>
            Output Cache Duration.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.IncludeAdminFooter">
            <summary>
            Gets or sets the Include Admin Footer.
            </summary>
            <value>
            Include Admin Footer.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.IconUrl">
            <summary>
            Gets or sets the Icon Url.
            </summary>
            <value>
            Icon Url.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.CMS.Page.BlockInstances">
            <summary>
            Gets or sets the Block Instances.
            </summary>
            <value>
            Collection of Block Instances.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.Pages">
            <summary>
            Gets or sets the Pages.
            </summary>
            <value>
            Collection of Pages.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.PageRoutes">
            <summary>
            Gets or sets the Page Routes.
            </summary>
            <value>
            Collection of Page Routes.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.PageContexts">
            <summary>
            Gets or sets the Page Contexts.
            </summary>
            <value>
            Collection of Page Contexts.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.Sites">
            <summary>
            Gets or sets the Sites.
            </summary>
            <value>
            Collection of Sites.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.ParentPage">
            <summary>
            Gets or sets the Parent Page.
            </summary>
            <value>
            A <see cref="T:Rock.CMS.Page"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.Site">
            <summary>
            Gets or sets the Site.
            </summary>
            <value>
            A <see cref="P:Rock.CMS.Page.Site"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.Page.SupportedActions">
            <summary>
            Gets the supported actions.
            </summary>
        </member>
        <member name="T:Rock.CMS.PageConfiguration">
            <summary>
            Page Configuration class.
            </summary>
        </member>
        <member name="M:Rock.CMS.PageConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.CMS.PageConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.CMS.DisplayInNavWhen">
            <summary>
            How should page be displayed in a page navigation block
            </summary>
        </member>
        <member name="F:Rock.CMS.DisplayInNavWhen.WhenAllowed">
            <summary>
            Display this page in navigation controls when allowed by security
            </summary>
        </member>
        <member name="F:Rock.CMS.DisplayInNavWhen.Always">
            <summary>
            Always display this page in navigation controls, regardless of security
            </summary>
        </member>
        <member name="F:Rock.CMS.DisplayInNavWhen.Never">
            <summary>
            Never display this page in navigation controls
            </summary>
        </member>
        <member name="T:Rock.CMS.PageRoute">
            <summary>
            Page Route POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.CMS.PageRoute.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.CMS.PageRoute.PageId">
            <summary>
            Gets or sets the Page Id.
            </summary>
            <value>
            Page Id.
            </value>
        </member>
        <member name="P:Rock.CMS.PageRoute.Route">
            <summary>
            Gets or sets the Route.
            </summary>
            <value>
            Route.
            </value>
        </member>
        <member name="P:Rock.CMS.PageRoute.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.PageRoute.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.PageRoute.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.PageRoute.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.PageRoute.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.CMS.PageRoute.Page">
            <summary>
            Gets or sets the Page.
            </summary>
            <value>
            A <see cref="P:Rock.CMS.PageRoute.Page"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.PageRoute.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.PageRoute.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.CMS.PageRouteConfiguration">
            <summary>
            Page Route Configuration class.
            </summary>
        </member>
        <member name="M:Rock.CMS.PageRouteConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.CMS.PageRouteConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.CMS.Site">
            <summary>
            Site POCO Entity.
            </summary>
        </member>
        <member name="M:Rock.CMS.Site.Read(System.Int32)">
            <summary>
            Static Method to return an object based on the id
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="P:Rock.CMS.Site.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.CMS.Site.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.CMS.Site.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.CMS.Site.Theme">
            <summary>
            Gets or sets the Theme.
            </summary>
            <value>
            Theme.
            </value>
        </member>
        <member name="P:Rock.CMS.Site.DefaultPageId">
            <summary>
            Gets or sets the Default Page Id.
            </summary>
            <value>
            Default Page Id.
            </value>
        </member>
        <member name="P:Rock.CMS.Site.FaviconUrl">
            <summary>
            Gets or sets the Favicon Url.
            </summary>
            <value>
            Favicon Url.
            </value>
        </member>
        <member name="P:Rock.CMS.Site.AppleTouchIconUrl">
            <summary>
            Gets or sets the Apple Touch Icon Url.
            </summary>
            <value>
            Apple Touch Icon Url.
            </value>
        </member>
        <member name="P:Rock.CMS.Site.FacebookAppId">
            <summary>
            Gets or sets the Facebook App Id.
            </summary>
            <value>
            Facebook App Id.
            </value>
        </member>
        <member name="P:Rock.CMS.Site.FacebookAppSecret">
            <summary>
            Gets or sets the Facebook App Secret.
            </summary>
            <value>
            Facebook App Secret.
            </value>
        </member>
        <member name="P:Rock.CMS.Site.LoginPageReference">
            <summary>
            Gets or sets the Login Page Reference.
            </summary>
            <value>
            Login Page Reference.
            </value>
        </member>
        <member name="P:Rock.CMS.Site.RegistrationPageReference">
            <summary>
            Gets or sets the Registration Page Reference.
            </summary>
            <value>
            Registration Page Reference.
            </value>
        </member>
        <member name="P:Rock.CMS.Site.ErrorPage">
            <summary>
            Gets or sets the Error Page.
            </summary>
            <value>
            Path to the error page for this site..
            </value>
        </member>
        <member name="P:Rock.CMS.Site.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.Site.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.Site.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.Site.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.Site.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.CMS.Site.Pages">
            <summary>
            Gets or sets the Pages.
            </summary>
            <value>
            Collection of Pages.
            </value>
        </member>
        <member name="P:Rock.CMS.Site.SiteDomains">
            <summary>
            Gets or sets the Site Domains.
            </summary>
            <value>
            Collection of Site Domains.
            </value>
        </member>
        <member name="P:Rock.CMS.Site.DefaultPage">
            <summary>
            Gets or sets the Default Page.
            </summary>
            <value>
            A <see cref="T:Rock.CMS.Page"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.Site.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.Site.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.CMS.SiteConfiguration">
            <summary>
            Site Configuration class.
            </summary>
        </member>
        <member name="M:Rock.CMS.SiteConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.CMS.SiteConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.CMS.SiteDomain">
            <summary>
            Site Domain POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.CMS.SiteDomain.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.CMS.SiteDomain.SiteId">
            <summary>
            Gets or sets the Site Id.
            </summary>
            <value>
            Site Id.
            </value>
        </member>
        <member name="P:Rock.CMS.SiteDomain.Domain">
            <summary>
            Gets or sets the Domain.
            </summary>
            <value>
            Domain.
            </value>
        </member>
        <member name="P:Rock.CMS.SiteDomain.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.SiteDomain.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.SiteDomain.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.SiteDomain.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.SiteDomain.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.CMS.SiteDomain.Site">
            <summary>
            Gets or sets the Site.
            </summary>
            <value>
            A <see cref="P:Rock.CMS.SiteDomain.Site"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.SiteDomain.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.SiteDomain.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.CMS.SiteDomainConfiguration">
            <summary>
            Site Domain Configuration class.
            </summary>
        </member>
        <member name="M:Rock.CMS.SiteDomainConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.CMS.SiteDomainConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.CMS.User">
            <summary>
            User POCO Entity.
            </summary>
        </member>
        <member name="M:Rock.CMS.User.IsAllowedByDefault(System.String)">
            <summary>
            The default authorization for the selected action.
            </summary>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.CMS.User.GetCurrentUserName">
            <summary>
            Gets the name of the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Rock.CMS.User.UserName">
            <summary>
            Gets or sets the User Name.
            </summary>
            <value>
            User Name.
            </value>
        </member>
        <member name="P:Rock.CMS.User.AuthenticationType">
            <summary>
            Gets or sets the Authentication Type.
            </summary>
            <value>
            Enum[AuthenticationType]  1=Database, 2= Facebook, 3=Active Directory.
            </value>
        </member>
        <member name="P:Rock.CMS.User.Password">
            <summary>
            Gets or sets the Password.
            </summary>
            <value>
            Password.
            </value>
        </member>
        <member name="P:Rock.CMS.User.IsConfirmed">
            <summary>
            Gets or sets the is confirmed.
            </summary>
            <value>
            Is confirmed.
            </value>
        </member>
        <member name="P:Rock.CMS.User.IsAuthenticated">
            <summary>
            Gets a value indicating whether the user has authenticated (vs. used an inpersonation link)
            </summary>
        </member>
        <member name="P:Rock.CMS.User.LastActivityDate">
            <summary>
            Gets or sets the Last Activity Date.
            </summary>
            <value>
            Last Activity Date.
            </value>
        </member>
        <member name="P:Rock.CMS.User.LastLoginDate">
            <summary>
            Gets or sets the Last Login Date.
            </summary>
            <value>
            Last Login Date.
            </value>
        </member>
        <member name="P:Rock.CMS.User.LastPasswordChangedDate">
            <summary>
            Gets or sets the Last Password Changed Date.
            </summary>
            <value>
            Last Password Changed Date.
            </value>
        </member>
        <member name="P:Rock.CMS.User.CreationDate">
            <summary>
            Gets or sets the Creation Date.
            </summary>
            <value>
            Creation Date.
            </value>
        </member>
        <member name="P:Rock.CMS.User.IsOnLine">
            <summary>
            Gets or sets the Is On Line.
            </summary>
            <value>
            Is On Line.
            </value>
        </member>
        <member name="P:Rock.CMS.User.IsLockedOut">
            <summary>
            Gets or sets the Is Locked Out.
            </summary>
            <value>
            Is Locked Out.
            </value>
        </member>
        <member name="P:Rock.CMS.User.LastLockedOutDate">
            <summary>
            Gets or sets the Last Locked Out Date.
            </summary>
            <value>
            Last Locked Out Date.
            </value>
        </member>
        <member name="P:Rock.CMS.User.FailedPasswordAttemptCount">
            <summary>
            Gets or sets the Failed Password Attempt Count.
            </summary>
            <value>
            Failed Password Attempt Count.
            </value>
        </member>
        <member name="P:Rock.CMS.User.FailedPasswordAttemptWindowStart">
            <summary>
            Gets or sets the Failed Password Attempt Window Start.
            </summary>
            <value>
            Failed Password Attempt Window Start.
            </value>
        </member>
        <member name="P:Rock.CMS.User.ApiKey">
            <summary>
            Gets or sets the Api Key.
            </summary>
            <value>
            Api Key.
            </value>
        </member>
        <member name="P:Rock.CMS.User.PersonId">
            <summary>
            Gets or sets the Person Id.
            </summary>
            <value>
            Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.User.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.User.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.CMS.User.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.User.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.CMS.User.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.CMS.User.Person">
            <summary>
            Gets or sets the Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.User.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.User.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CMS.User.ConfirmationCode">
            <summary>
            Gets the encrypted confirmation code.
            </summary>
        </member>
        <member name="P:Rock.CMS.User.ConfirmationCodeEncoded">
            <summary>
            Gets a urlencoded and encrypted confirmation code.
            </summary>
        </member>
        <member name="T:Rock.CMS.UserConfiguration">
            <summary>
            User Configuration class.
            </summary>
        </member>
        <member name="M:Rock.CMS.UserConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.CMS.UserConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.CMS.AuthenticationType">
            <summary>
            How user is authenticated
            </summary>
        </member>
        <member name="F:Rock.CMS.AuthenticationType.Database">
            <summary>
            Athenticate login against Rock database
            </summary>
        </member>
        <member name="F:Rock.CMS.AuthenticationType.Facebook">
            <summary>
            Authenticate using Facebook
            </summary>
        </member>
        <member name="F:Rock.CMS.AuthenticationType.ActiveDirectory">
            <summary>
            Authenticate using Active Directory
            </summary>
        </member>
        <member name="T:Rock.Communication.Email">
            <summary>
            Email class
            </summary>
        </member>
        <member name="M:Rock.Communication.Email.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Communication.Email"/> class.
            </summary>
            <param name="templateGuid">The template GUID.</param>
        </member>
        <member name="M:Rock.Communication.Email.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Communication.Email"/> class.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="cc">The cc.</param>
            <param name="bcc">The BCC.</param>
            <param name="subject">The subject.</param>
            <param name="body">The body.</param>
        </member>
        <member name="M:Rock.Communication.Email.Send">
            <summary>
            Sends this instance.
            </summary>
        </member>
        <member name="M:Rock.Communication.Email.Send(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Object}})">
            <summary>
            Sends the specified recipient merge values.
            </summary>
            <param name="recipientMergeValues">The recipient merge values.</param>
        </member>
        <member name="M:Rock.Communication.Email.Send(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.Int32,System.Boolean,System.String,System.String)">
            <summary>
            Sends the email.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="cc">The cc.</param>
            <param name="bcc">The BCC.</param>
            <param name="subject">The subject.</param>
            <param name="body">The body.</param>
            <param name="server">The server.</param>
            <param name="port">The port.</param>
            <param name="useSSL">if set to <c>true</c> [use SSL].</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
        </member>
        <member name="P:Rock.Communication.Email.From">
            <summary>
            Gets or sets from.
            </summary>
            <value>
            From.
            </value>
        </member>
        <member name="P:Rock.Communication.Email.To">
            <summary>
            Gets or sets to.
            </summary>
            <value>
            To.
            </value>
        </member>
        <member name="P:Rock.Communication.Email.Cc">
            <summary>
            Gets or sets the cc.
            </summary>
            <value>
            The cc.
            </value>
        </member>
        <member name="P:Rock.Communication.Email.Bcc">
            <summary>
            Gets or sets the BCC.
            </summary>
            <value>
            The BCC.
            </value>
        </member>
        <member name="P:Rock.Communication.Email.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>
            The subject.
            </value>
        </member>
        <member name="P:Rock.Communication.Email.Body">
            <summary>
            Gets or sets the body.
            </summary>
            <value>
            The body.
            </value>
        </member>
        <member name="P:Rock.Communication.Email.Server">
            <summary>
            Gets or sets the SMTP server.
            </summary>
            <value>
            The SMTP server.
            </value>
        </member>
        <member name="P:Rock.Communication.Email.Port">
            <summary>
            Gets or sets the SMTP port.
            </summary>
            <value>
            The SMTP port.
            </value>
        </member>
        <member name="P:Rock.Communication.Email.UseSSL">
            <summary>
            Gets or sets a value indicating whether to use SSL.
            </summary>
            <value>
              <c>true</c> if [use SSL]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Communication.Email.UserName">
            <summary>
            Gets or sets the name of the SMTP user.
            </summary>
            <value>
            The name of the SMTP user.
            </value>
        </member>
        <member name="P:Rock.Communication.Email.Password">
            <summary>
            Gets or sets the SMTP password.
            </summary>
            <value>
            The SMTP password.
            </value>
        </member>
        <member name="T:Rock.Core.Attribute">
            <summary>
            Attribute POCO Entity.
            </summary>
        </member>
        <member name="M:Rock.Core.Attribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Core.Attribute"/> class.
            </summary>
        </member>
        <member name="P:Rock.Core.Attribute.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.FieldTypeId">
            <summary>
            Gets or sets the Field Type Id.
            </summary>
            <value>
            Field Type Id.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.Entity">
            <summary>
            Gets or sets the Entity.
            </summary>
            <value>
            Entity.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.EntityQualifierColumn">
            <summary>
            Gets or sets the Entity Qualifier Column.
            </summary>
            <value>
            Entity Qualifier Column.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.EntityQualifierValue">
            <summary>
            Gets or sets the Entity Qualifier Value.
            </summary>
            <value>
            Entity Qualifier Value.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.Key">
            <summary>
            Gets or sets the Key.
            </summary>
            <value>
            Key.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.Category">
            <summary>
            Gets or sets the Category.
            </summary>
            <value>
            Category.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.Order">
            <summary>
            Gets or sets the Order.
            </summary>
            <value>
            Order.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.IsGridColumn">
            <summary>
            Gets or sets the Grid Column.
            </summary>
            <value>
            Grid Column.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.DefaultValue">
            <summary>
            Gets or sets the Default Value.
            </summary>
            <value>
            Default Value.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.IsMultiValue">
            <summary>
            Gets or sets the Multi Value.
            </summary>
            <value>
            Multi Value.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.IsRequired">
            <summary>
            Gets or sets the Required.
            </summary>
            <value>
            Required.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Core.Attribute.AttributeQualifiers">
            <summary>
            Gets or sets the Attribute Qualifiers.
            </summary>
            <value>
            Collection of Attribute Qualifiers.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.AttributeValues">
            <summary>
            Gets or sets the Attribute Values.
            </summary>
            <value>
            Collection of Attribute Values.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.FieldType">
            <summary>
            Gets or sets the Field Type.
            </summary>
            <value>
            A <see cref="P:Rock.Core.Attribute.FieldType"/> object.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Core.Attribute.ParentAuthority">
            <summary>
            Gets the parent authority.
            </summary>
        </member>
        <member name="T:Rock.Core.AttributeConfiguration">
            <summary>
            Attribute Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Core.AttributeConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Core.AttributeConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Core.AttributeQualifier">
            <summary>
            Attribute Qualifier POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Core.AttributeQualifier.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeQualifier.AttributeId">
            <summary>
            Gets or sets the Attribute Id.
            </summary>
            <value>
            Attribute Id.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeQualifier.Key">
            <summary>
            Gets or sets the Key.
            </summary>
            <value>
            Key.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeQualifier.Value">
            <summary>
            Gets or sets the Value.
            </summary>
            <value>
            Value.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeQualifier.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeQualifier.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeQualifier.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeQualifier.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeQualifier.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Core.AttributeQualifier.Attribute">
            <summary>
            Gets or sets the Attribute.
            </summary>
            <value>
            A <see cref="P:Rock.Core.AttributeQualifier.Attribute"/> object.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeQualifier.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeQualifier.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Core.AttributeQualifierConfiguration">
            <summary>
            Attribute Qualifier Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Core.AttributeQualifierConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Core.AttributeQualifierConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Core.AttributeValue">
            <summary>
            Attribute Value POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Core.AttributeValue.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeValue.AttributeId">
            <summary>
            Gets or sets the Attribute Id.
            </summary>
            <value>
            Attribute Id.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeValue.EntityId">
            <summary>
            Gets or sets the Entity Id.
            </summary>
            <value>
            Entity Id.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeValue.Order">
            <summary>
            Gets or sets the Order.
            </summary>
            <value>
            Order.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeValue.Value">
            <summary>
            Gets or sets the Value.
            </summary>
            <value>
            Value.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeValue.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeValue.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeValue.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeValue.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeValue.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Core.AttributeValue.Attribute">
            <summary>
            Gets or sets the Attribute.
            </summary>
            <value>
            A <see cref="P:Rock.Core.AttributeValue.Attribute"/> object.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeValue.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeValue.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Core.AttributeValue.ParentAuthority">
            <summary>
            Gets the parent authority.
            </summary>
        </member>
        <member name="T:Rock.Core.AttributeValueConfiguration">
            <summary>
            Attribute Value Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Core.AttributeValueConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Core.AttributeValueConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Core.DefinedType">
            <summary>
            Defined Type POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Core.DefinedType.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedType.FieldTypeId">
            <summary>
            Gets or sets the Field Type Id.
            </summary>
            <value>
            Field Type Id.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedType.Order">
            <summary>
            Gets or sets the Order.
            </summary>
            <value>
            Order.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedType.Category">
            <summary>
            Gets or sets the Category.
            </summary>
            <value>
            Category.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedType.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedType.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedType.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedType.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedType.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedType.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedType.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Core.DefinedType.DefinedValues">
            <summary>
            Gets or sets the Defined Values.
            </summary>
            <value>
            Collection of Defined Values.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedType.FieldType">
            <summary>
            Gets or sets the Field Type.
            </summary>
            <value>
            A <see cref="P:Rock.Core.DefinedType.FieldType"/> object.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedType.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedType.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedType.ParentAuthority">
            <summary>
            Gets the parent authority.
            </summary>
        </member>
        <member name="T:Rock.Core.DefinedTypeConfiguration">
            <summary>
            Defined Type Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Core.DefinedTypeConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Core.DefinedTypeConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Core.DefinedValue">
            <summary>
            Defined Value POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Core.DefinedValue.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedValue.DefinedTypeId">
            <summary>
            Gets or sets the Defined Type Id.
            </summary>
            <value>
            Defined Type Id.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedValue.Order">
            <summary>
            Gets or sets the Order.
            </summary>
            <value>
            Order.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedValue.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedValue.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedValue.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedValue.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedValue.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedValue.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedValue.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Core.DefinedValue.DefinedType">
            <summary>
            Gets or sets the Defined Type.
            </summary>
            <value>
            A <see cref="P:Rock.Core.DefinedValue.DefinedType"/> object.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedValue.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedValue.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Core.DefinedValue.ParentAuthority">
            <summary>
            Gets the parent authority.
            </summary>
        </member>
        <member name="T:Rock.Core.DefinedValueConfiguration">
            <summary>
            Defined Value Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Core.DefinedValueConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Core.DefinedValueConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Core.FieldType">
            <summary>
            Field Type POCO Entity.
            </summary>
        </member>
        <member name="M:Rock.Core.FieldType.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Rock.Core.FieldType.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Core.FieldType.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Core.FieldType.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Core.FieldType.Assembly">
            <summary>
            Gets or sets the Assembly.
            </summary>
            <value>
            Assembly.
            </value>
        </member>
        <member name="P:Rock.Core.FieldType.Class">
            <summary>
            Gets or sets the Class.
            </summary>
            <value>
            Class.
            </value>
        </member>
        <member name="P:Rock.Core.FieldType.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Core.FieldType.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Core.FieldType.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Core.FieldType.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Core.FieldType.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Core.FieldType.Attributes">
            <summary>
            Gets or sets the Attributes.
            </summary>
            <value>
            Collection of Attributes.
            </value>
        </member>
        <member name="P:Rock.Core.FieldType.DefinedTypes">
            <summary>
            Gets or sets the Defined Types.
            </summary>
            <value>
            Collection of Defined Types.
            </value>
        </member>
        <member name="P:Rock.Core.FieldType.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Core.FieldType.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Core.FieldTypeConfiguration">
            <summary>
            Field Type Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Core.FieldTypeConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Core.FieldTypeConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Core.ServiceLog">
            <summary>
            Service Log POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Core.ServiceLog.Time">
            <summary>
            Gets or sets the Time.
            </summary>
            <value>
            Time.
            </value>
        </member>
        <member name="P:Rock.Core.ServiceLog.Input">
            <summary>
            Gets or sets the Input.
            </summary>
            <value>
            Input.
            </value>
        </member>
        <member name="P:Rock.Core.ServiceLog.Type">
            <summary>
            Gets or sets the Type.
            </summary>
            <value>
            Type.
            </value>
        </member>
        <member name="P:Rock.Core.ServiceLog.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Core.ServiceLog.Result">
            <summary>
            Gets or sets the Result.
            </summary>
            <value>
            Result.
            </value>
        </member>
        <member name="P:Rock.Core.ServiceLog.Success">
            <summary>
            Gets or sets the Success.
            </summary>
            <value>
            Success.
            </value>
        </member>
        <member name="P:Rock.Core.ServiceLog.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="T:Rock.Core.ServiceLogConfiguration">
            <summary>
            Service Log Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Core.ServiceLogConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Core.ServiceLogConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.CRM.Address">
            <summary>
            Address POCO Entity.
            </summary>
        </member>
        <member name="M:Rock.CRM.Address.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Rock.CRM.Address.Raw">
            <summary>
            Gets or sets the Raw.
            </summary>
            <value>
            Raw.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.Street1">
            <summary>
            Gets or sets the Street 1.
            </summary>
            <value>
            Street 1.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.Street2">
            <summary>
            Gets or sets the Street 2.
            </summary>
            <value>
            Street 2.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.City">
            <summary>
            Gets or sets the City.
            </summary>
            <value>
            City.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.State">
            <summary>
            Gets or sets the State.
            </summary>
            <value>
            State.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.Country">
            <summary>
            Gets or sets the Country.
            </summary>
            <value>
            Country.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.Zip">
            <summary>
            Gets or sets the Zip.
            </summary>
            <value>
            Zip.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.Latitude">
            <summary>
            Gets or sets the Latitude.
            </summary>
            <value>
            Latitude.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.Longitude">
            <summary>
            Gets or sets the Longitude.
            </summary>
            <value>
            Longitude.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.StandardizeAttempt">
            <summary>
            Gets or sets the Standardize Attempt.
            </summary>
            <value>
            Standardize Attempt.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.StandardizeService">
            <summary>
            Gets or sets the Standardize Service.
            </summary>
            <value>
            Standardize Service.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.StandardizeResult">
            <summary>
            Gets or sets the Standardize Result.
            </summary>
            <value>
            .
            </value>
        </member>
        <member name="P:Rock.CRM.Address.StandardizeDate">
            <summary>
            Gets or sets the Standardize Date.
            </summary>
            <value>
            Standardize Date.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.GeocodeAttempt">
            <summary>
            Gets or sets the Geocode Attempt.
            </summary>
            <value>
            Geocode Attempt.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.GeocodeService">
            <summary>
            Gets or sets the Geocode Service.
            </summary>
            <value>
            Geocode Service.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.GeocodeResult">
            <summary>
            Gets or sets the Geocode Result.
            </summary>
            <value>
            .
            </value>
        </member>
        <member name="P:Rock.CRM.Address.GeocodeDate">
            <summary>
            Gets or sets the Geocode Date.
            </summary>
            <value>
            Geocode Date.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.CRM.Address.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CRM.Address.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.CRM.AddressConfiguration">
            <summary>
            Address Configuration class.
            </summary>
        </member>
        <member name="M:Rock.CRM.AddressConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.CRM.AddressConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.CRM.EmailTemplate">
            <summary>
            Email Template POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.CRM.EmailTemplate.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.CRM.EmailTemplate.PersonId">
            <summary>
            Gets or sets the Person Id.
            </summary>
            <value>
            Person Id.
            </value>
        </member>
        <member name="P:Rock.CRM.EmailTemplate.Category">
            <summary>
            Gets or sets the Category.
            </summary>
            <value>
            Category.
            </value>
        </member>
        <member name="P:Rock.CRM.EmailTemplate.Title">
            <summary>
            Gets or sets the Title.
            </summary>
            <value>
            Title.
            </value>
        </member>
        <member name="P:Rock.CRM.EmailTemplate.From">
            <summary>
            Gets or sets the From.
            </summary>
            <value>
            From.
            </value>
        </member>
        <member name="P:Rock.CRM.EmailTemplate.To">
            <summary>
            Gets or sets the To.
            </summary>
            <value>
            To.
            </value>
        </member>
        <member name="P:Rock.CRM.EmailTemplate.Cc">
            <summary>
            Gets or sets the Cc.
            </summary>
            <value>
            Cc.
            </value>
        </member>
        <member name="P:Rock.CRM.EmailTemplate.Bcc">
            <summary>
            Gets or sets the Bcc.
            </summary>
            <value>
            Bcc.
            </value>
        </member>
        <member name="P:Rock.CRM.EmailTemplate.Subject">
            <summary>
            Gets or sets the Subject.
            </summary>
            <value>
            Subject.
            </value>
        </member>
        <member name="P:Rock.CRM.EmailTemplate.Body">
            <summary>
            Gets or sets the Body.
            </summary>
            <value>
            Body.
            </value>
        </member>
        <member name="P:Rock.CRM.EmailTemplate.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.CRM.EmailTemplate.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.CRM.EmailTemplate.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.CRM.EmailTemplate.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.CRM.EmailTemplate.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.CRM.EmailTemplate.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="P:Rock.CRM.EmailTemplate.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CRM.EmailTemplate.Person">
            <summary>
            Gets or sets the Person.
            </summary>
            <value>
            A <see cref="P:Rock.CRM.EmailTemplate.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CRM.EmailTemplate.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="P:Rock.CRM.EmailTemplate.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.CRM.EmailTemplateConfiguration">
            <summary>
            Email Template Configuration class.
            </summary>
        </member>
        <member name="M:Rock.CRM.EmailTemplateConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.CRM.EmailTemplateConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.CRM.Person">
            <summary>
            Person POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.CRM.Person.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.RecordTypeId">
            <summary>
            Gets or sets the Record Type Id.
            </summary>
            <value>
            .
            </value>
        </member>
        <member name="P:Rock.CRM.Person.RecordStatusId">
            <summary>
            Gets or sets the Record Status Id.
            </summary>
            <value>
            .
            </value>
        </member>
        <member name="P:Rock.CRM.Person.RecordStatusReasonId">
            <summary>
            Gets or sets the Record Status Reason Id.
            </summary>
            <value>
            .
            </value>
        </member>
        <member name="P:Rock.CRM.Person.PersonStatusId">
            <summary>
            Gets or sets the Person Status Id.
            </summary>
            <value>
            .
            </value>
        </member>
        <member name="P:Rock.CRM.Person.TitleId">
            <summary>
            Gets or sets the Title Id.
            </summary>
            <value>
            .
            </value>
        </member>
        <member name="P:Rock.CRM.Person.GivenName">
            <summary>
            Gets or sets the Given Name.
            </summary>
            <value>
            Given Name.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.NickName">
            <summary>
            Gets or sets the Nick Name.
            </summary>
            <value>
            Nick Name.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.LastName">
            <summary>
            Gets or sets the Last Name.
            </summary>
            <value>
            Last Name.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.SuffixId">
            <summary>
            Gets or sets the Suffix Id.
            </summary>
            <value>
            .
            </value>
        </member>
        <member name="P:Rock.CRM.Person.PhotoId">
            <summary>
            Gets or sets the Photo Id.
            </summary>
            <value>
            Photo Id.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.BirthDay">
            <summary>
            Gets or sets the Birth Day.
            </summary>
            <value>
            Birth Day.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.BirthMonth">
            <summary>
            Gets or sets the Birth Month.
            </summary>
            <value>
            Birth Month.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.BirthYear">
            <summary>
            Gets or sets the Birth Year.
            </summary>
            <value>
            Birth Year.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.Gender">
            <summary>
            Gets or sets the Gender.
            </summary>
            <value>
            Enum[Gender].
            </value>
        </member>
        <member name="P:Rock.CRM.Person.MaritalStatusId">
            <summary>
            Gets or sets the Marital Status Id.
            </summary>
            <value>
            .
            </value>
        </member>
        <member name="P:Rock.CRM.Person.AnniversaryDate">
            <summary>
            Gets or sets the Anniversary Date.
            </summary>
            <value>
            Anniversary Date.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.GraduationDate">
            <summary>
            Gets or sets the Graduation Date.
            </summary>
            <value>
            Graduation Date.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.Email">
            <summary>
            Gets or sets the Email.
            </summary>
            <value>
            Email.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.IsEmailActive">
            <summary>
            Gets or sets the Email Is Active.
            </summary>
            <value>
            Email Is Active.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.EmailNote">
            <summary>
            Gets or sets the Email Note.
            </summary>
            <value>
            Email Note.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.DoNotEmail">
            <summary>
            Gets or sets the Do Not Email.
            </summary>
            <value>
            Do Not Email.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.SystemNote">
            <summary>
            Gets or sets the System Note.
            </summary>
            <value>
            System Note.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.ViewedCount">
            <summary>
            Gets or sets the Viewed Count.
            </summary>
            <value>
            Viewed Count.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.CRM.Person.Users">
            <summary>
            Gets or sets the Users.
            </summary>
            <value>
            Collection of Users.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.EmailTemplates">
            <summary>
            Gets or sets the Email Templates.
            </summary>
            <value>
            Collection of Email Templates.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.PhoneNumbers">
            <summary>
            Gets or sets the Phone Numbers.
            </summary>
            <value>
            Collection of Phone Numbers.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.Members">
            <summary>
            Gets or sets the Members.
            </summary>
            <value>
            Collection of Members.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.Pledges">
            <summary>
            Gets or sets the Pledges.
            </summary>
            <value>
            Collection of Pledges.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.PersonAccountLookups">
            <summary>
            Gets or sets the PersonAccountLookups.
            </summary>
            <value>
            Collection of PersonAccountLookups.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.MaritalStatus">
            <summary>
            Gets or sets the Marital Status.
            </summary>
            <value>
            A <see cref="T:Rock.Core.DefinedValue"/> object.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.PersonStatus">
            <summary>
            Gets or sets the Person Status.
            </summary>
            <value>
            A <see cref="T:Rock.Core.DefinedValue"/> object.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.RecordStatus">
            <summary>
            Gets or sets the Record Status.
            </summary>
            <value>
            A <see cref="T:Rock.Core.DefinedValue"/> object.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.RecordStatusReason">
            <summary>
            Gets or sets the Record Status Reason.
            </summary>
            <value>
            A <see cref="T:Rock.Core.DefinedValue"/> object.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.RecordType">
            <summary>
            Gets or sets the Record Type.
            </summary>
            <value>
            A <see cref="T:Rock.Core.DefinedValue"/> object.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.Suffix">
            <summary>
            Gets or sets the Suffix.
            </summary>
            <value>
            A <see cref="T:Rock.Core.DefinedValue"/> object.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.Title">
            <summary>
            Gets or sets the Title.
            </summary>
            <value>
            A <see cref="T:Rock.Core.DefinedValue"/> object.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.FirstName">
            <summary>
            Gets NickName if not null, otherwise gets GivenName.
            </summary>
        </member>
        <member name="P:Rock.CRM.Person.FullName">
            <summary>
            Gets the full name.
            </summary>
        </member>
        <member name="P:Rock.CRM.Person.BirthDate">
            <summary>
            Gets or sets the birth date.
            </summary>
            <value>
            The birth date.
            </value>
        </member>
        <member name="P:Rock.CRM.Person.ImpersonationParameter">
            <summary>
            Gets the impersonation parameter.
            </summary>
        </member>
        <member name="T:Rock.CRM.PersonConfiguration">
            <summary>
            Person Configuration class.
            </summary>
        </member>
        <member name="M:Rock.CRM.PersonConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.CRM.PersonConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.CRM.Gender">
            <summary>
            The gender of a person
            </summary>
        </member>
        <member name="F:Rock.CRM.Gender.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Rock.CRM.Gender.Male">
            <summary>
            Male
            </summary>
        </member>
        <member name="F:Rock.CRM.Gender.Female">
            <summary>
            Female
            </summary>
        </member>
        <member name="T:Rock.CRM.PhoneNumber">
            <summary>
            Phone Number POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.CRM.PhoneNumber.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.CRM.PhoneNumber.PersonId">
            <summary>
            Gets or sets the Person Id.
            </summary>
            <value>
            Person Id.
            </value>
        </member>
        <member name="P:Rock.CRM.PhoneNumber.Number">
            <summary>
            Gets or sets the Number.
            </summary>
            <value>
            Number.
            </value>
        </member>
        <member name="P:Rock.CRM.PhoneNumber.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.CRM.PhoneNumber.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.CRM.PhoneNumber.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.CRM.PhoneNumber.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.CRM.PhoneNumber.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.CRM.PhoneNumber.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.CRM.PhoneNumber.Person">
            <summary>
            Gets or sets the Person.
            </summary>
            <value>
            A <see cref="P:Rock.CRM.PhoneNumber.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CRM.PhoneNumber.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="P:Rock.CRM.PhoneNumber.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.CRM.PhoneNumber.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="P:Rock.CRM.PhoneNumber.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.CRM.PhoneNumberConfiguration">
            <summary>
            Phone Number Configuration class.
            </summary>
        </member>
        <member name="M:Rock.CRM.PhoneNumberConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.CRM.PhoneNumberConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Field.ConfigurationValue">
            <summary>
            The Name, Description and Value of an field type's configuration items
            </summary>
        </member>
        <member name="M:Rock.Field.ConfigurationValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Field.ConfigurationValue"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Rock.Field.ConfigurationValue.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Field.ConfigurationValue"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Rock.Field.ConfigurationValue.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Rock.Field.ConfigurationValue.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Rock.Field.ConfigurationValue.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:Rock.Field.Types.SelectMulti">
            <summary>
            Field Type used to display a list of options as checkboxes.  Value is saved as a | delimited list
            </summary>
        </member>
        <member name="T:Rock.Field.FieldType">
            <summary>
            Abstract class that all custom field types should inherit from
            </summary>
        </member>
        <member name="T:Rock.Field.IFieldType">
            <summary>
            Interface that a custom field type must implement
            </summary>
        </member>
        <member name="M:Rock.Field.IFieldType.FormatValue(System.Web.UI.Control,System.String,System.Boolean)">
            <summary>
            Formats the value based on the type and qualifiers
            </summary>
            <param name="parentControl">The parent control.</param>
            <param name="value">The value.</param>
            <param name="condensed">if set to <c>true</c> [condensed].</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.IFieldType.IsValid(System.String,System.Boolean,System.String@)">
            <summary>
            Tests the value to ensure that it is a valid value.  If not, message will indicate why
            </summary>
            <param name="value"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.IFieldType.ConfigurationKeys">
            <summary>
            Gets a list of the configuration keys.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.IFieldType.ConfigurationControls">
            <summary>
            Creates the HTML controls required to configure this type of field
            </summary>
            <param name="values">The values.</param>
            <param name="required">if set to <c>true</c> [required].</param>
            <param name="setValue">if set to <c>true</c> [set value].</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.IFieldType.ConfigurationValues(System.Collections.Generic.List{System.Web.UI.Control})">
            <summary>
            Gets the configuration values
            </summary>
            <param name="control">The controls.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.IFieldType.SetConfigurationValues(System.Collections.Generic.List{System.Web.UI.Control},System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Sets the configuration values.
            </summary>
            <param name="control">The controls.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Rock.Field.IFieldType.EditControl(System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Creates an HTML control.
            </summary>
            <param name="value">The value.</param>
            <param name="setValue">if set to <c>true</c> [set value].</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.IFieldType.GetEditValue(System.Web.UI.Control,System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Reads the value of the control.
            </summary>
            <param name="control">The control.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.IFieldType.SetEditValue(System.Web.UI.Control,System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue},System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="control">The control.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Rock.Field.FieldType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="N:Rock.Field"/> class.
            </summary>
        </member>
        <member name="M:Rock.Field.FieldType.FormatValue(System.Web.UI.Control,System.String,System.Boolean)">
            <summary>
            Returns the field's current value(s)
            </summary>
            <param name="parentControl">The parent control.</param>
            <param name="value">Information about the value</param>
            <param name="condensed">Flag indicating if the value should be condensed (i.e. for use in a grid column)</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.FieldType.IsValid(System.String,System.Boolean,System.String@)">
            <summary>
            Tests the value to ensure that it is a valid value.  If not, message will indicate why
            </summary>
            <param name="value"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.FieldType.ConfigurationKeys">
            <summary>
            Returns a list of the configuration keys
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.FieldType.ConfigurationControls">
            <summary>
            Creates the HTML controls required to configure this type of field
            </summary>
            <param name="values">The values.</param>
            <param name="required">if set to <c>true</c> [required].</param>
            <param name="setValue">if set to <c>true</c> [set value].</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.FieldType.ConfigurationValues(System.Collections.Generic.List{System.Web.UI.Control})">
            <summary>
            Gets the configuration value.
            </summary>
            <param name="control">The controls.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.FieldType.SetConfigurationValues(System.Collections.Generic.List{System.Web.UI.Control},System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Sets the configuration value.
            </summary>
            <param name="control">The controls.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Rock.Field.FieldType.EditControl(System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Creates the control(s) neccessary for prompting user for a new value
            </summary>
            <param name="value">The current value</param>
            <param name="setValue">Should the control's value be set</param>
            <returns>The control</returns>
        </member>
        <member name="M:Rock.Field.FieldType.GetEditValue(System.Web.UI.Control,System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Reads new values entered by the user for the field
            </summary>
            <param name="control">Parent control that controls were added to in the CreateEditControl() method</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.FieldType.SetEditValue(System.Web.UI.Control,System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue},System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="control">The control.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Rock.Field.Types.SelectMulti.ConfigurationKeys">
            <summary>
            Returns a list of the configuration keys
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.SelectMulti.ConfigurationControls">
            <summary>
            Creates the HTML controls required to configure this type of field
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.SelectMulti.ConfigurationValues(System.Collections.Generic.List{System.Web.UI.Control})">
            <summary>
            Gets the configuration value.
            </summary>
            <param name="controls">The controls.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.SelectMulti.SetConfigurationValues(System.Collections.Generic.List{System.Web.UI.Control},System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Sets the configuration value.
            </summary>
            <param name="controls"></param>
            <param name="configurationValues"></param>
        </member>
        <member name="M:Rock.Field.Types.SelectMulti.EditControl(System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Creates the control(s) neccessary for prompting user for a new value
            </summary>
            <param name="configurationValues"></param>
            <returns>
            The control
            </returns>
        </member>
        <member name="M:Rock.Field.Types.SelectMulti.GetEditValue(System.Web.UI.Control,System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Reads new values entered by the user for the field
            </summary>
            <param name="control">Parent control that controls were added to in the CreateEditControl() method</param>
            <param name="configurationValues"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.SelectMulti.SetEditValue(System.Web.UI.Control,System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue},System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="control">The control.</param>
            <param name="configurationValues"></param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Rock.Field.Types.Document">
            <summary>
            Field used to save and dispaly a document
            </summary>
        </member>
        <member name="T:Rock.Field.Types.Person">
            <summary>
            Field used to save and display a person
            </summary>
        </member>
        <member name="T:Rock.Field.Types.Url">
            <summary>
            Field used to save and dispaly a url
            </summary>
        </member>
        <member name="T:Rock.Field.Types.Currency">
            <summary>
            Field used to save and dispaly a currency value
            </summary>
        </member>
        <member name="T:Rock.Field.Types.Decimal">
            <summary>
            Field used to save and dispaly a decimal numeric value
            </summary>
        </member>
        <member name="M:Rock.Field.Types.Decimal.IsValid(System.String,System.Boolean,System.String@)">
            <summary>
            Tests the value to ensure that it is a valid value.  If not, message will indicate why
            </summary>
            <param name="value"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Rock.Field.Types.DefinedValue">
            <summary>
            Field Type used to display a dropdown list of Defined Values for a specific Defined Type
            </summary>
        </member>
        <member name="M:Rock.Field.Types.DefinedValue.FormatValue(System.Web.UI.Control,System.String,System.Boolean)">
            <summary>
            Returns the field's current value(s)
            </summary>
            <param name="parentControl">The parent control.</param>
            <param name="value">Information about the value</param>
            <param name="condensed">Flag indicating if the value should be condensed (i.e. for use in a grid column)</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.DefinedValue.ConfigurationKeys">
            <summary>
            Returns a list of the configuration keys
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.DefinedValue.ConfigurationControls">
            <summary>
            Creates the HTML controls required to configure this type of field
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.DefinedValue.ConfigurationValues(System.Collections.Generic.List{System.Web.UI.Control})">
            <summary>
            Gets the configuration value.
            </summary>
            <param name="controls">The controls.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.DefinedValue.SetConfigurationValues(System.Collections.Generic.List{System.Web.UI.Control},System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Sets the configuration value.
            </summary>
            <param name="controls"></param>
            <param name="configurationValues"></param>
        </member>
        <member name="M:Rock.Field.Types.DefinedValue.EditControl(System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Creates the control(s) neccessary for prompting user for a new value
            </summary>
            <param name="configurationValues"></param>
            <returns>
            The control
            </returns>
        </member>
        <member name="T:Rock.Field.Types.DefinedType">
            <summary>
            Field Type used to display a dropdown list of Defined Types
            </summary>
        </member>
        <member name="T:Rock.Field.Types.SelectSingle">
            <summary>
            Field Type used to display a list of options as checkboxes.  Value is saved as a | delimited list
            </summary>
        </member>
        <member name="M:Rock.Field.Types.SelectSingle.ConfigurationKeys">
            <summary>
            Returns a list of the configuration keys
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.SelectSingle.ConfigurationControls">
            <summary>
            Creates the HTML controls required to configure this type of field
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.SelectSingle.ConfigurationValues(System.Collections.Generic.List{System.Web.UI.Control})">
            <summary>
            Gets the configuration value.
            </summary>
            <param name="controls">The controls.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.SelectSingle.SetConfigurationValues(System.Collections.Generic.List{System.Web.UI.Control},System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Sets the configuration value.
            </summary>
            <param name="controls"></param>
            <param name="configurationValues"></param>
        </member>
        <member name="M:Rock.Field.Types.SelectSingle.EditControl(System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Creates the control(s) neccessary for prompting user for a new value
            </summary>
            <param name="configurationValues"></param>
            <returns>
            The control
            </returns>
        </member>
        <member name="M:Rock.Field.Types.SelectSingle.GetEditValue(System.Web.UI.Control,System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Reads new values entered by the user for the field
            </summary>
            <param name="control">Parent control that controls were added to in the CreateEditControl() method</param>
            <param name="configurationValues"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.SelectSingle.SetEditValue(System.Web.UI.Control,System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue},System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="control">The control.</param>
            <param name="configurationValues"></param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Rock.Field.Types.DefinedType.EditControl(System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Creates the control(s) neccessary for prompting user for a new value
            </summary>
            <param name="configurationValues"></param>
            <returns>
            The control
            </returns>
        </member>
        <member name="T:Rock.Field.Types.Date">
            <summary>
            Field used to save and dispaly a text value
            </summary>
        </member>
        <member name="T:Rock.Field.Types.Image">
            <summary>
            Field used to save and dispaly a text value
            </summary>
        </member>
        <member name="M:Rock.Field.Types.Image.FormatValue(System.Web.UI.Control,System.String,System.Boolean)">
            <summary>
            Returns the field's current value(s)
            </summary>
            <param name="parentControl">The parent control.</param>
            <param name="value">Information about the value</param>
            <param name="condensed">Flag indicating if the value should be condensed (i.e. for use in a grid column)</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.Image.EditControl(System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Creates the control(s) neccessary for prompting user for a new value
            </summary>
            <param name="value">The current value</param>
            <param name="setValue">Should the control's value be set</param>
            <returns>
            The control
            </returns>
        </member>
        <member name="M:Rock.Field.Types.Image.GetEditValue(System.Web.UI.Control,System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Reads new values entered by the user for the field
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.Image.SetEditValue(System.Web.UI.Control,System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue},System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="control">The control.</param>
            <param name="configurationValues"></param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Rock.Field.Types.Video">
            <summary>
            Video field type
            </summary>
        </member>
        <member name="M:Rock.Field.Types.Video.FormatValue(System.Web.UI.Control,System.String,System.Boolean)">
            <summary>
            Returns the field's current value(s)
            </summary>
            <param name="parentControl">The parent control.</param>
            <param name="value">Information about the value</param>
            <param name="condensed">Flag indicating if the value should be condensed (i.e. for use in a grid column)</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.Video.AddLinks(System.Web.UI.Page)">
            <summary>
            Adds any required CSS or Script Links to the current page
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="T:Rock.Financial.Batch">
            <summary>
            Batch POCO class.
            </summary>
        </member>
        <member name="P:Rock.Financial.Batch.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Rock.Financial.Batch.BatchDate">
            <summary>
            Gets or sets the batch date.
            </summary>
            <value>
            The batch date.
            </value>
        </member>
        <member name="P:Rock.Financial.Batch.IsClosed">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Rock.Financial.Batch"/> is closed.
            </summary>
            <value>
              <c>true</c> if closed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Financial.Batch.CampusId">
            <summary>
            Gets or sets the campus id.
            </summary>
            <value>
            The campus id.
            </value>
        </member>
        <member name="P:Rock.Financial.Batch.Entity">
            <summary>
            Gets or sets the entity.
            </summary>
            <value>
            The entity.
            </value>
        </member>
        <member name="P:Rock.Financial.Batch.EntityId">
            <summary>
            Gets or sets the entity id.
            </summary>
            <value>
            The entity id.
            </value>
        </member>
        <member name="P:Rock.Financial.Batch.ForeignReference">
            <summary>
            Gets or sets the foreign reference.
            </summary>
            <value>
            The foreign reference.
            </value>
        </member>
        <member name="P:Rock.Financial.Batch.Transactions">
            <summary>
            Gets or sets the transactions.
            </summary>
            <value>
            The transactions.
            </value>
        </member>
        <member name="P:Rock.Financial.Batch.ModifiedDateTime">
            <summary>
            Gets or sets the modified date time.
            </summary>
            <value>
            The modified date time.
            </value>
        </member>
        <member name="P:Rock.Financial.Batch.CreatedDateTime">
            <summary>
            Gets or sets the created date time.
            </summary>
            <value>
            The created date time.
            </value>
        </member>
        <member name="P:Rock.Financial.Batch.CreatedByPersonId">
            <summary>
            Gets or sets the created by person id.
            </summary>
            <value>
            The created by person id.
            </value>
        </member>
        <member name="P:Rock.Financial.Batch.ModifiedByPersonId">
            <summary>
            Gets or sets the modified by person id.
            </summary>
            <value>
            The modified by person id.
            </value>
        </member>
        <member name="P:Rock.Financial.Batch.CreatedByPerson">
            <summary>
            Gets or sets the created by person.
            </summary>
            <value>
            The created by person.
            </value>
        </member>
        <member name="P:Rock.Financial.Batch.ModifiedByPerson">
            <summary>
            Gets or sets the modified by person.
            </summary>
            <value>
            The modified by person.
            </value>
        </member>
        <member name="P:Rock.Financial.Batch.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="T:Rock.Financial.BatchConfiguration">
            <summary>
            Batch Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Financial.BatchConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.BatchConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Financial.BatchDTO">
            <summary>
            Data Transfer Object for Batch object
            </summary>
        </member>
        <member name="M:Rock.Financial.BatchDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Financial.BatchDTO.#ctor(Rock.Financial.Batch)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="batch"></param>
        </member>
        <member name="M:Rock.Financial.BatchDTO.CopyFromModel(Rock.Financial.Batch)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="batch"></param>
        </member>
        <member name="M:Rock.Financial.BatchDTO.CopyToModel(Rock.Financial.Batch)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="batch"></param>
        </member>
        <member name="T:Rock.Financial.BatchService">
            <summary>
            Batch Service class
            </summary>
            <summary>
            Service class for Batch objects.
            </summary>
        </member>
        <member name="M:Rock.Financial.BatchService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Financial.BatchService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Financial.BatchService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.BatchService"/> class.
            </summary>
        </member>
        <member name="M:Rock.Financial.BatchService.#ctor(Rock.Data.IRepository{Rock.Financial.Batch})">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.BatchService"/> class.
            </summary>
            <param name="repository">The repository.</param>
        </member>
        <member name="T:Rock.Financial.Fund">
            <summary>
            Fund POCO class.
            </summary>
        </member>
        <member name="P:Rock.Financial.Fund.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.PublicName">
            <summary>
            Gets or sets the name of the public.
            </summary>
            <value>
            The name of the public.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.ParentFundId">
            <summary>
            Gets or sets the parent fund id.
            </summary>
            <value>
            The parent fund id.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.IsTaxDeductible">
            <summary>
            Gets or sets a value indicating whether [tax deductible].
            </summary>
            <value>
              <c>true</c> if [tax deductible]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.Order">
            <summary>
            Gets or sets the order.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.IsActive">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Rock.Financial.Fund"/> is active.
            </summary>
            <value>
              <c>true</c> if active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.StartDate">
            <summary>
            Gets or sets the start date.
            </summary>
            <value>
            The start date.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.EndDate">
            <summary>
            Gets or sets the end date.
            </summary>
            <value>
            The end date.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.IsPledgable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Rock.Financial.Fund"/> is pledgable.
            </summary>
            <value>
              <c>true</c> if pledgable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.GlCode">
            <summary>
            Gets or sets the gl code.
            </summary>
            <value>
            The gl code.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.FundTypeId">
            <summary>
            Gets or sets the fund type id.
            </summary>
            <value>
            The fund type id.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.Entity">
            <summary>
            Gets or sets the entity.
            </summary>
            <value>
            The entity.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.EntityId">
            <summary>
            Gets or sets the entity id.
            </summary>
            <value>
            The entity id.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.ParentFund">
            <summary>
            Gets or sets the parent fund.
            </summary>
            <value>
            The parent fund.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.FundType">
            <summary>
            Gets or sets the type of the fund.
            </summary>
            <value>
            The type of the fund.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.ChildFunds">
            <summary>
            Gets or sets the child funds.
            </summary>
            <value>
            The child funds.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.Pledges">
            <summary>
            Gets or sets the pledges.
            </summary>
            <value>
            The pledges.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.TransactionFunds">
            <summary>
            Gets or sets the transaction funds.
            </summary>
            <value>
            The transaction funds.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.ModifiedDateTime">
            <summary>
            Gets or sets the modified date time.
            </summary>
            <value>
            The modified date time.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.CreatedDateTime">
            <summary>
            Gets or sets the created date time.
            </summary>
            <value>
            The created date time.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.CreatedByPersonId">
            <summary>
            Gets or sets the created by person id.
            </summary>
            <value>
            The created by person id.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.ModifiedByPersonId">
            <summary>
            Gets or sets the modified by person id.
            </summary>
            <value>
            The modified by person id.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.CreatedByPerson">
            <summary>
            Gets or sets the created by person.
            </summary>
            <value>
            The created by person.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.ModifiedByPerson">
            <summary>
            Gets or sets the modified by person.
            </summary>
            <value>
            The modified by person.
            </value>
        </member>
        <member name="P:Rock.Financial.Fund.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="T:Rock.Financial.FundConfiguration">
            <summary>
            Fund Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Financial.FundConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.FundConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Financial.FundDTO">
            <summary>
            Data Transfer Object for Fund object
            </summary>
        </member>
        <member name="M:Rock.Financial.FundDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Financial.FundDTO.#ctor(Rock.Financial.Fund)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="fund"></param>
        </member>
        <member name="M:Rock.Financial.FundDTO.CopyFromModel(Rock.Financial.Fund)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="fund"></param>
        </member>
        <member name="M:Rock.Financial.FundDTO.CopyToModel(Rock.Financial.Fund)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="fund"></param>
        </member>
        <member name="T:Rock.Financial.FundService">
            <summary>
            Fund Service class
            </summary>
            <summary>
            Service class for Fund objects.
            </summary>
        </member>
        <member name="M:Rock.Financial.FundService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Financial.FundService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Financial.FundService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.FundService"/> class.
            </summary>
        </member>
        <member name="M:Rock.Financial.FundService.#ctor(Rock.Data.IRepository{Rock.Financial.Fund})">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.FundService"/> class.
            </summary>
            <param name="repository">The repository.</param>
        </member>
        <member name="T:Rock.Financial.Gateway">
            <summary>
            Payment Gateway POCO class.
            </summary>
        </member>
        <member name="P:Rock.Financial.Gateway.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Rock.Financial.Gateway.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Rock.Financial.Gateway.ApiUrl">
            <summary>
            Gets or sets the API URL.
            </summary>
            <value>
            The API URL.
            </value>
        </member>
        <member name="P:Rock.Financial.Gateway.ApiKey">
            <summary>
            Gets or sets the API key.
            </summary>
            <value>
            The API key.
            </value>
        </member>
        <member name="P:Rock.Financial.Gateway.ApiSecret">
            <summary>
            Gets or sets the API secret.
            </summary>
            <value>
            The API secret.
            </value>
        </member>
        <member name="P:Rock.Financial.Gateway.Transactions">
            <summary>
            Gets or sets the transactions.
            </summary>
            <value>
            The transactions.
            </value>
        </member>
        <member name="P:Rock.Financial.Gateway.ModifiedDateTime">
            <summary>
            Gets or sets the modified date time.
            </summary>
            <value>
            The modified date time.
            </value>
        </member>
        <member name="P:Rock.Financial.Gateway.CreatedDateTime">
            <summary>
            Gets or sets the created date time.
            </summary>
            <value>
            The created date time.
            </value>
        </member>
        <member name="P:Rock.Financial.Gateway.CreatedByPersonId">
            <summary>
            Gets or sets the created by person id.
            </summary>
            <value>
            The created by person id.
            </value>
        </member>
        <member name="P:Rock.Financial.Gateway.ModifiedByPersonId">
            <summary>
            Gets or sets the modified by person id.
            </summary>
            <value>
            The modified by person id.
            </value>
        </member>
        <member name="P:Rock.Financial.Gateway.CreatedByPerson">
            <summary>
            Gets or sets the created by person.
            </summary>
            <value>
            The created by person.
            </value>
        </member>
        <member name="P:Rock.Financial.Gateway.ModifiedByPerson">
            <summary>
            Gets or sets the modified by person.
            </summary>
            <value>
            The modified by person.
            </value>
        </member>
        <member name="T:Rock.Financial.GatewayConfiguration">
            <summary>
            Payment Gateway Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Financial.GatewayConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.GatewayConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Financial.GatewayDTO">
            <summary>
            Data Transfer Object for Gateway object
            </summary>
        </member>
        <member name="M:Rock.Financial.GatewayDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Financial.GatewayDTO.#ctor(Rock.Financial.Gateway)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="gateway"></param>
        </member>
        <member name="M:Rock.Financial.GatewayDTO.CopyFromModel(Rock.Financial.Gateway)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="gateway"></param>
        </member>
        <member name="M:Rock.Financial.GatewayDTO.CopyToModel(Rock.Financial.Gateway)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="gateway"></param>
        </member>
        <member name="T:Rock.Financial.GatewayService">
            <summary>
            Gateway Service class
            </summary>
        </member>
        <member name="M:Rock.Financial.GatewayService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Financial.GatewayService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="T:Rock.Financial.PersonAccountLookup">
            <summary>
            PersonAccountLookup POCO class.
            </summary>
        </member>
        <member name="P:Rock.Financial.PersonAccountLookup.PersonId">
            <summary>
            Gets or sets the person id.
            </summary>
            <value>
            The person id.
            </value>
        </member>
        <member name="P:Rock.Financial.PersonAccountLookup.Account">
            <summary>
            Gets or sets the account.
            </summary>
            <value>
            The account.
            </value>
        </member>
        <member name="P:Rock.Financial.PersonAccountLookup.Person">
            <summary>
            Gets or sets the person.
            </summary>
            <value>
            The person.
            </value>
        </member>
        <member name="P:Rock.Financial.PersonAccountLookup.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="T:Rock.Financial.PersonAccountLookupConfiguration">
            <summary>
            PersonAccountLookup Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Financial.PersonAccountLookupConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.PersonAccountLookupConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Financial.PersonAccountLookupDTO">
            <summary>
            Data Transfer Object for PersonAccountLookup object
            </summary>
        </member>
        <member name="M:Rock.Financial.PersonAccountLookupDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Financial.PersonAccountLookupDTO.#ctor(Rock.Financial.PersonAccountLookup)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="personAccountLookup"></param>
        </member>
        <member name="M:Rock.Financial.PersonAccountLookupDTO.CopyFromModel(Rock.Financial.PersonAccountLookup)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="personAccountLookup"></param>
        </member>
        <member name="M:Rock.Financial.PersonAccountLookupDTO.CopyToModel(Rock.Financial.PersonAccountLookup)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="personAccountLookup"></param>
        </member>
        <member name="T:Rock.Financial.PersonAccountLookupService">
            <summary>
            PersonAccountLookup Service class
            </summary>
            <summary>
            Service class for PersonAccountLookup objects.
            </summary>
        </member>
        <member name="M:Rock.Financial.PersonAccountLookupService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Financial.PersonAccountLookupService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Financial.PersonAccountLookupService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.PersonAccountLookupService"/> class.
            </summary>
        </member>
        <member name="M:Rock.Financial.PersonAccountLookupService.#ctor(Rock.Data.IRepository{Rock.Financial.PersonAccountLookup})">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.PersonAccountLookupService"/> class.
            </summary>
            <param name="repository">The repository.</param>
        </member>
        <member name="T:Rock.Financial.Pledge">
            <summary>
            Pledge POCO class.
            </summary>
        </member>
        <member name="P:Rock.Financial.Pledge.PersonId">
            <summary>
            Gets or sets the person id.
            </summary>
            <value>
            The person id.
            </value>
        </member>
        <member name="P:Rock.Financial.Pledge.FundId">
            <summary>
            Gets or sets the fund id.
            </summary>
            <value>
            The fund id.
            </value>
        </member>
        <member name="P:Rock.Financial.Pledge.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
            <value>
            The amount.
            </value>
        </member>
        <member name="P:Rock.Financial.Pledge.StartDate">
            <summary>
            Gets or sets the start date.
            </summary>
            <value>
            The start date.
            </value>
        </member>
        <member name="P:Rock.Financial.Pledge.EndDate">
            <summary>
            Gets or sets the end date.
            </summary>
            <value>
            The end date.
            </value>
        </member>
        <member name="P:Rock.Financial.Pledge.FrequencyTypeId">
            <summary>
            Gets or sets the frequency type id.
            </summary>
            <value>
            The frequency type id.
            </value>
        </member>
        <member name="P:Rock.Financial.Pledge.FrequencyAmount">
            <summary>
            Gets or sets the frequency amount.
            </summary>
            <value>
            The frequency amount.
            </value>
        </member>
        <member name="P:Rock.Financial.Pledge.Person">
            <summary>
            Gets or sets the person.
            </summary>
            <value>
            The person.
            </value>
        </member>
        <member name="P:Rock.Financial.Pledge.Fund">
            <summary>
            Gets or sets the fund.
            </summary>
            <value>
            The fund.
            </value>
        </member>
        <member name="P:Rock.Financial.Pledge.FrequencyType">
            <summary>
            Gets or sets the type of the frequency.
            </summary>
            <value>
            The type of the frequency.
            </value>
        </member>
        <member name="P:Rock.Financial.Pledge.ModifiedDateTime">
            <summary>
            Gets or sets the modified date time.
            </summary>
            <value>
            The modified date time.
            </value>
        </member>
        <member name="P:Rock.Financial.Pledge.CreatedDateTime">
            <summary>
            Gets or sets the created date time.
            </summary>
            <value>
            The created date time.
            </value>
        </member>
        <member name="P:Rock.Financial.Pledge.CreatedByPersonId">
            <summary>
            Gets or sets the created by person id.
            </summary>
            <value>
            The created by person id.
            </value>
        </member>
        <member name="P:Rock.Financial.Pledge.ModifiedByPersonId">
            <summary>
            Gets or sets the modified by person id.
            </summary>
            <value>
            The modified by person id.
            </value>
        </member>
        <member name="P:Rock.Financial.Pledge.CreatedByPerson">
            <summary>
            Gets or sets the created by person.
            </summary>
            <value>
            The created by person.
            </value>
        </member>
        <member name="P:Rock.Financial.Pledge.ModifiedByPerson">
            <summary>
            Gets or sets the modified by person.
            </summary>
            <value>
            The modified by person.
            </value>
        </member>
        <member name="P:Rock.Financial.Pledge.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="T:Rock.Financial.PledgeConfiguration">
            <summary>
            Pledge Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Financial.PledgeConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.PledgeConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Financial.PledgeDTO">
            <summary>
            Data Transfer Object for Pledge object
            </summary>
        </member>
        <member name="M:Rock.Financial.PledgeDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Financial.PledgeDTO.#ctor(Rock.Financial.Pledge)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="pledge"></param>
        </member>
        <member name="M:Rock.Financial.PledgeDTO.CopyFromModel(Rock.Financial.Pledge)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="pledge"></param>
        </member>
        <member name="M:Rock.Financial.PledgeDTO.CopyToModel(Rock.Financial.Pledge)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="pledge"></param>
        </member>
        <member name="T:Rock.Financial.PledgeService">
            <summary>
            Pledge Service class
            </summary>
            <summary>
            Service class for Pledge objects.
            </summary>
        </member>
        <member name="M:Rock.Financial.PledgeService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Financial.PledgeService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Financial.PledgeService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.PledgeService"/> class.
            </summary>
        </member>
        <member name="M:Rock.Financial.PledgeService.#ctor(Rock.Data.IRepository{Rock.Financial.Pledge})">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.PledgeService"/> class.
            </summary>
            <param name="repository">The repository.</param>
        </member>
        <member name="T:Rock.Financial.Transaction">
            <summary>
            Transaction POCO class.
            </summary>
        </member>
        <member name="P:Rock.Financial.Transaction.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.TransactionDate">
            <summary>
            Gets or sets the transaction date.
            </summary>
            <value>
            The transaction date.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.Entity">
            <summary>
            Gets or sets the entity.
            </summary>
            <value>
            The entity.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.EntityId">
            <summary>
            Gets or sets the entity id.
            </summary>
            <value>
            The entity id.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.BatchId">
            <summary>
            Gets or sets the batch id.
            </summary>
            <value>
            The batch id.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.CurrencyTypeId">
            <summary>
            Gets or sets the currency type id.
            </summary>
            <value>
            The currency type id.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.CreditCardTypeId">
            <summary>
            Gets or sets the credit card type id.
            </summary>
            <value>
            The credit card type id.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
            <value>
            The amount.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.RefundTransactionId">
            <summary>
            Gets or sets the refund transaction id.
            </summary>
            <value>
            The refund transaction id.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.TransactionImageId">
            <summary>
            Gets or sets the transaction image id.
            </summary>
            <value>
            The transaction image id.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.TransactionCode">
            <summary>
            Gets or sets the transaction code.
            </summary>
            <value>
            The transaction code.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.GatewayId">
            <summary>
            Gets or sets the gateway id.
            </summary>
            <value>
            The gateway id.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.SourceTypeId">
            <summary>
            Gets or sets the source type id.
            </summary>
            <value>
            The source type id.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.Summary">
            <summary>
            Gets or sets the summary.
            </summary>
            <value>
            The summary.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.Batch">
            <summary>
            Gets or sets the batch.
            </summary>
            <value>
            The batch.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.CurrencyType">
            <summary>
            Gets or sets the type of the currency.
            </summary>
            <value>
            The type of the currency.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.CreditCardType">
            <summary>
            Gets or sets the type of the credit card.
            </summary>
            <value>
            The type of the credit card.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.Gateway">
            <summary>
            Gets or sets the gateway.
            </summary>
            <value>
            The gateway.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.SourceType">
            <summary>
            Gets or sets the type of the source.
            </summary>
            <value>
            The type of the source.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.TransactionDetails">
            <summary>
            Gets or sets the transaction details.
            </summary>
            <value>
            The transaction details.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.TransactionFunds">
            <summary>
            Gets or sets the transaction funds.
            </summary>
            <value>
            The transaction funds.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.ModifiedDateTime">
            <summary>
            Gets or sets the modified date time.
            </summary>
            <value>
            The modified date time.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.CreatedDateTime">
            <summary>
            Gets or sets the created date time.
            </summary>
            <value>
            The created date time.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.CreatedByPersonId">
            <summary>
            Gets or sets the created by person id.
            </summary>
            <value>
            The created by person id.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.ModifiedByPersonId">
            <summary>
            Gets or sets the modified by person id.
            </summary>
            <value>
            The modified by person id.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.CreatedByPerson">
            <summary>
            Gets or sets the created by person.
            </summary>
            <value>
            The created by person.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.ModifiedByPerson">
            <summary>
            Gets or sets the modified by person.
            </summary>
            <value>
            The modified by person.
            </value>
        </member>
        <member name="P:Rock.Financial.Transaction.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="T:Rock.Financial.TransactionConfiguration">
            <summary>
            Transaction Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Financial.TransactionConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.TransactionConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Financial.TransactionDetail">
            <summary>
            TransactionDetail POCO class.
            </summary>
        </member>
        <member name="P:Rock.Financial.TransactionDetail.TransactionId">
            <summary>
            Gets or sets the transaction id.
            </summary>
            <value>
            The transaction id.
            </value>
        </member>
        <member name="P:Rock.Financial.TransactionDetail.Entity">
            <summary>
            Gets or sets the entity.
            </summary>
            <value>
            The entity.
            </value>
        </member>
        <member name="P:Rock.Financial.TransactionDetail.EntityId">
            <summary>
            Gets or sets the entity id.
            </summary>
            <value>
            The entity id.
            </value>
        </member>
        <member name="P:Rock.Financial.TransactionDetail.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
            <value>
            The amount.
            </value>
        </member>
        <member name="P:Rock.Financial.TransactionDetail.Summary">
            <summary>
            Gets or sets the summary.
            </summary>
            <value>
            The summary.
            </value>
        </member>
        <member name="P:Rock.Financial.TransactionDetail.Transaction">
            <summary>
            Gets or sets the transaction.
            </summary>
            <value>
            The transaction.
            </value>
        </member>
        <member name="P:Rock.Financial.TransactionDetail.ModifiedDateTime">
            <summary>
            Gets or sets the modified date time.
            </summary>
            <value>
            The modified date time.
            </value>
        </member>
        <member name="P:Rock.Financial.TransactionDetail.CreatedDateTime">
            <summary>
            Gets or sets the created date time.
            </summary>
            <value>
            The created date time.
            </value>
        </member>
        <member name="P:Rock.Financial.TransactionDetail.CreatedByPersonId">
            <summary>
            Gets or sets the created by person id.
            </summary>
            <value>
            The created by person id.
            </value>
        </member>
        <member name="P:Rock.Financial.TransactionDetail.ModifiedByPersonId">
            <summary>
            Gets or sets the modified by person id.
            </summary>
            <value>
            The modified by person id.
            </value>
        </member>
        <member name="P:Rock.Financial.TransactionDetail.CreatedByPerson">
            <summary>
            Gets or sets the created by person.
            </summary>
            <value>
            The created by person.
            </value>
        </member>
        <member name="P:Rock.Financial.TransactionDetail.ModifiedByPerson">
            <summary>
            Gets or sets the modified by person.
            </summary>
            <value>
            The modified by person.
            </value>
        </member>
        <member name="P:Rock.Financial.TransactionDetail.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="T:Rock.Financial.TransactionDetailConfiguration">
            <summary>
            TransactionDetail Configuration class
            </summary>
        </member>
        <member name="M:Rock.Financial.TransactionDetailConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.TransactionDetailConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Financial.TransactionDetailDTO">
            <summary>
            Data Transfer Object for TransactionDetail object
            </summary>
        </member>
        <member name="M:Rock.Financial.TransactionDetailDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Financial.TransactionDetailDTO.#ctor(Rock.Financial.TransactionDetail)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="transactionDetail"></param>
        </member>
        <member name="M:Rock.Financial.TransactionDetailDTO.CopyFromModel(Rock.Financial.TransactionDetail)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="transactionDetail"></param>
        </member>
        <member name="M:Rock.Financial.TransactionDetailDTO.CopyToModel(Rock.Financial.TransactionDetail)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="transactionDetail"></param>
        </member>
        <member name="T:Rock.Financial.TransactionDetailService">
            <summary>
            TransactionDetail Service class
            </summary>
            <summary>
            Service class for TransactionDetail objects
            </summary>
        </member>
        <member name="M:Rock.Financial.TransactionDetailService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Financial.TransactionDetailService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Financial.TransactionDetailService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.TransactionDetailService"/> class.
            </summary>
        </member>
        <member name="M:Rock.Financial.TransactionDetailService.#ctor(Rock.Data.IRepository{Rock.Financial.TransactionDetail})">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.TransactionDetailService"/> class.
            </summary>
            <param name="repository">The repository.</param>
        </member>
        <member name="T:Rock.Financial.TransactionDTO">
            <summary>
            Data Transfer Object for Transaction object
            </summary>
        </member>
        <member name="M:Rock.Financial.TransactionDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Financial.TransactionDTO.#ctor(Rock.Financial.Transaction)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="transaction"></param>
        </member>
        <member name="M:Rock.Financial.TransactionDTO.CopyFromModel(Rock.Financial.Transaction)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="transaction"></param>
        </member>
        <member name="M:Rock.Financial.TransactionDTO.CopyToModel(Rock.Financial.Transaction)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="transaction"></param>
        </member>
        <member name="T:Rock.Financial.TransactionFund">
            <summary>
            TransactionFund POCO class.
            </summary>
        </member>
        <member name="P:Rock.Financial.TransactionFund.TransactionId">
            <summary>
            Gets or sets the transaction id.
            </summary>
            <value>
            The transaction id.
            </value>
        </member>
        <member name="P:Rock.Financial.TransactionFund.FundId">
            <summary>
            Gets or sets the fund id.
            </summary>
            <value>
            The fund id.
            </value>
        </member>
        <member name="P:Rock.Financial.TransactionFund.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
            <value>
            The amount.
            </value>
        </member>
        <member name="P:Rock.Financial.TransactionFund.Transaction">
            <summary>
            Gets or sets the transaction.
            </summary>
            <value>
            The transaction.
            </value>
        </member>
        <member name="P:Rock.Financial.TransactionFund.Fund">
            <summary>
            Gets or sets the fund.
            </summary>
            <value>
            The fund.
            </value>
        </member>
        <member name="T:Rock.Financial.TransactionFundConfiguration">
            <summary>
            TransactionFund Configuration class
            </summary>
        </member>
        <member name="M:Rock.Financial.TransactionFundConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.TransactionFundConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Financial.TransactionService">
            <summary>
            Transaction Service class
            </summary>
            <summary>
            Service class for Transaction objects.
            </summary>
        </member>
        <member name="M:Rock.Financial.TransactionService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Financial.TransactionService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Financial.TransactionService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.TransactionService"/> class.
            </summary>
        </member>
        <member name="M:Rock.Financial.TransactionService.#ctor(Rock.Data.IRepository{Rock.Financial.Transaction})">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Financial.TransactionService"/> class.
            </summary>
            <param name="repository">The repository.</param>
        </member>
        <member name="T:Rock.Groups.Group">
            <summary>
            Group POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Groups.Group.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Groups.Group.ParentGroupId">
            <summary>
            Gets or sets the Parent Group Id.
            </summary>
            <value>
            Parent Group Id.
            </value>
        </member>
        <member name="P:Rock.Groups.Group.GroupTypeId">
            <summary>
            Gets or sets the Group Type Id.
            </summary>
            <value>
            Group Type Id.
            </value>
        </member>
        <member name="P:Rock.Groups.Group.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Groups.Group.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Groups.Group.IsSecurityRole">
            <summary>
            Gets or sets the Is Security Role.
            </summary>
            <value>
            Is Security Role.
            </value>
        </member>
        <member name="P:Rock.Groups.Group.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Groups.Group.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Groups.Group.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Groups.Group.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Groups.Group.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Groups.Group.Groups">
            <summary>
            Gets or sets the Groups.
            </summary>
            <value>
            Collection of Groups.
            </value>
        </member>
        <member name="P:Rock.Groups.Group.Members">
            <summary>
            Gets or sets the Members.
            </summary>
            <value>
            Collection of Members.
            </value>
        </member>
        <member name="P:Rock.Groups.Group.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Groups.Group.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Groups.Group.ParentGroup">
            <summary>
            Gets or sets the Parent Group.
            </summary>
            <value>
            A <see cref="T:Rock.Groups.Group"/> object.
            </value>
        </member>
        <member name="P:Rock.Groups.Group.GroupType">
            <summary>
            Gets or sets the Group Type.
            </summary>
            <value>
            A <see cref="P:Rock.Groups.Group.GroupType"/> object.
            </value>
        </member>
        <member name="T:Rock.Groups.GroupConfiguration">
            <summary>
            Group Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Groups.GroupConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Groups.GroupConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Groups.GroupDTO">
            <summary>
            Data Transfer Object for Group object
            </summary>
        </member>
        <member name="M:Rock.Groups.GroupDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Groups.GroupDTO.#ctor(Rock.Groups.Group)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="group"></param>
        </member>
        <member name="M:Rock.Groups.GroupDTO.CopyFromModel(Rock.Groups.Group)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="group"></param>
        </member>
        <member name="M:Rock.Groups.GroupDTO.CopyToModel(Rock.Groups.Group)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="group"></param>
        </member>
        <member name="T:Rock.Groups.GroupRoleDTO">
            <summary>
            Data Transfer Object for GroupRole object
            </summary>
        </member>
        <member name="M:Rock.Groups.GroupRoleDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Groups.GroupRoleDTO.#ctor(Rock.Groups.GroupRole)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="groupRole"></param>
        </member>
        <member name="M:Rock.Groups.GroupRoleDTO.CopyFromModel(Rock.Groups.GroupRole)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="groupRole"></param>
        </member>
        <member name="M:Rock.Groups.GroupRoleDTO.CopyToModel(Rock.Groups.GroupRole)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="groupRole"></param>
        </member>
        <member name="T:Rock.Groups.GroupRoleService">
            <summary>
            GroupRole Service class
            </summary>
            <summary>
            Group Role POCO Service class
            </summary>
        </member>
        <member name="M:Rock.Groups.GroupRoleService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Groups.GroupRoleService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Groups.GroupRoleService.GetByOrder(System.Nullable{System.Int32})">
            <summary>
            Gets Group Roles by Order
            </summary>
            <param name="order">Order.</param>
            <returns>An enumerable list of GroupRole objects.</returns>
        </member>
        <member name="T:Rock.Groups.GroupService">
            <summary>
            Group Service class
            </summary>
            <summary>
            Group POCO Service class
            </summary>
        </member>
        <member name="M:Rock.Groups.GroupService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Groups.GroupService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Groups.GroupService.GetByGroupTypeId(System.Int32)">
            <summary>
            Gets Groups by Group Type Id
            </summary>
            <param name="groupTypeId">Group Type Id.</param>
            <returns>An enumerable list of Group objects.</returns>
        </member>
        <member name="M:Rock.Groups.GroupService.GetByGuid(System.Guid)">
            <summary>
            Gets Group by Guid
            </summary>
            <param name="guid">Guid.</param>
            <returns>Group object.</returns>
        </member>
        <member name="M:Rock.Groups.GroupService.GetByIsSecurityRole(System.Boolean)">
            <summary>
            Gets Groups by Is Security Role
            </summary>
            <param name="isSecurityRole">Is Security Role.</param>
            <returns>An enumerable list of Group objects.</returns>
        </member>
        <member name="M:Rock.Groups.GroupService.GetByParentGroupId(System.Nullable{System.Int32})">
            <summary>
            Gets Groups by Parent Group Id
            </summary>
            <param name="parentGroupId">Parent Group Id.</param>
            <returns>An enumerable list of Group objects.</returns>
        </member>
        <member name="M:Rock.Groups.GroupService.GetByParentGroupIdAndName(System.Nullable{System.Int32},System.String)">
            <summary>
            Gets Groups by Parent Group Id And Name
            </summary>
            <param name="parentGroupId">Parent Group Id.</param>
            <param name="name">Name.</param>
            <returns>An enumerable list of Group objects.</returns>
        </member>
        <member name="T:Rock.Groups.GroupRole">
            <summary>
            Group Role POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Groups.GroupRole.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupRole.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupRole.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupRole.Order">
            <summary>
            Gets or sets the Order.
            </summary>
            <value>
            Order.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupRole.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupRole.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupRole.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupRole.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupRole.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Groups.GroupRole.GroupTypes">
            <summary>
            Gets or sets the Group Types.
            </summary>
            <value>
            Collection of Group Types.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupRole.Members">
            <summary>
            Gets or sets the Members.
            </summary>
            <value>
            Collection of Members.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupRole.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupRole.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Groups.GroupRoleConfiguration">
            <summary>
            Group Role Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Groups.GroupRoleConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Groups.GroupRoleConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Groups.GroupType">
            <summary>
            Group Type POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Groups.GroupType.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupType.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Name.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupType.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Description.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupType.DefaultGroupRoleId">
            <summary>
            Gets or sets the Default Group Role Id.
            </summary>
            <value>
            Default Group Role Id.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupType.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupType.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupType.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupType.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupType.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Groups.GroupType.Groups">
            <summary>
            Gets or sets the Groups.
            </summary>
            <value>
            Collection of Groups.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupType.ChildGroupTypes">
            <summary>
            Gets or sets the Child Group Types.
            </summary>
            <value>
            Collection of Child Group Types.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupType.ParentGroupTypes">
            <summary>
            Gets or sets the Parent Group Types.
            </summary>
            <value>
            Collection of Parent Group Types.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupType.GroupRoles">
            <summary>
            Gets or sets the Group Roles.
            </summary>
            <value>
            Collection of Group Roles.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupType.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupType.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Groups.GroupType.DefaultGroupRole">
            <summary>
            Gets or sets the Default Group Role.
            </summary>
            <value>
            A <see cref="T:Rock.Groups.GroupRole"/> object.
            </value>
        </member>
        <member name="T:Rock.Groups.GroupTypeConfiguration">
            <summary>
            Group Type Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Groups.GroupTypeConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Groups.GroupTypeConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Groups.GroupTypeDTO">
            <summary>
            Data Transfer Object for GroupType object
            </summary>
        </member>
        <member name="M:Rock.Groups.GroupTypeDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Groups.GroupTypeDTO.#ctor(Rock.Groups.GroupType)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="groupType"></param>
        </member>
        <member name="M:Rock.Groups.GroupTypeDTO.CopyFromModel(Rock.Groups.GroupType)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="groupType"></param>
        </member>
        <member name="M:Rock.Groups.GroupTypeDTO.CopyToModel(Rock.Groups.GroupType)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="groupType"></param>
        </member>
        <member name="T:Rock.Groups.GroupTypeService">
            <summary>
            GroupType Service class
            </summary>
            <summary>
            Group Type POCO Service class
            </summary>
        </member>
        <member name="M:Rock.Groups.GroupTypeService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Groups.GroupTypeService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Groups.GroupTypeService.GetByDefaultGroupRoleId(System.Nullable{System.Int32})">
            <summary>
            Gets Group Types by Default Group Role Id
            </summary>
            <param name="defaultGroupRoleId">Default Group Role Id.</param>
            <returns>An enumerable list of GroupType objects.</returns>
        </member>
        <member name="T:Rock.Groups.Member">
            <summary>
            Member POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Groups.Member.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Groups.Member.GroupId">
            <summary>
            Gets or sets the Group Id.
            </summary>
            <value>
            Group Id.
            </value>
        </member>
        <member name="P:Rock.Groups.Member.PersonId">
            <summary>
            Gets or sets the Person Id.
            </summary>
            <value>
            Person Id.
            </value>
        </member>
        <member name="P:Rock.Groups.Member.GroupRoleId">
            <summary>
            Gets or sets the Group Role Id.
            </summary>
            <value>
            Group Role Id.
            </value>
        </member>
        <member name="P:Rock.Groups.Member.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Groups.Member.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Groups.Member.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Groups.Member.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Groups.Member.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Groups.Member.Person">
            <summary>
            Gets or sets the Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Groups.Member.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Groups.Member.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Groups.Member.Group">
            <summary>
            Gets or sets the Group.
            </summary>
            <value>
            A <see cref="P:Rock.Groups.Member.Group"/> object.
            </value>
        </member>
        <member name="P:Rock.Groups.Member.GroupRole">
            <summary>
            Gets or sets the Group Role.
            </summary>
            <value>
            A <see cref="P:Rock.Groups.Member.GroupRole"/> object.
            </value>
        </member>
        <member name="T:Rock.Groups.MemberConfiguration">
            <summary>
            Member Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Groups.MemberConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Groups.MemberConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Groups.MemberDTO">
            <summary>
            Data Transfer Object for Member object
            </summary>
        </member>
        <member name="M:Rock.Groups.MemberDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Groups.MemberDTO.#ctor(Rock.Groups.Member)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="member"></param>
        </member>
        <member name="M:Rock.Groups.MemberDTO.CopyFromModel(Rock.Groups.Member)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="member"></param>
        </member>
        <member name="M:Rock.Groups.MemberDTO.CopyToModel(Rock.Groups.Member)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="member"></param>
        </member>
        <member name="T:Rock.Groups.MemberService">
            <summary>
            Member Service class
            </summary>
            <summary>
            Member POCO Service class
            </summary>
        </member>
        <member name="M:Rock.Groups.MemberService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Groups.MemberService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Groups.MemberService.GetByGroupId(System.Int32)">
            <summary>
            Gets Members by Group Id
            </summary>
            <param name="groupId">Group Id.</param>
            <returns>An enumerable list of Member objects.</returns>
        </member>
        <member name="M:Rock.Groups.MemberService.GetByGroupIdAndPersonIdAndGroupRoleId(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets Member by Group Id And Person Id And Group Role Id
            </summary>
            <param name="groupId">Group Id.</param>
            <param name="personId">Person Id.</param>
            <param name="groupRoleId">Group Role Id.</param>
            <returns>Member object.</returns>
        </member>
        <member name="M:Rock.Groups.MemberService.GetByGroupRoleId(System.Int32)">
            <summary>
            Gets Members by Group Role Id
            </summary>
            <param name="groupRoleId">Group Role Id.</param>
            <returns>An enumerable list of Member objects.</returns>
        </member>
        <member name="M:Rock.Groups.MemberService.GetByPersonId(System.Int32)">
            <summary>
            Gets Members by Person Id
            </summary>
            <param name="personId">Person Id.</param>
            <returns>An enumerable list of Member objects.</returns>
        </member>
        <member name="T:Rock.Jobs.CleanCachedImages">
            <summary>
            Job to keep a heartbeat of the job process so we know when the jobs stop working
            </summary>
            <author>Jon Edmiston</author>
            <author>Spark Development Network</author>
        </member>
        <member name="M:Rock.Jobs.CleanCachedImages.#ctor">
            <summary> 
            Empty constructor for job initilization
            <para>
            Jobs require a public empty constructor so that the
            scheduler can instantiate the class whenever it needs.
            </para>
            </summary>
        </member>
        <member name="M:Rock.Jobs.CleanCachedImages.Execute(Quartz.IJobExecutionContext)">
            <summary> 
            Job that updates the JobPulse setting with the current date/time.
            This will allow us to notify an admin if the jobs stop running.
            
            Called by the <see cref="T:Quartz.IScheduler"/> when a
            <see cref="T:Quartz.ITrigger"/> fires that is associated with
            the <see cref="T:Quartz.IJob"/>.
            </summary>
        </member>
        <member name="T:Rock.Jobs.SendGridProcess">
            <summary>
            Job to keep a heartbeat of the job process so we know when the jobs stop working
            </summary>
            <author>Jon Edmiston</author>
            <author>Spark Development Network</author>
        </member>
        <member name="M:Rock.Jobs.SendGridProcess.#ctor">
            <summary> 
            Empty constructor for job initilization
            <para>
            Jobs require a public empty constructor so that the
            scheduler can instantiate the class whenever it needs.
            </para>
            </summary>
        </member>
        <member name="M:Rock.Jobs.SendGridProcess.Execute(Quartz.IJobExecutionContext)">
            <summary> 
            Job that updates the JobPulse setting with the current date/time.
            This will allow us to notify an admin if the jobs stop running.
            
            Called by the <see cref="T:Quartz.IScheduler"/> when a
            <see cref="T:Quartz.ITrigger"/> fires that is associated with
            the <see cref="T:Quartz.IJob"/>.
            </summary>
        </member>
        <member name="T:Rock.Jobs.RockCleanup">
            <summary>
            Job to keep a heartbeat of the job process so we know when the jobs stop working
            </summary>
            <author>Jon Edmiston</author>
            <author>Spark Development Network</author>
        </member>
        <member name="M:Rock.Jobs.RockCleanup.#ctor">
            <summary> 
            Empty constructor for job initilization
            <para>
            Jobs require a public empty constructor so that the
            scheduler can instantiate the class whenever it needs.
            </para>
            </summary>
        </member>
        <member name="M:Rock.Jobs.RockCleanup.Execute(Quartz.IJobExecutionContext)">
            <summary> 
            Job that updates the JobPulse setting with the current date/time.
            This will allow us to notify an admin if the jobs stop running.
            
            Called by the <see cref="T:Quartz.IScheduler"/> when a
            <see cref="T:Quartz.ITrigger"/> fires that is associated with
            the <see cref="T:Quartz.IJob"/>.
            </summary>
        </member>
        <member name="M:Rock.Migrations.CreateDatabase.CreateIndexes">
            <summary>
            Creates additional indexes.  A call to this method should be added at the end of the Up() 
            method in the initial migration
            </summary>
        </member>
        <member name="M:Rock.Migrations.CreateDatabase.DropIndexes">
            <summary>
            Drops additional indexes.  A call to this method should be added at the beginning of the Down()
            method in the initial migration
            </summary>
        </member>
        <member name="M:Rock.Migrations.CreateDatabase.AddData">
            <summary>
            Adds the initial data.
            </summary>
        </member>
        <member name="T:Rock.Security.AdditionalActionsAttribute">
            <summary>
            A class Attribute that can be used by objects that implement ISecured to add additional supported actions
            </summary>
        </member>
        <member name="M:Rock.Security.AdditionalActionsAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Security.AdditionalActionsAttribute"/> class.
            </summary>
            <param name="actions">The actions.</param>
        </member>
        <member name="P:Rock.Security.AdditionalActionsAttribute.AdditionalActions">
            <summary>
            Gets or sets the additional actions to support
            </summary>
            <value>
            The Actions.
            </value>
        </member>
        <member name="T:Rock.Security.Encryption">
            <summary>
            Encryption Helper class
            </summary>
        </member>
        <member name="M:Rock.Security.Encryption.EncryptString(System.String)">
            <summary>
            Encrypts a string.
            </summary>
            <param name="Message">The string to encrypt.</param>
            <param name="Passphrase">The passphrase to use.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Security.Encryption.DecryptString(System.String)">
            <summary>
            Decrypts a string.
            </summary>
            <param name="Message">The string to decrypt.</param>
            <param name="Passphrase">The passphrase to use.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Security.GenericEntity">
            <summary>
            A generic ISecured entity
            </summary>
        </member>
        <member name="M:Rock.Security.GenericEntity.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Security.GenericEntity"/> class.
            </summary>
            <param name="authEntity">The auth entity.</param>
        </member>
        <member name="M:Rock.Security.GenericEntity.IsAuthorized(System.String,Rock.CRM.Person)">
            <summary>
            Return <c>true</c> if the user is authorized to perform the selected action on this object.
            </summary>
            <param name="action">The action.</param>
            <param name="person">The person.</param>
            <returns>
              <c>true</c> if the specified action is authorized; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Rock.Security.GenericEntity.IsAllowedByDefault(System.String)">
            <summary>
            If a user or role is not specifically allowed or denied to perform the selected action,
            return <c>true</c> if they should be allowed anyway or <c>false</c> if not.
            </summary>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="P:Rock.Security.GenericEntity.AuthEntity">
            <summary>
            The auth entity. Classes that implement the <see cref="T:Rock.Security.ISecured"/> interface should return
            a value that is unique across all <see cref="T:Rock.Security.ISecured"/> classes.  Typically this is the
            qualified name of the class.
            </summary>
        </member>
        <member name="P:Rock.Security.GenericEntity.Id">
            <summary>
            The Id
            </summary>
        </member>
        <member name="P:Rock.Security.GenericEntity.ParentAuthority">
            <summary>
            A parent authority.  If a user is not specifically allowed or denied access to
            this object, Rock will check access to the parent authority specified by this property.
            </summary>
        </member>
        <member name="P:Rock.Security.GenericEntity.SupportedActions">
            <summary>
            A list of actions that this class supports.
            </summary>
        </member>
        <member name="T:Rock.Services.NuGet.WebProjectManager">
            <summary>
            This is the service layer that handles installing, updating, removing Packages (aka Plugins)
            from the website / local filesystem and the Rock Quarry (our NuGet server).
            </summary>
        </member>
        <member name="M:Rock.Services.NuGet.WebProjectManager.#ctor(System.String,System.String)">
            <summary>
            Creates a WebProjectManager service.
            </summary>
            <param name="remoteSource">URL of the NuGet server API (ex, http://nuget.org/api/v2 ).</param>
            <param name="siteRoot">The physical path to the web root.</param>
        </member>
        <member name="M:Rock.Services.NuGet.WebProjectManager.GetLatestRemotePackages(System.String,System.Boolean)">
            <summary>
            Gets the newest/latest package or all of them matching the given keyword search.
            </summary>
            <param name="searchTerms">a string of space delimited search terms</param>
            <param name="includeAllVersions">if true, returns all matching packages; otherwise only the latest</param>
            <param name="includeAllVersions">Indicates whether to include all versions of an update as opposed to only including the latest version.</param>
            <returns>a list of packages</returns>
        </member>
        <member name="M:Rock.Services.NuGet.WebProjectManager.GetRemotePackages(System.String)">
            <summary>
            Gets all matching packages for the given keyword search.
            </summary>
            <param name="searchTerms">a string of space delimited search terms</param>
            <returns>a list of packages</returns>
        </member>
        <member name="M:Rock.Services.NuGet.WebProjectManager.GetInstalledPackages(System.String)">
            <summary>
            Gets all matching installed packages for the given keyword search.
            </summary>
            <param name="searchTerms">a string of space delimited search terms</param>
            <returns>a list of packages</returns>
        </member>
        <member name="M:Rock.Services.NuGet.WebProjectManager.GetInstalledPackage(System.String)">
            <summary>
            Gets the locally installed package for the given id.
            </summary>
            <param name="packageId">the Id of a package</param>
            <returns>a package</returns>
        </member>
        <member name="M:Rock.Services.NuGet.WebProjectManager.InstallPackage(NuGet.IPackage)">
            <summary>
            Installs and adds a package reference to the project
            </summary>
            <returns>Warnings encountered when installing the package.</returns>
        </member>
        <member name="M:Rock.Services.NuGet.WebProjectManager.UpdatePackage(NuGet.IPackage)">
            <summary>
            Updates a package reference. Installs the package to the App_Data repository if it does not already exist.
            </summary>
            <returns>Warnings encountered when updating the package.</returns>
        </member>
        <member name="M:Rock.Services.NuGet.WebProjectManager.UninstallPackage(NuGet.IPackage,System.Boolean)">
            <summary>
            Removes a package reference and uninstalls the package
            </summary>
            <returns>Warnings encountered when uninstalling the package.</returns>
        </member>
        <member name="M:Rock.Services.NuGet.WebProjectManager.IsPackageInstalled(NuGet.IPackage)">
            <summary>
            Will let you know if this exact package is installed locally
            </summary>
            <param name="package"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Services.NuGet.WebProjectManager.IsPackageInstalled(NuGet.IPackage,System.Boolean)">
            <summary>
            Will let you know if this package is installed locally. If anyVersion is true
            it does not matter which version of the package; otherwise only returns true if
            an exact match.
            </summary>
            <param name="package"></param>
            <param name="anyVersion"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Services.NuGet.WebProjectManager.GetUpdate(NuGet.IPackage)">
            <summary>
            Gets the latest version of the given package.
            </summary>
            <param name="package">a package</param>
            <returns>a package; otherwise null if no package was found</returns>
        </member>
        <member name="M:Rock.Services.NuGet.WebProjectManager.GetUpdates">
            <summary>
            Gets all versions of the given package.
            </summary>
            <param name="package">a package</param>
            <returns>a list of packages</returns>
        </member>
        <member name="P:Rock.Services.NuGet.WebProjectManager.LocalRepository">
            <summary>
            Represents the local NuGet package repository.
            </summary>
        </member>
        <member name="P:Rock.Services.NuGet.WebProjectManager.SourceRepository">
            <summary>
            Represents the remote/source NuGet package repository.
            </summary>
        </member>
        <member name="T:Rock.SystemGuid.Block">
            <summary>
            System Blocks.  NOTE: Some of these are referenced in Migrations to avoid string-typos.
            </summary>
        </member>
        <member name="P:Rock.SystemGuid.Block.PLUGIN_MANAGER">
            <summary>
            Gets the Plugin Manager guid
            </summary>
        </member>
        <member name="T:Rock.SystemGuid.Group">
            <summary>
            System Email Templates
            </summary>
        </member>
        <member name="P:Rock.SystemGuid.Group.GROUP_ADMINISTRATORS">
            <summary>
            Gets the administrator group guid
            </summary>
        </member>
        <member name="P:Rock.SystemGuid.Group.GROUP_STAFF_MEMBERS">
            <summary>
            Gets the staff member group guid
            </summary>
        </member>
        <member name="T:Rock.SystemGuid.DefinedType">
            <summary>
            Static Guids used by the Rock ChMS application
            </summary>
        </member>
        <member name="P:Rock.SystemGuid.DefinedType.PERSON_RECORD_TYPE">
            <summary>
            Guid for the types of Person Records (such as person, business, etc.)
            </summary>
        </member>
        <member name="P:Rock.SystemGuid.DefinedType.PERSON_RECORD_STATUS">
            <summary>
            Guid for the types of Person Record Statuses (such as active, inactive, pending, etc.)
            </summary>
        </member>
        <member name="P:Rock.SystemGuid.DefinedType.PERSON_RECORD_STATUS_REASON">
            <summary>
            Guid for the types of Person Status Reasons (such as deceased, moved, etc.)
            </summary>
        </member>
        <member name="P:Rock.SystemGuid.DefinedType.PERSON_TITLE">
            <summary>
            Guid for the types of Person Titles (such as Mr., Mrs., Dr., etc.)
            </summary>
        </member>
        <member name="P:Rock.SystemGuid.DefinedType.PERSON_SUFFIX">
            <summary>
            Guid for the types of Person Suffixes (such as Jr., Sr., etc.)
            </summary>
        </member>
        <member name="P:Rock.SystemGuid.DefinedType.PERSON_MARITAL_STATUS">
            <summary>
            Guid for the types of Person Marital Statuses (such as Married, Single, Divorced, Widowed, etc.)
            </summary>
        </member>
        <member name="T:Rock.SystemGuid.Page">
            <summary>
            System Pages.  NOTE: Some of these are referenced in Migrations to avoid string-typos.
            </summary>
        </member>
        <member name="P:Rock.SystemGuid.Page.PLUGIN_SETTINGS">
            <summary>
            Gets the Plugin Settings guid
            </summary>
        </member>
        <member name="P:Rock.SystemGuid.Page.PLUGIN_MANAGER">
            <summary>
            Gets the Plugin Manager guid
            </summary>
        </member>
        <member name="T:Rock.Transactions.EntityChangeTransaction">
            <summary>
            Writes any entity chnages that are configured to be tracked
            </summary>
        </member>
        <member name="T:Rock.Transactions.ITransaction">
            <summary>
            Represents a Transaction class
            </summary>
        </member>
        <member name="M:Rock.Transactions.EntityChangeTransaction.Execute">
            <summary>
            Execute method to write transaction to the database.
            </summary>
        </member>
        <member name="P:Rock.Transactions.EntityChangeTransaction.Changes">
            <summary>
            Gets or sets the changes.
            </summary>
            <value>
            The changes.
            </value>
        </member>
        <member name="P:Rock.Transactions.EntityChangeTransaction.PersonId">
            <summary>
            Gets or sets the person id.
            </summary>
            <value>
            The person id.
            </value>
        </member>
        <member name="T:Rock.Transactions.UserLastActivityTransaction">
            <summary>
            Tracks when a person is viewed.
            </summary>
        </member>
        <member name="M:Rock.Transactions.UserLastActivityTransaction.Execute">
            <summary>
            Execute method to write transaction to the database.
            </summary>
        </member>
        <member name="P:Rock.Transactions.UserLastActivityTransaction.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>
            The user id.
            </value>
        </member>
        <member name="P:Rock.Transactions.UserLastActivityTransaction.LastActivityDate">
            <summary>
            Gets or sets the last activity date.
            </summary>
            <value>
            The last activity date.
            </value>
        </member>
        <member name="T:Rock.Transactions.PersonViewTransaction">
            <summary>
            Tracks when a person is viewed.
            </summary>
        </member>
        <member name="M:Rock.Transactions.PersonViewTransaction.Execute">
            <summary>
            Execute method to write transaction to the database.
            </summary>
        </member>
        <member name="P:Rock.Transactions.PersonViewTransaction.ViewerPersonId">
            <summary>
            Gets or sets the Person Id of the viewer.
            </summary>
            <value>
            Page Id.
            </value>
        </member>
        <member name="P:Rock.Transactions.PersonViewTransaction.TargetPersonId">
            <summary>
            Gets or sets the Person Id of the person who was viewed.
            </summary>
            <value>
            Site Id.
            </value>
        </member>
        <member name="P:Rock.Transactions.PersonViewTransaction.IPAddress">
            <summary>
            Gets or sets the IP address that requested the page.
            </summary>
            <value>
            IP Address.
            </value>
        </member>
        <member name="P:Rock.Transactions.PersonViewTransaction.Source">
            <summary>
            Gets or sets the source of the view (site id or application name)
            </summary>
            <value>
            Source.
            </value>
        </member>
        <member name="P:Rock.Transactions.PersonViewTransaction.DateViewed">
            <summary>
            Gets or sets the DateTime the person was viewed.
            </summary>
            <value>
            Date Viewed.
            </value>
        </member>
        <member name="T:Rock.Transactions.PageViewTransaction">
            <summary>
            Tracks when a page is viewed.
            </summary>
        </member>
        <member name="M:Rock.Transactions.PageViewTransaction.Execute">
            <summary>
            Execute method to write transaction to the database.
            </summary>
        </member>
        <member name="P:Rock.Transactions.PageViewTransaction.PageId">
            <summary>
            Gets or sets the Page Id.
            </summary>
            <value>
            Page Id.
            </value>
        </member>
        <member name="P:Rock.Transactions.PageViewTransaction.SiteId">
            <summary>
            Gets or sets the Site Id.
            </summary>
            <value>
            Site Id.
            </value>
        </member>
        <member name="P:Rock.Transactions.PageViewTransaction.PersonId">
            <summary>
            Gets or sets the Person Id.
            </summary>
            <value>
            Person Id.
            </value>
        </member>
        <member name="P:Rock.Transactions.PageViewTransaction.DateViewed">
            <summary>
            Gets or sets the DateTime the page was viewed.
            </summary>
            <value>
            Date Viewed.
            </value>
        </member>
        <member name="P:Rock.Transactions.PageViewTransaction.IPAddress">
            <summary>
            Gets or sets the IP address that requested the page.
            </summary>
            <value>
            IP Address.
            </value>
        </member>
        <member name="P:Rock.Transactions.PageViewTransaction.UserAgent">
            <summary>
            Gets or sets the browser vendor and version.
            </summary>
            <value>
            IP Address.
            </value>
        </member>
        <member name="P:Rock.Transactions.RockQueue.TransactionQueue">
            <summary>
            Gets or sets the Transaction Queue.
            </summary>
            <value>
            Page Id.
            </value>
        </member>
        <member name="T:Rock.SystemGuid.EmailTemplate">
            <summary>
            System Email Templates
            </summary>
        </member>
        <member name="P:Rock.SystemGuid.EmailTemplate.SECURITY_FORGOT_USERNAME">
            <summary>
            Gets the template guid for the Forgot Username email
            </summary>
        </member>
        <member name="P:Rock.SystemGuid.EmailTemplate.SECURITY_ACCOUNT_CREATED">
            <summary>
            Gets the template guid for the Account Created email
            </summary>
        </member>
        <member name="P:Rock.SystemGuid.EmailTemplate.SECURITY_CONFIRM_ACCOUNT">
            <summary>
            Gets the template guid for the Confirm Account email
            </summary>
        </member>
        <member name="P:Rock.SystemGuid.EmailTemplate.CONFIG_EXCEPTION_NOTIFICATION">
            <summary>
            Gets the template guid for the Exception Notification email
            </summary>
        </member>
        <member name="T:Rock.Util.Job">
            <summary>
            Job POCO Entity.
            </summary>
        </member>
        <member name="P:Rock.Util.Job.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            Determines whether the job is a system job..
            </value>
        </member>
        <member name="P:Rock.Util.Job.IsActive">
            <summary>
            Gets or sets the Active.
            </summary>
            <value>
            Determines is the job is currently active..
            </value>
        </member>
        <member name="P:Rock.Util.Job.Name">
            <summary>
            Gets or sets the Name.
            </summary>
            <value>
            Friendly name for the job..
            </value>
        </member>
        <member name="P:Rock.Util.Job.Description">
            <summary>
            Gets or sets the Description.
            </summary>
            <value>
            Notes about the job..
            </value>
        </member>
        <member name="P:Rock.Util.Job.Assemby">
            <summary>
            Gets or sets the Assemby.
            </summary>
            <value>
            Assembly (.dll) that contains the job class..
            </value>
        </member>
        <member name="P:Rock.Util.Job.Class">
            <summary>
            Gets or sets the Class.
            </summary>
            <value>
            The class name of the job to run..
            </value>
        </member>
        <member name="P:Rock.Util.Job.CronExpression">
            <summary>
            Gets or sets the Cron Expression.
            </summary>
            <value>
            The cron expression that is used to determine the schedule of the job (see http://www.quartz-scheduler.org/documentation/quartz-1.x/tutorials/crontrigger for syntax.).
            </value>
        </member>
        <member name="P:Rock.Util.Job.LastSuccessfulRun">
            <summary>
            Gets or sets the Last Successful Run.
            </summary>
            <value>
            Date and time the job last completed successfully..
            </value>
        </member>
        <member name="P:Rock.Util.Job.LastRunDate">
            <summary>
            Gets or sets the Last Run Date.
            </summary>
            <value>
            Last date and time the job attempted to run..
            </value>
        </member>
        <member name="P:Rock.Util.Job.LastRunDuration">
            <summary>
            Gets or sets the Last Run Duration.
            </summary>
            <value>
            Number of seconds that the last job took to finish..
            </value>
        </member>
        <member name="P:Rock.Util.Job.LastStatus">
            <summary>
            Gets or sets the Last Status.
            </summary>
            <value>
            The completion status from the last time the job was run (valid values 'Success', 'Exception', 'Error Loading Job')..
            </value>
        </member>
        <member name="P:Rock.Util.Job.LastStatusMessage">
            <summary>
            Gets or sets the Last Status Message.
            </summary>
            <value>
            Message from the last run.  Usually used to store the exception message..
            </value>
        </member>
        <member name="P:Rock.Util.Job.LastRunSchedulerName">
            <summary>
            Gets or sets the Last Run Scheduler Name.
            </summary>
            <value>
            Name of the scheduler that the job ran under.  This is used to determine if a job ran in IIS or the Windows service..
            </value>
        </member>
        <member name="P:Rock.Util.Job.NotificationEmails">
            <summary>
            Gets or sets the Notification Emails.
            </summary>
            <value>
            Email addresses (separated with commas) to be used for notification..
            </value>
        </member>
        <member name="P:Rock.Util.Job.NotificationStatus">
            <summary>
            Gets or sets the Notification Status.
            </summary>
            <value>
            Enum[JobNotificationStatus].
            </value>
        </member>
        <member name="P:Rock.Util.Job.CreatedDateTime">
            <summary>
            Gets or sets the Created Date Time.
            </summary>
            <value>
            Created Date Time.
            </value>
        </member>
        <member name="P:Rock.Util.Job.ModifiedDateTime">
            <summary>
            Gets or sets the Modified Date Time.
            </summary>
            <value>
            Modified Date Time.
            </value>
        </member>
        <member name="P:Rock.Util.Job.CreatedByPersonId">
            <summary>
            Gets or sets the Created By Person Id.
            </summary>
            <value>
            Created By Person Id.
            </value>
        </member>
        <member name="P:Rock.Util.Job.ModifiedByPersonId">
            <summary>
            Gets or sets the Modified By Person Id.
            </summary>
            <value>
            Modified By Person Id.
            </value>
        </member>
        <member name="P:Rock.Util.Job.AuthEntity">
            <summary>
            Gets the auth entity.
            </summary>
        </member>
        <member name="P:Rock.Util.Job.CreatedByPerson">
            <summary>
            Gets or sets the Created By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="P:Rock.Util.Job.ModifiedByPerson">
            <summary>
            Gets or sets the Modified By Person.
            </summary>
            <value>
            A <see cref="T:Rock.CRM.Person"/> object.
            </value>
        </member>
        <member name="T:Rock.Util.JobConfiguration">
            <summary>
            Job Configuration class.
            </summary>
        </member>
        <member name="M:Rock.Util.JobConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Util.JobConfiguration"/> class.
            </summary>
        </member>
        <member name="T:Rock.Util.JobNotificationStatus">
            <summary>
            Job notification status
            </summary>
        </member>
        <member name="F:Rock.Util.JobNotificationStatus.All">
            <summary>
            Notify on all status
            </summary>
        </member>
        <member name="F:Rock.Util.JobNotificationStatus.Success">
            <summary>
            Notify when successful
            </summary>
            
        </member>
        <member name="F:Rock.Util.JobNotificationStatus.Error">
            <summary>
            Notify when an error occurs
            </summary>
        </member>
        <member name="F:Rock.Util.JobNotificationStatus.None">
            <summary>
            Notify when a warning occurs
            </summary>
        </member>
        <member name="T:Rock.Util.JobDTO">
            <summary>
            Data Transfer Object for Job object
            </summary>
        </member>
        <member name="M:Rock.Util.JobDTO.#ctor">
            <summary>
            Instantiates a new DTO object
            </summary>
        </member>
        <member name="M:Rock.Util.JobDTO.#ctor(Rock.Util.Job)">
            <summary>
            Instantiates a new DTO object from the model
            </summary>
            <param name="job"></param>
        </member>
        <member name="M:Rock.Util.JobDTO.CopyFromModel(Rock.Util.Job)">
            <summary>
            Copies the model property values to the DTO properties
            </summary>
            <param name="job"></param>
        </member>
        <member name="M:Rock.Util.JobDTO.CopyToModel(Rock.Util.Job)">
            <summary>
            Copies the DTO property values to the model properties
            </summary>
            <param name="job"></param>
        </member>
        <member name="T:Rock.Util.JobService">
            <summary>
            Job Service class
            </summary>
            <summary>
            Job POCO Service class
            </summary>
        </member>
        <member name="M:Rock.Util.JobService.CreateNew">
            <summary>
            Creates a new model
            </summary>
        </member>
        <member name="M:Rock.Util.JobService.QueryableDTO">
            <summary>
            Query DTO objects
            </summary>
            <returns>A queryable list of DTO objects</returns>
        </member>
        <member name="M:Rock.Util.JobService.GetActiveJobs">
            <summary>
            Gets the active jobs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Util.JobService.BuildQuartzJob(Rock.Util.Job)">
            <summary>
            Builds the quartz job.
            </summary>
            <param name="job">The job.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Util.JobService.BuildQuartzTrigger(Rock.Util.Job)">
            <summary>
            Builds the quartz trigger.
            </summary>
            <param name="job">The job.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Web.Cache.Attribute">
            <summary>
            Information about an attribute that is required by the rendering engine.
            This information will be cached by Rock. 
            
            NOTE: Because this attribute object is cached and shared by all entities 
            using the attribute, a particlar instance's values are not included as a 
            property of this attribute object.
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.Attribute.#ctor">
            <summary>
            Use Static Read() method to instantiate a new Attribute object
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.Attribute.CreateControl(System.String,System.Boolean)">
            <summary>
            Creates a <see cref="T:System.Web.UI.Control"/> based on the attribute's field type.
            </summary>
            <param name="value">The value.</param>
            <param name="setValue">if set to <c>true</c> set the control's value</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.Attribute.Read(Rock.Core.Attribute)">
            <summary>
            Adds Attribute model to cache, and returns cached object
            </summary>
            <param name="attributeModel">The attributeModel to cache</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.Attribute.Read(Rock.Core.Attribute,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Adds Attribute model to cache, and returns cached object.  
            </summary>
            <param name="attributeModel">The attribute model.</param>
            <param name="qualifiers">The qualifiers.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.Attribute.Read(System.Int32)">
            <summary>
            Returns Attribute object from cache.  If attribute does not already exist in cache, it
            will be read and added to cache
            </summary>
            <param name="id">The id of the Attribute to read</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.Attribute.CopyModel(Rock.Core.Attribute)">
            <summary>
            Copies the properties of a <see cref="T:Rock.Core.Attribute"/> object to a <see cref="T:Rock.Web.Cache.Attribute"/> object/&gt;
            </summary>
            <param name="attributeModel">The attribute model.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.Attribute.Flush(System.Int32)">
            <summary>
            Removes attribute from cache
            </summary>
            <param name="id">The id of the attribute to remove from cache</param>
        </member>
        <member name="P:Rock.Web.Cache.Attribute.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Attribute.Key">
            <summary>
            Gets the key.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Attribute.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Attribute.Category">
            <summary>
            Gets the category.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Attribute.IsMultiValue">
            <summary>
            Gets if attribute supports multiple values
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Attribute.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Attribute.IsGridColumn">
            <summary>
            Gets a value indicating if this attribute should be displayed in a column when this attribute's parent object is
            listed in a grid.
            </summary>
            <value>
              <c>true</c> if it should be added as a column; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.Attribute.DefaultValue">
            <summary>
            Gets the default value for the attribute
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Attribute.QualifierValues">
            <summary>
            Gets the qualifier values if any have been defined for the attribute
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Attribute.FieldType">
            <summary>
            Gets the type of the field.
            </summary>
            <value>
            The type of the field.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.Attribute.IsRequired">
            <summary>
            Gets a value indicating whether this <see cref="T:Rock.Web.Cache.Attribute"/> is required.
            </summary>
            <value>
              <c>true</c> if required; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Rock.Web.Cache.Block">
            <summary>
            Information about a block that is required by the rendering engine.
            This information will be cached by the engine
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.Block.#ctor">
            <summary>
            Use Static Read() method to instantiate a new Block object
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.Block.SaveAttributeValues(System.Nullable{System.Int32})">
            <summary>
            Saves the attribute values.
            </summary>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Web.Cache.Block.Read(System.Int32)">
            <summary>
            Returns Block object from cache.  If block does not already exist in cache, it
            will be read and added to cache
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.Block.Flush(System.Int32)">
            <summary>
            Removes block from cache
            </summary>
            <param name="id"></param>
        </member>
        <member name="P:Rock.Web.Cache.Block.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Block.Path">
            <summary>
            Gets the path to the block control
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Block.Name">
            <summary>
            Gets the name of block
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Block.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Block.IsInstancePropertiesVerified">
            <summary>
            Gets a value indicating whether the <see cref="T:Rock.Attribute.PropertyAttribute"/> attributes have been 
            verified for the block.  If not, Rock will create and/or update the attributes associated with the block.
            </summary>
            <value>
            	<c>true</c> if attributes have already been verified; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.Block.Attributes">
            <summary>
            List of attributes associated with the block.  This object will not include values.
            To get values associated with the current block instance, use the AttributeValues
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Block.AttributeValues">
            <summary>
            Gets the attribute values.
            </summary>
        </member>
        <member name="T:Rock.Web.Cache.BlockInstance">
            <summary>
            Information about a blockInstance that is required by the rendering engine.
            This information will be cached by the engine
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.BlockInstance.#ctor">
            <summary>
            Use Static Read() method to instantiate a new BlockInstance object
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.BlockInstance.SaveAttributeValues(System.Nullable{System.Int32})">
            <summary>
            Saves the attribute values.
            </summary>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Web.Cache.BlockInstance.ReloadAttributeValues">
            <summary>
            Reloads the attribute values.
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.BlockInstance.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Rock.Web.Cache.BlockInstance.Read(Rock.CMS.BlockInstance)">
            <summary>
            Adds BlockInstance model to cache, and returns cached object
            </summary>
            <param name="blockInstanceModel"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.BlockInstance.Read(System.Int32)">
            <summary>
            Returns BlockInstance object from cache.  If blockInstance does not already exist in cache, it
            will be read and added to cache
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.BlockInstance.Flush(System.Int32)">
            <summary>
            Removes blockInstance from cache
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Rock.Web.Cache.BlockInstance.IsAuthorized(System.String,Rock.CRM.Person)">
            <summary>
            Returns <c>true</c> if the user is authorized to perform the selected action on this object.
            </summary>
            <param name="action">The action.</param>
            <param name="person">The person.</param>
            <returns>
              <c>true</c> if the specified action is authorized; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Rock.Web.Cache.BlockInstance.IsAllowedByDefault(System.String)">
            <summary>
            If a user or role is not specifically allowed or denied to perform the selected action,
            returna <c>true</c> if they will be allowed anyway or <c>false</c> if not.
            </summary>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="P:Rock.Web.Cache.BlockInstance.Id">
            <summary>
            The Id
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.BlockInstance.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.BlockInstance.Zone">
            <summary>
            Gets the zone.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.BlockInstance.BlockInstanceLocation">
            <summary>
            Gets the location of the block instance (Layout or Page)
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.BlockInstance.Order">
            <summary>
            Gets the order.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.BlockInstance.OutputCacheDuration">
            <summary>
            Gets the duration of the output cache. If value is 0, the output will not be cached
            </summary>
            <value>
            The duration of the output cache.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.BlockInstance.AttributeValues">
            <summary>
            Dictionary of all attributes and their values.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.BlockInstance.Attributes">
            <summary>
            List of attributes associated with the BlockInstance.  This object will not include values.
            To get values associated with the current page instance, use the AttributeValues
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.BlockInstance.BlockId">
            <summary>
            Gets the block id.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.BlockInstance.Block">
            <summary>
            Gets the block.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.BlockInstance.AuthEntity">
            <summary>
            The auth entity. The auth entity is a unique identifier for each type of class that implements
            the <see cref="T:Rock.Security.ISecured"/> interface.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.BlockInstance.ParentAuthority">
            <summary>
            A parent authority.  If a user is not specifically allowed or denied access to
            this object, Rock will check access to the parent authority specified by this property.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.BlockInstance.SupportedActions">
            <summary>
            The list of actions that this class supports.
            </summary>
        </member>
        <member name="T:Rock.Web.Cache.BlockInstanceLocation">
            <summary>
            The location of the block instance
            </summary>
        </member>
        <member name="F:Rock.Web.Cache.BlockInstanceLocation.Layout">
            <summary>
            Block instance is located in the layout (will be rendered for every page using the layout)
            </summary>
        </member>
        <member name="F:Rock.Web.Cache.BlockInstanceLocation.Page">
            <summary>
            Block instance is located on the page
            </summary>
        </member>
        <member name="T:Rock.Security.Role">
            <summary>
            Information about a Role that is required by the rendering engine.
            This information will be cached by the engine
            </summary>
        </member>
        <member name="M:Rock.Security.Role.#ctor">
            <summary>
            Use Static Read() method to instantiate a new Role object
            </summary>
        </member>
        <member name="M:Rock.Security.Role.IsUserInRole(System.String)">
            <summary>
            Is user in role
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Security.Role.Read(System.Int32)">
            <summary>
            Returns Role object from cache.  If role does not already exist in cache, it
            will be read and added to cache
            </summary>
            <param name="roleGuid"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Security.Role.AllRoles">
            <summary>
            Returns a list of all the possible Roles
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Security.Role.Flush(System.Int32)">
            <summary>
            Removes role from cache
            </summary>
            <param name="guid"></param>
        </member>
        <member name="P:Rock.Security.Role.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Security.Role.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Rock.Security.Role.Users">
            <summary>
            Gets the users that belong to the role
            </summary>
        </member>
        <member name="T:Rock.Web.Cache.AttributeValue">
            <summary>
            The value of an attribute
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.AttributeValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Web.Cache.AttributeValue"/> class.
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.AttributeValue.#ctor(Rock.Core.AttributeValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Web.Cache.AttributeValue"/> class.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="P:Rock.Web.Cache.AttributeValue.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.AttributeValue.Guid">
            <summary>
            Gets or sets the GUID.
            </summary>
            <value>
            The GUID.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.AttributeValue.IsSystem">
            <summary>
            Gets or sets the System.
            </summary>
            <value>
            System.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.AttributeValue.AttributeId">
            <summary>
            Gets or sets the Attribute Id.
            </summary>
            <value>
            Attribute Id.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.AttributeValue.EntityId">
            <summary>
            Gets or sets the Entity Id.
            </summary>
            <value>
            Entity Id.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.AttributeValue.Order">
            <summary>
            Gets or sets the Order.
            </summary>
            <value>
            Order.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.AttributeValue.Value">
            <summary>
            Gets or sets the Value.
            </summary>
            <value>
            Value.
            </value>
        </member>
        <member name="T:Rock.Web.Cache.DefinedType">
            <summary>
            Information about a definedType that is required by the rendering engine.
            This information will be cached by the engine
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.DefinedType.#ctor">
            <summary>
            Use Static Read() method to instantiate a new DefinedType object
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.DefinedType.Read(System.Int32)">
            <summary>
            Returns DefinedType object from cache.  If definedType does not already exist in cache, it
            will be read and added to cache
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.DefinedType.Read(Rock.Core.DefinedType)">
            <summary>
            Reads the specified defined type model.
            </summary>
            <param name="definedTypeModel">The defined type model.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.DefinedType.CopyModel(Rock.Core.DefinedType)">
            <summary>
            Copies the model.
            </summary>
            <param name="definedTypeModel">The defined type model.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.DefinedType.Flush(System.Int32)">
            <summary>
            Removes definedType from cache
            </summary>
            <param name="id"></param>
        </member>
        <member name="P:Rock.Web.Cache.DefinedType.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.DefinedType.FieldType">
            <summary>
            Gets the type of the field.
            </summary>
            <value>
            The type of the field.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.DefinedType.Order">
            <summary>
            Gets the order.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.DefinedType.Category">
            <summary>
            Gets the category.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.DefinedType.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.DefinedType.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="T:Rock.Web.Cache.DefinedValue">
            <summary>
            Information about a definedValue that is required by the rendering engine.
            This information will be cached by the engine
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.DefinedValue.#ctor">
            <summary>
            Use Static Read() method to instantiate a new DefinedValue object
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.DefinedValue.Read(System.Int32)">
            <summary>
            Returns DefinedValue object from cache.  If definedValue does not already exist in cache, it
            will be read and added to cache
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.DefinedValue.Read(Rock.Core.DefinedValue)">
            <summary>
            Reads the specified defined value model.
            </summary>
            <param name="definedValueModel">The defined value model.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.DefinedValue.CopyModel(Rock.Core.DefinedValue)">
            <summary>
            Copies the model.
            </summary>
            <param name="definedValueModel">The defined value model.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.DefinedValue.Flush(System.Int32)">
            <summary>
            Removes definedValue from cache
            </summary>
            <param name="id"></param>
        </member>
        <member name="P:Rock.Web.Cache.DefinedValue.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.DefinedValue.DefinedType">
            <summary>
            Gets the type of the field.
            </summary>
            <value>
            The type of the field.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.DefinedValue.Order">
            <summary>
            Gets the order.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.DefinedValue.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.DefinedValue.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="T:Rock.Web.Cache.MetricValue">
            <summary>
            The value of a metric
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.MetricValue.#ctor">
            <summary>
            Use Static Read() method to instantiate a new MetricValue object
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.MetricValue.Read(Rock.Core.MetricValue)">
            <summary>
            Adds MetricValue model to cache, and returns cached object
            </summary>
            <param name="metricValueModel">The metricValueModel to cache</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.MetricValue.Read(System.Int32)">
            <summary>
            Returns MetricValue object from cache.  If metricValue does not already exist in cache, it
            will be read and added to cache
            </summary>
            <param name="id">The id of the MetricValue to read</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.MetricValue.CopyModel(Rock.Core.MetricValue)">
            <summary>
            Copies the properties of a <see cref="T:Rock.Core.MetricValue"/> object to a <see cref="T:Rock.Web.Cache.MetricValue"/> object/&gt;
            </summary>
            <param name="metricValueModel">The metricValuemodel.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.MetricValue.Flush(System.Int32)">
            <summary>
            Removes metricValue from cache
            </summary>
            <param name="id">The id of the metricValue to remove from cache</param>
        </member>
        <member name="P:Rock.Web.Cache.MetricValue.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.MetricValue.MetricId">
            <summary>
            Gets the MetricId.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.MetricValue.Value">
            <summary>
            Gets or sets the Value.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.MetricValue.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.MetricValue.xValue">
            <summary>
            Gets or sets the xValue.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.MetricValue.isDateBased">
            <summary>
            Gets or sets the isDateBased flag.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.MetricValue.Label">
            <summary>
            Gets or sets the Label.
            </summary>
        </member>
        <member name="T:Rock.Web.Cache.Metric">
            <summary>
            Information about an metric that is required by the rendering engine.
            This information will be cached by Rock. 
            
            NOTE: Because this metric object is cached and shared by all entities 
            using the metric, a particlar instance's values are not included as a 
            property of this metric object.
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.Metric.#ctor">
            <summary>
            Use Static Read() method to instantiate a new Metric object
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.Metric.Read(Rock.Core.Metric)">
            <summary>
            Adds Metric model to cache, and returns cached object
            </summary>
            <param name="metricModel">The metricModel to cache</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.Metric.Read(System.Int32)">
            <summary>
            Returns Metric object from cache.  If metric does not already exist in cache, it
            will be read and added to cache
            </summary>
            <param name="id">The id of the Metric to read</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.Metric.CopyModel(Rock.Core.Metric)">
            <summary>
            Copies the properties of a <see cref="T:Rock.Core.Metric"/> object to a <see cref="T:Rock.Web.Cache.Metric"/> object/&gt;
            </summary>
            <param name="metricModel">The metric model.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.Metric.Flush(System.Int32)">
            <summary>
            Removes metric from cache
            </summary>
            <param name="id">The id of the metric to remove from cache</param>
        </member>
        <member name="P:Rock.Web.Cache.Metric.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Metric.Type">
            <summary>
            Gets or sets the Type.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Metric.Category">
            <summary>
            Gets the category.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Metric.Title">
            <summary>
            Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Metric.Subtitle">
            <summary>
            Gets or sets the Subtitle.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Metric.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Metric.MinValue">
            <summary>
            Gets or sets the MinValue.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Metric.MaxValue">
            <summary>
            Gets or sets the MaxValue.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Metric.CollectionFrequency">
            <summary>
            Gets or sets the CollectionFrequency.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Metric.LastCollected">
            <summary>
            Gets or sets the LastCollected date.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Metric.Source">
            <summary>
            Gets or sets the Source.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Metric.SourceSQL">
            <summary>
            Gets or sets the SourceSQL.
            </summary>
        </member>
        <member name="T:Rock.Web.Cache.GlobalAttributes">
            <summary>
            Global Attributes
            This information will be cached by the engine
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.GlobalAttributes.#ctor">
            <summary>
            Use Static Read() method to instantiate a new Global Attributes object
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.GlobalAttributes.AttributeValue(System.String)">
            <summary>
            Global Attribute Value for the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.GlobalAttributes.Read">
            <summary>
            Returns Global Attributes from cache.  If they are not already in cache, they
            will be read and added to cache
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.GlobalAttributes.Flush">
            <summary>
            Removes Global Attributes from cache
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.GlobalAttributes.Value(System.String)">
            <summary>
            Gets the Global Attribute values for the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:Rock.Web.Cache.GlobalAttributes.AttributeValues">
            <summary>
            Gets or sets the attribute values.
            </summary>
            <value>
            The attribute values.
            </value>
        </member>
        <member name="T:Rock.Web.Cache.FieldType">
            <summary>
            Information about a fieldType that is required by the rendering engine.
            This information will be cached by the engine
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.FieldType.#ctor">
            <summary>
            Use Static Read() method to instantiate a new FieldType object
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.FieldType.Read(System.Int32)">
            <summary>
            Returns FieldType object from cache.  If fieldType does not already exist in cache, it
            will be read and added to cache
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.FieldType.Read(Rock.Core.FieldType)">
            <summary>
            Reads the specified field type model.
            </summary>
            <param name="fieldTypeModel">The field type model.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.FieldType.CopyModel(Rock.Core.FieldType)">
            <summary>
            Copies the model.
            </summary>
            <param name="fieldTypeModel">The field type model.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.FieldType.Flush(System.Int32)">
            <summary>
            Removes fieldType from cache
            </summary>
            <param name="id"></param>
        </member>
        <member name="P:Rock.Web.Cache.FieldType.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.FieldType.Path">
            <summary>
            Gets the path.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.FieldType.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.FieldType.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.FieldType.Field">
            <summary>
            Gets the field 
            </summary>
        </member>
        <member name="T:Rock.Web.Cache.Site">
            <summary>
            Information about a site that is required by the rendering engine.
            This information will be cached by the engine
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.Site.#ctor">
            <summary>
            Use Static Read() method to instantiate a new Site object
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.Site.SaveAttributeValues(System.Nullable{System.Int32})">
            <summary>
            Saves the attribute values.
            </summary>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Web.Cache.Site.Read(System.Int32)">
            <summary>
            Returns Site object from cache.  If site does not already exist in cache, it
            will be read and added to cache
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.Site.Flush(System.Int32)">
            <summary>
            Removes site from cache
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Rock.Web.Cache.Site.IsAuthorized(System.String,Rock.CRM.Person)">
            <summary>
            Return <c>true</c> if the user is authorized to perform the selected action on this object.
            </summary>
            <param name="action">The action.</param>
            <param name="person">The person.</param>
            <returns>
              <c>true</c> if the specified action is authorized; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Rock.Web.Cache.Site.IsAllowedByDefault(System.String)">
            <summary>
            If a user or role is not specifically allowed or denied to perform the selected action,
            return <c>true</c> if they should be allowed anyway or <c>false</c> if not.
            </summary>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="P:Rock.Web.Cache.Site.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Site.OrgId">
            <summary>
            Gets the org id.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Site.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Site.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Site.Theme">
            <summary>
            Gets the theme.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Site.FaviconUrl">
            <summary>
            Gets the favicon URL.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Site.AppleTouchUrl">
            <summary>
            Gets the apple touch URL.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Site.AttributeValues">
            <summary>
            Gets the attribute values.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Site.FacebookAppId">
            <summary>
            Gets the facebook app id.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Site.FacebookAppSecret">
            <summary>
            Gets the facebook app secret.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Site.Attributes">
            <summary>
            Gets a list of attributes associated with the site.  This object will not include values.
            To get values associated with the current site instance, use the AttributeValues
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Site.DefaultPageId">
            <summary>
            Gets the default page id.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Site.DefaultPage">
            <summary>
            Gets the default page.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Site.AuthEntity">
            <summary>
            Gets or sets the auth entity.
            </summary>
            <value>
            The auth entity.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.Site.ParentAuthority">
            <summary>
            A parent authority.  If a user is not specifically allowed or denied access to
            this object, Rock will check access to the parent authority specified by this property.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Site.SupportedActions">
            <summary>
            A list of actions that this class supports.
            </summary>
        </member>
        <member name="T:Rock.Web.Cache.Page">
            <summary>
            Information about a page that is required by the rendering engine.
            This information will be cached by the engine
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.Page.#ctor">
            <summary>
            Use Static Read() method to instantiate a new Page object
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.Page.SaveAttributeValues(System.Nullable{System.Int32})">
            <summary>
            Saves the attribute values for the page
            </summary>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Web.Cache.Page.DisplayInNav(Rock.CRM.Person)">
            <summary>
            <c>true</c> or <c>false</c> value of whether the page can be displayed in a navigation menu 
            based on the <see cref="P:Rock.Web.Cache.Page.DisplayInNavWhen"/> property value and the security of the currently logged in user
            </summary>
            <param name="user">The current user.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.Page.GetCurrentContext(System.String)">
            <summary>
            Gets the current context object for a given entity type.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.Page.FlushBlockInstances">
            <summary>
            Flushes the cached block instances.
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.Page.FlushChildPages">
            <summary>
            Flushes the cached child pages.
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.Page.SaveSharedItem(System.String,System.Object)">
            <summary>
            Used to save an item to the current HTTPRequests items collection.  This is useful if multiple blocks
            on the same page will need access to the same object.  The first block can read the object and save
            it using this method for the other blocks to reference
            </summary>
            <param name="key"></param>
            <param name="item"></param>
        </member>
        <member name="M:Rock.Web.Cache.Page.GetSharedItem(System.String)">
            <summary>
            Retrieves an item from the current HTTPRequest items collection.  This is useful to retrieve an object
            that was saved by a previous block on the same page.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.Page.AddCSSLink(System.Web.UI.Page,System.String)">
            <summary>
            Adds a new CSS link that will be added to the page header prior to the page being rendered
            </summary>
            <param name="page">Current System.Web.UI.Page</param>
            <param name="href">Path to css file.  Should be relative to layout template.  Will be resolved at runtime</param>
        </member>
        <member name="M:Rock.Web.Cache.Page.AddCSSLink(System.Web.UI.Page,System.String,System.String)">
            <summary>
            Adds a new CSS link that will be added to the page header prior to the page being rendered
            </summary>
            <param name="page">The page.</param>
            <param name="href">The href.</param>
            <param name="mediaType">MediaType to use in the css link.</param>
        </member>
        <member name="M:Rock.Web.Cache.Page.AddMetaTag(System.Web.UI.Page,System.Web.UI.HtmlControls.HtmlMeta)">
            <summary>
            Adds a meta tag to the page header priore to the page being rendered
            </summary>
            <param name="page">The page.</param>
            <param name="htmlMeta">The HTML meta tag.</param>
        </member>
        <member name="M:Rock.Web.Cache.Page.AddHtmlLink(System.Web.UI.Page,System.Web.UI.HtmlControls.HtmlLink)">
            <summary>
            Adds a new Html link that will be added to the page header prior to the page being rendered
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.Page.AddScriptLink(System.Web.UI.Page,System.String)">
            <summary>
            Adds a new script tag to the page header prior to the page being rendered
            </summary>
            <param name="page">Current System.Web.UI.Page</param>
            <param name="path">Path to script file.  Should be relative to layout template.  Will be resolved at runtime</param>
        </member>
        <member name="M:Rock.Web.Cache.Page.BuildUrl(System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Builds a URL from a page and parameters with support for routes
            </summary>
            <param name="pageId">Page to link to</param>
            <param name="parms">Dictionary of parameters</param>
        </member>
        <member name="M:Rock.Web.Cache.Page.BuildUrl(System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Specialized.NameValueCollection)">
            <summary>
            Builds a URL from a page and parameters with support for routes
            </summary>
            <param name="pageId">Page to link to</param>
            <param name="parms">Dictionary of parameters</param>
            <param name="queryString">Querystring to include paramters from</param>
        </member>
        <member name="M:Rock.Web.Cache.Page.BuildUrl(Rock.Web.UI.PageReference,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Builds a URL from a page and parameters with support for routes
            </summary>
            <param name="pageRef">PageReference to use for the link</param>
            <param name="parms">Dictionary of parameters</param>
        </member>
        <member name="M:Rock.Web.Cache.Page.BuildUrl(Rock.Web.UI.PageReference,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Specialized.NameValueCollection)">
            <summary>
            Builds a URL from a page and parameters with support for routes
            </summary>
            <param name="pageRef">PageReference to use for the link</param>
            <param name="parms">Dictionary of parameters</param>
            <param name="queryString">Querystring to include paramters from</param>
        </member>
        <member name="M:Rock.Web.Cache.Page.FormatPath(System.String,System.String)">
            <summary>
            Formats the page url based on the selected theme and layout
            </summary>
            <param name="theme"></param>
            <param name="layout"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.Page.CacheKey(System.Int32)">
            <summary>
            Gets the cache key for the selected page id.
            </summary>
            <param name="pageId">The page id.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.Page.Read(Rock.CMS.Page)">
            <summary>
            Adds Page model to cache, and returns cached object
            </summary>
            <param name="pageModel"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.Page.Read(System.Int32)">
            <summary>
            Returns Page object from cache.  If page does not already exist in cache, it
            will be read and added to cache
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.Page.Flush(System.Int32)">
            <summary>
            Removes page from cache
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Rock.Web.Cache.Page.FlushLayout(System.String)">
            <summary>
            Flushes all the pages that use a specific layout.
            </summary>
        </member>
        <member name="M:Rock.Web.Cache.Page.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Rock.Web.Cache.Page.IsAuthorized(System.String,Rock.CRM.Person)">
            <summary>
            Return <c>true</c> if the user is authorized to perform the selected action on this object.
            </summary>
            <param name="action">The action.</param>
            <param name="person">The person.</param>
            <returns>
              <c>true</c> if the specified action is authorized; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Rock.Web.Cache.Page.IsAllowedByDefault(System.String)">
            <summary>
            If a user or role is not specifically allowed or denied to perform the selected action,
            return <c>true</c> if they should be allowed anyway or <c>false</c> if not.
            </summary>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.Page.MenuXml(Rock.CRM.Person)">
            <summary>
            Returns XML for a page menu.  XML will be 1 level deep
            </summary>
            <param name="person">The person.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.Cache.Page.MenuXml(System.Int32,Rock.CRM.Person)">
            <summary>
            Returns XML for a page menu.
            </summary>
            <param name="levelsDeep">The page levels deep.</param>
            <param name="person">The person.</param>
            <returns></returns>
        </member>
        <member name="P:Rock.Web.Cache.Page.Id">
            <summary>
            Gets the id.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Page.Layout">
            <summary>
            Gets the layout.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Page.Order">
            <summary>
            Gets the order.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Page.OutputCacheDuration">
            <summary>
            Gets the duration of the output cache.
            </summary>
            <value>
            The duration of the output cache.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.Page.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Page.Title">
            <summary>
            Gets the title.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Page.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Page.IconUrl">
            <summary>
            Gets the icon URL.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Page.IncludeAdminFooter">
            <summary>
            Gets a value indicating whether the page administration footer should be displayed on the page
            </summary>
            <value>
              <c>true</c> if the footer should be displayed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.Page.MenuDisplayDescription">
            <summary>
            Gets a value indicating whether to display the page description in the page navigation menu.
            </summary>
            <value>
            	<c>true</c> if description should be displayed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.Page.MenuDisplayIcon">
            <summary>
            Gets a value indicating whether page icon should be included in the page navigation menu.
            </summary>
            <value>
              <c>true</c> if icon should be included; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.Page.MenuDisplayChildPages">
            <summary>
            Gets a value indicating whether the pages child pages should be displayed in the page navigation menu.
            </summary>
            <value>
            	<c>true</c> if child pages should be included; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.Page.DisplayInNavWhen">
            <summary>
            Gets a <see cref="T:Rock.CMS.DisplayInNavWhen"/> value indicating when or if the page should be included in a page navigation menu
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Page.RequiresEncryption">
            <summary>
            Gets a value indicating whether the page requires SSL encryption.
            </summary>
            <value>
              <c>true</c> if requires encryption; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.Page.EnableViewstate">
            <summary>
            Gets a value indicating whether the page should use viewstate
            </summary>
            <value>
              <c>true</c> if viewstate should be enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.Page.RouteId">
            <summary>
            Gets or sets the route id.
            </summary>
            <value>
            The route id.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.Page.PageReference">
            <summary>
            Gets a <see cref="T:Rock.Web.UI.PageReference"/> for the current page
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Page.Url">
            <summary>
            Gets the URL to the current page using the page/{id} route.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Page.AttributeValues">
            <summary>
            Dictionary of all attributes and their value.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Page.Attributes">
            <summary>
            List of attributes associated with the page.  This object will not include values.
            To get values associated with the current page instance, use the AttributeValues
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Page.LayoutPath">
            <summary>
            Gets or sets the layout path for the page
            </summary>
            <value>
            The layout path.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.Page.ParentPage">
            <summary>
            Gets the parent <see cref="T:Rock.Web.Cache.Page"/> object.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Page.Site">
            <summary>
            Gets the <see cref="P:Rock.Web.Cache.Page.Site"/> object for the page.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Page.Pages">
            <summary>
            Gets a List of child <see cref="T:Rock.Web.Cache.Page"/> objects.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Page.BlockInstances">
            <summary>
            Gets a List of all the <see cref="T:Rock.Web.Cache.BlockInstance"/> objects configured for the page and the page's layout.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Page.PageContexts">
            <summary>
            Gets or sets the page contexts that have been defined for the page
            </summary>
            <value>
            The page contexts.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.Page.Context">
            <summary>
            Gets a dictionary of the current context items (models).
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Page.AuthEntity">
            <summary>
            Gets or sets the auth entity.
            </summary>
            <value>
            The auth entity.
            </value>
        </member>
        <member name="P:Rock.Web.Cache.Page.ParentAuthority">
            <summary>
            A parent authority.  If a user is not specifically allowed or denied access to
            this object, Rock will check access to the parent authority specified by this property.
            </summary>
        </member>
        <member name="P:Rock.Web.Cache.Page.SupportedActions">
            <summary>
            A list of actions that this class supports.
            </summary>
        </member>
        <member name="T:Rock.Web.UI.Controls.EditValueField">
            <summary>
            <see cref="T:Rock.Web.UI.Controls.Grid"/> Column for editing the value of a row in a grid
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.EditValueField.Initialize(System.Boolean,System.Web.UI.Control)">
            <summary>
            Performs basic instance initialization for a data control field.
            </summary>
            <param name="sortingEnabled">A value that indicates whether the control supports the sorting of columns of data.</param>
            <param name="control">The data control that owns the <see cref="T:System.Web.UI.WebControls.DataControlField"/>.</param>
            <returns>
            Always returns false.
            </returns>
        </member>
        <member name="M:Rock.Web.UI.Controls.EditValueField.editValueFieldTemplate_LinkButtonClick(System.Object,Rock.Web.UI.Controls.RowEventArgs)">
            <summary>
            Handles the LinkButtonClick event of the editValueFieldTemplate control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Rock.Web.UI.Controls.RowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.EditValueField.OnClick(Rock.Web.UI.Controls.RowEventArgs)">
            <summary>
            Raises the <see cref="E:Click"/> event.
            </summary>
            <param name="e">The <see cref="T:Rock.Web.UI.Controls.RowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Rock.Web.UI.Controls.EditValueField.Click">
            <summary>
            Occurs when [click].
            </summary>
        </member>
        <member name="T:Rock.Web.UI.Controls.EditValueFieldTemplate">
            <summary>
            Template used by the <see cref="T:Rock.Web.UI.Controls.EditValueField"/> control
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.EditValueFieldTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            When implemented by a class, defines the <see cref="T:System.Web.UI.Control"/> object that child controls and templates belong to. These child controls are in turn defined within an inline template.
            </summary>
            <param name="container">The <see cref="T:System.Web.UI.Control"/> object to contain the instances of controls from the inline template.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.EditValueFieldTemplate.lbEditValue_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the lbEdit control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Rock.Web.UI.Controls.EditValueFieldTemplate.LinkButtonClick">
            <summary>
            Occurs when [link button click].
            </summary>
        </member>
        <member name="T:Rock.Web.UI.Controls.LabeledText">
            <summary>
            A <see cref="T:System.Web.UI.WebControls.Literal"/> control with an associated label.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.LabeledText.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.LabeledText.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders a label and <see cref="T:System.Web.UI.WebControls.TextBox"/> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter"/> object.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> that receives the rendered output.</param>
        </member>
        <member name="P:Rock.Web.UI.Controls.LabeledText.LabelText">
            <summary>
            Gets or sets the label text.
            </summary>
            <value>
            The label text.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.LabeledText.Text">
            <summary>
            Gets or sets the label text.
            </summary>
            <value>
            The label text.
            </value>
        </member>
        <member name="T:Rock.Web.UI.Controls.ModalIFrameDialog">
            <summary>
            A Modal Popup Dialog Window
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.ModalIFrameDialog.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Init"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.ModalIFrameDialog.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.ModalIFrameDialog.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:PreRender"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Rock.Web.UI.Controls.ModalDialog">
            <summary>
            A Modal Popup Dialog Window
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.ModalDialog.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Init"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.ModalDialog.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.ModalDialog.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:PreRender"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.ModalDialog.SaveLink_ServerClick(System.Object,System.EventArgs)">
            <summary>
            Handles the ServerClick event of the SaveLink control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Rock.Web.UI.Controls.ModalDialog.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.ModalDialog.IsDefaultSaveDisabled">
            <summary>
            Gets or sets a value indicating whether the default save behavior should be enabled.
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Controls.ModalDialog.Content">
            <summary>
            The content of the popup.
            </summary>
        </member>
        <member name="E:Rock.Web.UI.Controls.ModalDialog.SaveClick">
            <summary>
            Occurs when the save button is clicked.
            </summary>
        </member>
        <member name="T:Rock.Web.UI.Controls.ImageSelector">
            <summary>
            A <see cref="T:System.Web.UI.WebControls.TextBox"/> control with an associated label.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.ImageSelector.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.ImageSelector.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders a label and <see cref="T:System.Web.UI.WebControls.TextBox"/> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter"/> object.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> that receives the rendered output.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.ImageSelector.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Controls.ImageSelector.ImageId">
            <summary>
            Gets or sets a value indicating whether [display required indicator].
            </summary>
            <value>
            	<c>true</c> if [display required indicator]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Rock.Web.UI.Controls.LabeledTextBox">
            <summary>
            A <see cref="T:System.Web.UI.WebControls.TextBox"/> control with an associated label.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.LabeledTextBox.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.LabeledTextBox.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders a label and <see cref="T:System.Web.UI.WebControls.TextBox"/> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter"/> object.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> that receives the rendered output.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.LabeledTextBox.RenderBase(System.Web.UI.HtmlTextWriter)">
            <summary>
            Method for inheriting classes to use to render just the base control
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="P:Rock.Web.UI.Controls.LabeledTextBox.Required">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Rock.Web.UI.Controls.LabeledTextBox"/> is required.
            </summary>
            <value>
              <c>true</c> if required; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.LabeledTextBox.Tip">
            <summary>
            Gets or sets the help tip.
            </summary>
            <value>
            The help tip.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.LabeledTextBox.Help">
            <summary>
            Gets or sets the help block.
            </summary>
            <value>
            The help block.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.LabeledTextBox.LabelText">
            <summary>
            Gets or sets the label text.
            </summary>
            <value>
            The label text.
            </value>
        </member>
        <member name="T:Rock.Web.UI.Controls.PageTitle">
            <summary>
            Renders the title of a page
            </summary>
        </member>
        <member name="T:Rock.Web.UI.Controls.LabeledRadioButtonList">
            <summary>
            A <see cref="T:System.Web.UI.WebControls.TextBox"/> control with an associated label.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.LabeledRadioButtonList.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.LabeledRadioButtonList.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders a label and <see cref="T:System.Web.UI.WebControls.TextBox"/> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter"/> object.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> that receives the rendered output.</param>
        </member>
        <member name="P:Rock.Web.UI.Controls.LabeledRadioButtonList.Tip">
            <summary>
            Gets or sets the help tip.
            </summary>
            <value>
            The help tip.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.LabeledRadioButtonList.Help">
            <summary>
            Gets or sets the help block.
            </summary>
            <value>
            The help block.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.LabeledRadioButtonList.LabelText">
            <summary>
            Gets or sets the label text.
            </summary>
            <value>
            The label text.
            </value>
        </member>
        <member name="T:Rock.Web.UI.Controls.FieldTypeList">
            <summary>
            A composite control that renders a label, dropdownlist, and datavalidation control for a specific field of a data model
            </summary>
        </member>
        <member name="T:Rock.Web.UI.Controls.DataDropDownList">
            <summary>
            A composite control that renders a label, dropdownlist, and datavalidation control for a specific field of a data model
            </summary>
        </member>
        <member name="T:Rock.Web.UI.Controls.LabeledDropDownList">
            <summary>
            A <see cref="T:System.Web.UI.WebControls.DropDownList"/> control with an associated label.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.LabeledDropDownList.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.LabeledDropDownList.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders a label and <see cref="T:System.Web.UI.WebControls.DropDownList"/> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter"/> object.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> that receives the rendered output.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.LabeledDropDownList.RenderBase(System.Web.UI.HtmlTextWriter)">
            <summary>
            Method for inheriting classes to use to render just the base control
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.LabeledDropDownList.CreateControlCollection">
            <summary>
            Creates a collection to store child controls.
            </summary>
            <returns>
            Always returns an <see cref="T:System.Web.UI.EmptyControlCollection"/>.
            </returns>
        </member>
        <member name="P:Rock.Web.UI.Controls.LabeledDropDownList.Required">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Rock.Web.UI.Controls.LabeledTextBox"/> is required.
            </summary>
            <value>
              <c>true</c> if required; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.LabeledDropDownList.Tip">
            <summary>
            Gets or sets the help tip.
            </summary>
            <value>
            The help tip.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.LabeledDropDownList.Help">
            <summary>
            Gets or sets the help block.
            </summary>
            <value>
            The help block.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.LabeledDropDownList.LabelText">
            <summary>
            Gets or sets the label text.
            </summary>
            <value>
            The label text.
            </value>
        </member>
        <member name="M:Rock.Web.UI.Controls.DataDropDownList.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.DataDropDownList.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders a label and <see cref="T:System.Web.UI.WebControls.TextBox"/> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter"/> object.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> that receives the rendered output.</param>
        </member>
        <member name="P:Rock.Web.UI.Controls.DataDropDownList.SourceTypeName">
            <summary>
            Gets or sets the name of the assembly qualified name of the entity that is being validated
            </summary>
            <value>
            The name of the assembly qualified type name.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.DataDropDownList.PropertyName">
            <summary>
            Gets or sets the name of the entity property.
            </summary>
            <value>
            The name of the entity property.
            </value>
        </member>
        <member name="M:Rock.Web.UI.Controls.FieldTypeList.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="T:Rock.Web.UI.Controls.GridActions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.GridActions.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Writes the <see cref="T:System.Web.UI.WebControls.CompositeControl"/> content to the specified <see cref="T:System.Web.UI.HtmlTextWriter"/> object, for display on the client.
            </summary>
            <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.GridActions.RecreateChildControls">
            <summary>
            Recreates the child controls in a control derived from <see cref="T:System.Web.UI.WebControls.CompositeControl"/>.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.GridActions.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the HTML opening tag of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.GridActions.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Controls.GridActions.IsAddEnabled">
            <summary>
            Gets or sets a value indicating whether [enable add].
            </summary>
            <value>
              <c>true</c> if [enable add]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.GridActions.IsExcelExportEnabled">
            <summary>
            Gets or sets a value indicating whether [enable add].
            </summary>
            <value>
              <c>true</c> if [enable add]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.GridActions.ClientAddScript">
            <summary>
            Gets or sets the client add script.
            </summary>
            <value>
            The client add script.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.GridActions.ClientExcelExportScript">
            <summary>
            Gets or sets the client excel export script.
            </summary>
            <value>
            The client excel export script.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.GridActions.TagKey">
            <summary>
            Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag"/> value that corresponds to this Web server control. This property is used primarily by control developers.
            </summary>
            <returns>One of the <see cref="T:System.Web.UI.HtmlTextWriterTag"/> enumeration values.</returns>
        </member>
        <member name="E:Rock.Web.UI.Controls.GridActions.AddClick">
            <summary>
            Occurs when add action is clicked.
            </summary>
        </member>
        <member name="E:Rock.Web.UI.Controls.GridActions.ExcelExportClick">
            <summary>
            Occurs when add action is clicked.
            </summary>
        </member>
        <member name="T:Rock.Web.UI.Controls.LabeledCheckBox">
            <summary>
            A <see cref="T:System.Web.UI.WebControls.TextBox"/> control with an associated label.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.LabeledCheckBox.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.LabeledCheckBox.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders a label and <see cref="T:System.Web.UI.WebControls.TextBox"/> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter"/> object.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> that receives the rendered output.</param>
        </member>
        <member name="P:Rock.Web.UI.Controls.LabeledCheckBox.Tip">
            <summary>
            Gets or sets the help tip.
            </summary>
            <value>
            The help tip.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.LabeledCheckBox.Help">
            <summary>
            Gets or sets the help block.
            </summary>
            <value>
            The help block.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.LabeledCheckBox.LabelText">
            <summary>
            Gets or sets the label text.
            </summary>
            <value>
            The label text.
            </value>
        </member>
        <member name="T:Rock.Web.UI.Controls.Zone">
            <summary>
            Defines a Rock Zone on a page
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.Zone.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="P:Rock.Web.UI.Controls.Zone.Name">
            <summary>
            Gets or sets the help tip.
            </summary>
            <value>
            The help tip.
            </value>
        </member>
        <member name="T:Rock.Web.UI.Page">
            <summary>
            Page is the base abstract class that all page templates should inherit from
            </summary>
        </member>
        <member name="F:Rock.Web.UI.Page.UserName">
            <summary>
            The full name of the currently logged in user
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Page.FindRockControls(System.Web.UI.ControlCollection)">
            <summary>
            Recurses a control collection looking for any zone controls
            </summary>
            <param name="controls">The controls.</param>
        </member>
        <member name="M:Rock.Web.UI.Page.FindZone(System.String)">
            <summary>
            Find the <see cref="T:Rock.Web.UI.Controls.Zone"/> for the specified zone name.  Looks in the
            <see cref="P:Rock.Web.UI.Page.Zones"/> property to see if it has been defined.  If an existing zone 
            <see cref="T:Rock.Web.UI.Controls.Zone"/> cannot be found, the <see cref="T:System.Web.UI.HtmlControls.HtmlForm"/> control
            is returned
            </summary>
            <param name="zoneName">Name of the zone.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.UI.Page.InitializeCulture">
            <summary>
            Initializes the page's culture to use the culture specified by the browser ("auto")
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Page.OnInit(System.EventArgs)">
            <summary>
            Loads all of the configured blocks for the current page into the control tree
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Rock.Web.UI.Page.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:Rock.Web.UI.Page.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:Rock.Web.UI.Page.SetTitle(System.String)">
            <summary>
            Sets the page's title.
            </summary>
            <param name="title">The title.</param>
        </member>
        <member name="M:Rock.Web.UI.Page.AttributeValue(System.String)">
            <summary>
            Returns the current page's value(s) for the selected attribute
            If the attribute doesn't exist an empty string is returned.  If there
            is more than one value for the attribute, the values are returned delimited
            by a bar character (|).
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.UI.Page.PageParameter(System.String)">
            <summary>
            Checks the page's RouteData values and then the query string for a
            parameter matching the specified name, and if found returns the string
            value
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.UI.Page.AddCSSLink(System.Web.UI.Page,System.String)">
            <summary>
            Adds a new CSS link that will be added to the page header prior to the page being rendered
            </summary>
            <param name="page">Current <see cref="T:System.Web.UI.Page"/></param>
            <param name="href">Path to css file.  Should be relative to layout template.  Will be resolved at runtime</param>
        </member>
        <member name="M:Rock.Web.UI.Page.AddCSSLink(System.Web.UI.Page,System.String,System.String)">
            <summary>
            Adds the CSS link.
            </summary>
            <param name="page">Current <see cref="T:System.Web.UI.Page"/></param>
            <param name="href">Path to css file.  Should be relative to layout template.  Will be resolved at runtime</param>
            <param name="mediaType">Type of the media to use for the css link.</param>
        </member>
        <member name="M:Rock.Web.UI.Page.AddMetaTag(System.Web.UI.Page,System.Web.UI.HtmlControls.HtmlMeta)">
            <summary>
            Adds a meta tag.
            </summary>
            <param name="page">The page.</param>
            <param name="htmlMeta">The HTML meta tag.</param>
        </member>
        <member name="M:Rock.Web.UI.Page.AddHtmlLink(System.Web.UI.Page,System.Web.UI.HtmlControls.HtmlLink)">
            <summary>
            Adds a new Html link that will be added to the page header prior to the page being rendered
            </summary>
            <param name="page">Current <see cref="T:System.Web.UI.Page"/></param>
            <param name="htmlLink">A <see cref="T:System.Web.UI.HtmlControls.HtmlLink"/> control</param>
        </member>
        <member name="M:Rock.Web.UI.Page.AddScriptLink(System.Web.UI.Page,System.String)">
            <summary>
            Adds a new script tag to the page header prior to the page being rendered
            </summary>
            <param name="page">Current <see cref="T:System.Web.UI.Page"/></param>
            <param name="path">Path to script file.  Should be relative to layout template.  Will be resolved at runtime</param>
        </member>
        <member name="M:Rock.Web.UI.Page.BuildUrl(System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Builds a URL from a page and parameters with support for routes
            </summary>
            <param name="pageId">Page to link to</param>
            <param name="parms">Dictionary of parameters</param>
        </member>
        <member name="M:Rock.Web.UI.Page.BuildUrl(System.Int32,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Specialized.NameValueCollection)">
            <summary>
            Builds a URL from a page and parameters with support for routes
            </summary>
            <param name="pageId">Page to link to</param>
            <param name="parms">Dictionary of parameters</param>
            <param name="queryString">Querystring to include paramters from</param>
        </member>
        <member name="M:Rock.Web.UI.Page.BuildUrl(Rock.Web.UI.PageReference,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Builds a URL from a page and parameters with support for routes
            </summary>
            <param name="pageRef">PageReference to use for the link</param>
            <param name="parms">Dictionary of parameters</param>
        </member>
        <member name="M:Rock.Web.UI.Page.BuildUrl(Rock.Web.UI.PageReference,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Specialized.NameValueCollection)">
            <summary>
            Builds a URL from a page and parameters with support for routes
            </summary>
            <param name="pageRef">PageReference to use for the link</param>
            <param name="parms">Dictionary of parameters</param>
            <param name="queryString">Querystring to include paramters from</param>
        </member>
        <member name="P:Rock.Web.UI.Page.PageInstance">
            <summary>
            The current Rock page instance being requested.  This value is set 
            by the RockRouteHandler immediately after instantiating the page
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Page.PageTitles">
            <summary>
            The Page Title controls on the page.
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Page.Zones">
            <summary>
            The content areas on a layout page that blocks can be added to 
            </summary>
            <remarks>
            The Dictionary's key is the zonekey and the KeyValuePair is a combination 
            of the friendly zone name and the zone control
            </remarks>
        </member>
        <member name="P:Rock.Web.UI.Page.CurrentUser">
            <summary>
            The currently logged in user
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Page.CurrentPerson">
            <summary>
            Returns the current person.  This is either the currently logged in user, or if the user
            has not logged in, it may also be an impersonated person determined from using the encrypted
            person key
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Page.CurrentPersonId">
            <summary>
            The Person ID of the currently logged in user.  Returns null if there is not a user logged in
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Page.AppPath">
            <summary>
            Gets the root url path
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Page.ThemePath">
            <summary>
            Gets the full url path to the current theme folder
            </summary>
        </member>
        <member name="T:Rock.Web.UI.BlockInstanceAttributesUpdatedEventArgs">
            <summary>
            Event Argument used when block instance properties are updated
            </summary>
        </member>
        <member name="T:Rock.Web.UI.JsonResult">
            <summary>
            JSON Object used for client/server communication
            </summary>
        </member>
        <member name="M:Rock.Web.UI.JsonResult.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Web.UI.JsonResult"/> class.
            </summary>
            <param name="action">The action.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Rock.Web.UI.JsonResult.Serialize">
            <summary>
            Serializes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Rock.Web.UI.JsonResult.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>
            The action.
            </value>
        </member>
        <member name="P:Rock.Web.UI.JsonResult.Result">
            <summary>
            Gets or sets the result.
            </summary>
            <value>
            The result.
            </value>
        </member>
        <member name="T:Rock.Web.UI.Block">
            <summary>
            Block is the base abstract class that all Blocks should inherit from
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Block.AddCacheItem(System.Object)">
            <summary>
            Adds an object to the default MemoryCache.
            </summary>
            <param name="value">Object to cache</param>
        </member>
        <member name="M:Rock.Web.UI.Block.AddCacheItem(System.String,System.Object)">
            <summary>
            Adds an object to the default MemoryCache.
            </summary>
            <param name="key">Key to differentiate items from same block instance</param>
            <param name="value">Object to cache</param>
        </member>
        <member name="M:Rock.Web.UI.Block.AddCacheItem(System.String,System.Object,System.Int32)">
            <summary>
            Adds an object to the default MemoryCache.
            </summary>
            <param name="key">Key to differentiate items from same block instance</param>
            <param name="value">Object to cache</param>
            <param name="seconds">The Number of seconds to cache object for</param>
        </member>
        <member name="M:Rock.Web.UI.Block.AddCacheItem(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy)">
            <summary>
            Adds an object to the default MemoryCache.
            </summary>
            <param name="key">Key to differentiate items from same block instance</param>
            <param name="value">Object to cache</param>
            <param name="cacheItemPolicy">Optional CacheItemPolicy, defaults to null</param>
        </member>
        <member name="M:Rock.Web.UI.Block.GetCacheItem(System.String)">
            <summary>
            Retrieve an object from the cache
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.UI.Block.FlushCacheItem(System.String)">
            <summary>
            Flush an object from the cache
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Rock.Web.UI.Block.AddAttributeUpdateTrigger(System.Web.UI.UpdatePanel)">
            <summary>
            Adds an update trigger for when the block instance properties are updated.
            </summary>
            <param name="updatePanel">The update panel.</param>
        </member>
        <member name="M:Rock.Web.UI.Block.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            When a control renders it's content to the page, this method will also check to see if 
            the block instance of this control has been configured for output caching, and if so, 
            the contents will also be rendered to a string variable that will gets cached in the 
            default MemoryCache for use next time by the Rock.Web.UI.Page.OnInit() method when rendering the 
            control content.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Rock.Web.UI.Block.AttributeValue(System.String)">
            <summary>
            Returns the current blockinstance value for the selected attribute
            If the attribute doesn't exist a null value is returned  
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.UI.Block.IsUserAuthorized(System.String)">
            <summary>
            Evaluates if the user is authorized to perform the requested action 
            </summary>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.UI.Block.PageParameter(System.String)">
            <summary>
            Checks the page's RouteData values and then the query string for a
            parameter matching the specified name, and if found returns the string
            value
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.UI.Block.GetConfigurationControls(System.Boolean,System.Boolean)">
            <summary>
            Adds icons to the configuration area of a block instance.  Can be overridden to
            add additionsl icons
            </summary>
            <param name="canConfig"></param>
            <param name="canEdit"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.UI.Block.trigger_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the trigger control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Web.UI.Block.CreateAttributes">
            <summary>
            Creates and or updates any attributes defined for the block
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Block.CmsBlock_BlockInstanceAttributesUpdated(System.Object,Rock.Web.UI.BlockInstanceAttributesUpdatedEventArgs)">
            <summary>
            Handles the BlockInstanceAttributesUpdated event of the CmsBlock control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Rock.Web.UI.BlockInstanceAttributesUpdatedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Rock.Web.UI.Block.AttributesUpdated">
            <summary>
            Occurs when the block instance properties are updated.
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Block.PageInstance">
            <summary>
            The current page instance.  This value is read and cached by the RockRouteHandler
            and set by the layout's base class (Rock.Web.UI.Page) when loading the block instance
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Block.BlockInstance">
            <summary>
            The current block instance.  This value is read and cached by the layout's 
            base class (Rock.Web.UI.Page) when loading the block instance
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Block.CurrentPersonId">
            <summary>
            The personID of the currently logged in user.  If user is not logged in, returns null
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Block.CurrentUser">
            <summary>
            Returns the currently logged in user.  If user is not logged in, returns null
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Block.CurrentPerson">
            <summary>
            Returns the currently logged in person. If user is not logged in, returns null
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Block.ThemePath">
            <summary>
            Relative path to the current theme and layout folder.  Useful for setting paths to
            theme resource files
            <example>
            Client Side: <c><![CDATA[<img src='<%= ThemePath %>/Images/avatar.gif' />]]> </c>
            Server Side: <c>myImg.ImageUrl = ThemePath + "/Images/avatar.gif";</c>
            </example>
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Block.RootPath">
            <summary>
            Gets the root URL Path.
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Block.RequiredContext">
            <summary>
            Gets a list of any context entities that the block requires.
            </summary>
        </member>
        <member name="T:Rock.Attribute.PropertyAttribute">
            <summary>
            A class Attribute that can be used by any oject that inherits from <see cref="T:Rock.Attribute.IHasAttributes"/> to specify what attributes it needs.  The 
            Framework provides methods in the <see cref="T:Rock.Attribute.Helper"/> class to create, read, and update the attributes
            </summary>
            <remarks>
            If using a custom <see cref="T:Rock.Field.IFieldType"/> make sure that the fieldtype has been added to Rock.
            </remarks>
        </member>
        <member name="M:Rock.Attribute.PropertyAttribute.#ctor(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Attribute.PropertyAttribute"/> class as a text field with no default value or description.
            The <see cref="P:Rock.Attribute.PropertyAttribute.Key"/> will be the same as the <see cref="P:Rock.Attribute.PropertyAttribute.Name"/> with spaces removed.
            </summary>
            <param name="order">The order.</param>
            <param name="name">The name.</param>
            <param name="description">The description of the attribute.</param>
            <param name="required">if set to <c>true</c> [required].</param>
            <remarks>
              <see cref="P:Rock.Attribute.PropertyAttribute.Key"/> is initialized to the Name value with spaces removed
              <see cref="P:Rock.Attribute.PropertyAttribute.Category"/> is blank
              <see cref="P:Rock.Attribute.PropertyAttribute.DefaultValue"/> is blank
              <see cref="P:Rock.Attribute.PropertyAttribute.FieldTypeAssembly"/> is initialized to <c>Rock</c>
              <see cref="P:Rock.Attribute.PropertyAttribute.FieldTypeClass"/> is initialized to <c>Rock.Field.Types.Text</c>
            </remarks>
        </member>
        <member name="M:Rock.Attribute.PropertyAttribute.#ctor(System.Int32,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Attribute.PropertyAttribute"/> class as a text field with no default value or description.
            The <see cref="P:Rock.Attribute.PropertyAttribute.Key"/> will be the same as the <see cref="P:Rock.Attribute.PropertyAttribute.Name"/> with spaces removed.
            </summary>
            <param name="order">The order.</param>
            <param name="name">The name.</param>
            <param name="category">The category.</param>
            <param name="description">The description.</param>
            <param name="required">if set to <c>true</c> [required].</param>
            <param name="defaultValue">The default value.</param>
            <remarks>
              <see cref="P:Rock.Attribute.PropertyAttribute.Key"/> is initialized to the Name value with spaces removed
              <see cref="P:Rock.Attribute.PropertyAttribute.FieldTypeAssembly"/> is initialized to <c>Rock</c>
              <see cref="P:Rock.Attribute.PropertyAttribute.FieldTypeClass"/> is initialized to <c>Rock.Field.Types.Text</c>
            </remarks>
        </member>
        <member name="M:Rock.Attribute.PropertyAttribute.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Attribute.PropertyAttribute"/> class as a text field.
            </summary>
            <param name="order">The order.</param>
            <param name="name">The name.</param>
            <param name="key">The key.</param>
            <param name="category">The category.</param>
            <param name="description">The description.</param>
            <param name="required">if set to <c>true</c> [required].</param>
            <param name="defaultValue">The default value.</param>
            <remarks>
              <see cref="P:Rock.Attribute.PropertyAttribute.FieldTypeAssembly"/> is initialized to <c>Rock</c>
              <see cref="P:Rock.Attribute.PropertyAttribute.FieldTypeClass"/> is initialized to <c>Rock.Field.Types.Text</c>
            </remarks>
        </member>
        <member name="M:Rock.Attribute.PropertyAttribute.#ctor(System.Int32,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Attribute.PropertyAttribute"/> class.
            The <see cref="P:Rock.Attribute.PropertyAttribute.Key"/> will be the same as the <see cref="P:Rock.Attribute.PropertyAttribute.Name"/> with spaces removed.
            </summary>
            <param name="order">The order.</param>
            <param name="name">The name.</param>
            <param name="category">The category.</param>
            <param name="description">The description.</param>
            <param name="defaultValue">The default value.</param>
            <param name="fieldTypeAssembly">The field type assembly.</param>
            <param name="fieldTypeClass">The field type class.</param>
            <param name="required">if set to <c>true</c> [required].</param>
            <remarks>
              <see cref="P:Rock.Attribute.PropertyAttribute.Key"/> is initialized to the Name value with spaces removed
            </remarks>
        </member>
        <member name="M:Rock.Attribute.PropertyAttribute.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Attribute.PropertyAttribute"/> class.
            </summary>
            <param name="order">The order.</param>
            <param name="name">The name.</param>
            <param name="key">The key.</param>
            <param name="category">The category.</param>
            <param name="description">The description.</param>
            <param name="defaultValue">The default value.</param>
            <param name="fieldTypeAssembly">The field type assembly.</param>
            <param name="fieldTypeClass">The field type class.</param>
            <param name="required">if set to <c>true</c> [required].</param>
        </member>
        <member name="P:Rock.Attribute.PropertyAttribute.Key">
            <summary>
            Gets or sets the attribute key.
            </summary>
            <remarks>
            The key should be unique for each <see cref="T:Rock.Attribute.PropertyAttribute"/> defined in a <see cref="T:Rock.Attribute.IHasAttributes"/> object
            </remarks>
            <value>
            The key.
            </value>
        </member>
        <member name="P:Rock.Attribute.PropertyAttribute.Name">
            <summary>
            Gets or sets the user-friendly name of the attribute
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Rock.Attribute.PropertyAttribute.Category">
            <summary>
            Gets or sets the category.
            </summary>
            <value>
            The category.
            </value>
        </member>
        <member name="P:Rock.Attribute.PropertyAttribute.Description">
            <summary>
            Gets or sets the description of the attribute
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:Rock.Attribute.PropertyAttribute.DefaultValue">
            <summary>
            Gets or sets the default value of the attribute.  This is the value that will be used if a specific value has not yet been created
            </summary>
            <value>
            The default value.
            </value>
        </member>
        <member name="P:Rock.Attribute.PropertyAttribute.Order">
            <summary>
            Gets or sets the order of the attribute.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="P:Rock.Attribute.PropertyAttribute.FieldTypeAssembly">
            <summary>
            Gets or sets the assembly name of the <see cref="T:Rock.Field.IFieldType"/> to be used for the attribute
            </summary>
            <value>
            The field type assembly.
            </value>
        </member>
        <member name="P:Rock.Attribute.PropertyAttribute.FieldTypeClass">
            <summary>
            Gets or sets the class name of the <see cref="T:Rock.Field.IFieldType"/> to be used for the attribute.
            </summary>
            <value>
            The field type class.
            </value>
        </member>
        <member name="P:Rock.Attribute.PropertyAttribute.IsRequired">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Rock.Attribute.PropertyAttribute"/> is required.
            </summary>
            <value>
              <c>true</c> if required; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Rock.Web.RockRouteHandler">
            <summary>
            Rock custom route handler
            </summary>
        </member>
        <member name="M:Rock.Web.RockRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)">
            <summary>
            Determine the logical page being requested by evaluating the routedata, or querystring and
            then loading the appropriate layout (ASPX) page
            </summary>
            <param name="requestContext"></param>
            <returns></returns>
        </member>
        <member name="T:Rock.Web.HttpHandlerError">
            <summary>
            Handler used when an error occurrs
            </summary>
        </member>
        <member name="M:Rock.Web.HttpHandlerError.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Web.HttpHandlerError"/> class.
            </summary>
            <param name="statusCode">The status code.</param>
        </member>
        <member name="M:Rock.Web.HttpHandlerError.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Enables processing of HTTP Web requests by a custom HttpHandler that implements the <see cref="T:System.Web.IHttpHandler"/> interface.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpContext"/> object that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests.</param>
        </member>
        <member name="P:Rock.Web.HttpHandlerError.StatusCode">
            <summary>
            Gets the status code.
            </summary>
        </member>
        <member name="P:Rock.Web.HttpHandlerError.IsReusable">
            <summary>
            Gets a value indicating whether another request can use the <see cref="T:System.Web.IHttpHandler"/> instance.
            </summary>
            <returns>true if the <see cref="T:System.Web.IHttpHandler"/> instance is reusable; otherwise, false.</returns>
        </member>
        <member name="T:Rock.Security.Authorization">
            <summary>
            Static class for managing authorizations
            </summary>
        </member>
        <member name="M:Rock.Security.Authorization.SetAuthCookie(System.String,System.Boolean,System.Boolean)">
            <summary>
            Sets the auth cookie.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="isPersisted">if set to <c>true</c> [is persisted].</param>
            <param name="IsImpersonated">if set to <c>true</c> [is impersonated].</param>
        </member>
        <member name="M:Rock.Security.Authorization.Load">
            <summary>
            Load the static Authorizations object
            </summary>
        </member>
        <member name="M:Rock.Security.Authorization.ReloadAction(System.String,System.Int32,System.String)">
            <summary>
            Reloads the authorizations for the specified entity and action.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="entityId">The entity id.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Rock.Security.Authorization.Flush">
            <summary>
            Clear the static Authorizations object
            </summary>
        </member>
        <member name="M:Rock.Security.Authorization.Authorized(Rock.Security.ISecured,System.String,Rock.CMS.SpecialRole)">
            <summary>
            Evaluates whether a selected user is allowed to perform the selected action on the selected
            entity.
            </summary>
            <param name="entity"></param>
            <param name="action"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Security.Authorization.Authorized(Rock.Security.ISecured,System.String,Rock.CRM.Person)">
            <summary>
            Evaluates whether a selected person is allowed to perform the selected action on the selected
            entity.
            </summary>
            <param name="entity">The entity.</param>
            <param name="action">The action.</param>
            <param name="person">The person.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Security.Authorization.AuthRules(System.String,System.Int32,System.String)">
            <summary>
            Returns the authorization rules for the specified entity and action.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="entityId">The entity id.</param>
            <param name="action">The action.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Security.Authorization.EncodeEntityTypeName(System.Type)">
            <summary>
            Encodes the entity type name for use in a URL
            </summary>
            <param name="iSecuredType">Type of the item to secure.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Security.Authorization.EncodeEntityTypeName(System.String)">
            <summary>
            Encodes the entity type name for use in a URL
            </summary>
            <param name="assemblyQualifiedName">Assembly name of the item to secure.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Security.Authorization.DecodeEntityTypeName(System.String)">
            <summary>
            Decodes the entity type name.
            </summary>
            <param name="encodedTypeName">Name of the encoded type.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Security.Authorization.CopyAuthorization(Rock.Security.ISecured,Rock.Security.ISecured,System.Nullable{System.Int32})">
            <summary>
            Copies the authorizations from one <see cref="T:Rock.Security.ISecured"/> object to another
            </summary>
            <param name="sourceEntity">The source entity.</param>
            <param name="targetEntity">The target entity.</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="P:Rock.Security.Authorization.Authorizations">
            <summary>
            Authorizations is a static variable for storing all authorizations.  It uses multiple Dictionary objects similiar 
            to a multi-dimensional array to store information.  The first dimension is the entity type, second is the entity
            ID, third is the action, and the fourth dimension is a list of AuthRules for the action.
            </summary>
        </member>
        <member name="T:Rock.Security.AuthRule">
            <summary>
            Lightweight class to store if a particular user or role is allowed or denied access
            </summary>
        </member>
        <member name="M:Rock.Security.AuthRule.#ctor(System.Int32,System.Nullable{System.Int32},System.String,Rock.CMS.SpecialRole,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Security.AuthRule"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="entityId">The entity id.</param>
            <param name="allowOrDeny">Allow or Deny ("A" or "D").</param>
            <param name="specialRole">The special role.</param>
            <param name="personId">The person id.</param>
            <param name="groupId">The group id.</param>
            <param name="order">The order.</param>
        </member>
        <member name="M:Rock.Security.AuthRule.#ctor(Rock.CMS.Auth)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Security.AuthRule"/> class.
            </summary>
            <param name="auth">The auth.</param>
        </member>
        <member name="P:Rock.Security.AuthRule.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Rock.Security.AuthRule.EntityId">
            <summary>
            Gets or sets the entity id.
            </summary>
            <value>
            The entity id.
            </value>
        </member>
        <member name="P:Rock.Security.AuthRule.AllowOrDeny">
            <summary>
            Gets or sets a value indicating if this is an allow or deny rule.  Acceptable values are "A" or "D".
            </summary>
            <value>
            The allow or deny.
            </value>
        </member>
        <member name="P:Rock.Security.AuthRule.SpecialRole">
            <summary>
            Gets or sets the special role.
            </summary>
            <value>
            The special role.
            </value>
        </member>
        <member name="P:Rock.Security.AuthRule.PersonId">
            <summary>
            Gets or sets the person id.
            </summary>
            <value>
            The person id.
            </value>
        </member>
        <member name="P:Rock.Security.AuthRule.GroupId">
            <summary>
            Gets or sets the group id.
            </summary>
            <value>
            The group id.
            </value>
        </member>
        <member name="P:Rock.Security.AuthRule.Order">
            <summary>
            Gets or sets the order.
            </summary>
            <value>
            The order.
            </value>
        </member>
        <member name="P:Rock.Security.AuthRule.DisplayName">
            <summary>
            Gets the display name.
            </summary>
        </member>
        <member name="T:Rock.Web.UI.Controls.DataTextBox">
            <summary>
            A composite control that renders a label, textbox, and datavalidation control for a specific field of a data model
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.DataTextBox.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.DataTextBox.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders a label and <see cref="T:System.Web.UI.WebControls.TextBox"/> control to the specified <see cref="T:System.Web.UI.HtmlTextWriter"/> object.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> that receives the rendered output.</param>
        </member>
        <member name="P:Rock.Web.UI.Controls.DataTextBox.SourceTypeName">
            <summary>
            Gets or sets the name of the assembly qualified name of the entity that is being validated
            </summary>
            <value>
            The name of the assembly qualified type name.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.DataTextBox.PropertyName">
            <summary>
            Gets or sets the name of the entity property.
            </summary>
            <value>
            The name of the entity property.
            </value>
        </member>
        <member name="T:Rock.Web.UI.Controls.SecurityField">
            <summary>
            <see cref="T:Rock.Web.UI.Controls.Grid"/> Column for editing the security of an item in a row in a grid
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.SecurityField.Initialize(System.Boolean,System.Web.UI.Control)">
            <summary>
            Performs basic instance initialization for a data control field.
            </summary>
            <param name="sortingEnabled">A value that indicates whether the control supports the sorting of columns of data.</param>
            <param name="control">The data control that owns the <see cref="T:System.Web.UI.WebControls.DataControlField"/>.</param>
            <returns>
            Always returns false.
            </returns>
        </member>
        <member name="P:Rock.Web.UI.Controls.SecurityField.EntityType">
            <summary>
            Gets or sets the type of the entity being secured
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.SecurityField.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="T:Rock.Web.UI.Controls.SecurityFieldTemplate">
            <summary>
            Template used by the <see cref="T:Rock.Web.UI.Controls.SecurityField"/> control
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.SecurityFieldTemplate.#ctor(System.Web.UI.Page,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Web.UI.Controls.SecurityFieldTemplate"/> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="title">The title.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.SecurityFieldTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            When implemented by a class, defines the <see cref="T:System.Web.UI.Control"/> object that child controls and templates belong to. These child controls are in turn defined within an inline template.
            </summary>
            <param name="container">The <see cref="T:System.Web.UI.Control"/> object to contain the instances of controls from the inline template.</param>
        </member>
        <member name="P:Rock.Web.UI.Controls.SecurityFieldTemplate.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.SecurityFieldTemplate.EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="T:Rock.Web.UI.Controls.ReorderField">
            <summary>
            <see cref="T:Rock.Web.UI.Controls.Grid"/> Column for reordering rows in a grid
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.ReorderField.Initialize(System.Boolean,System.Web.UI.Control)">
            <summary>
            Performs basic instance initialization for a data control field.
            </summary>
            <param name="sortingEnabled">A value that indicates whether the control supports the sorting of columns of data.</param>
            <param name="control">The data control that owns the <see cref="T:System.Web.UI.WebControls.DataControlField"/>.</param>
            <returns>
            Always returns false.
            </returns>
        </member>
        <member name="T:Rock.Web.UI.Controls.ReorderFieldTemplate">
            <summary>
            Template used by the <see cref="T:Rock.Web.UI.Controls.ReorderField"/> control
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.ReorderFieldTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            When implemented by a class, defines the <see cref="T:System.Web.UI.Control"/> object that child controls and templates belong to. These child controls are in turn defined within an inline template.
            </summary>
            <param name="container">The <see cref="T:System.Web.UI.Control"/> object to contain the instances of controls from the inline template.</param>
        </member>
        <member name="T:Rock.Web.UI.Controls.EditField">
            <summary>
            <see cref="T:Rock.Web.UI.Controls.Grid"/> Column for editing a row in a grid
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.EditField.Initialize(System.Boolean,System.Web.UI.Control)">
            <summary>
            Performs basic instance initialization for a data control field.
            </summary>
            <param name="sortingEnabled">A value that indicates whether the control supports the sorting of columns of data.</param>
            <param name="control">The data control that owns the <see cref="T:System.Web.UI.WebControls.DataControlField"/>.</param>
            <returns>
            Always returns false.
            </returns>
        </member>
        <member name="M:Rock.Web.UI.Controls.EditField.editFieldTemplate_LinkButtonClick(System.Object,Rock.Web.UI.Controls.RowEventArgs)">
            <summary>
            Handles the LinkButtonClick event of the editFieldTemplate control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Rock.Web.UI.Controls.RowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.EditField.OnClick(Rock.Web.UI.Controls.RowEventArgs)">
            <summary>
            Raises the <see cref="E:Click"/> event.
            </summary>
            <param name="e">The <see cref="T:Rock.Web.UI.Controls.RowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Rock.Web.UI.Controls.EditField.Click">
            <summary>
            Occurs when [click].
            </summary>
        </member>
        <member name="T:Rock.Web.UI.Controls.EditFieldTemplate">
            <summary>
            Template used by the <see cref="T:Rock.Web.UI.Controls.EditField"/> control
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.EditFieldTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            When implemented by a class, defines the <see cref="T:System.Web.UI.Control"/> object that child controls and templates belong to. These child controls are in turn defined within an inline template.
            </summary>
            <param name="container">The <see cref="T:System.Web.UI.Control"/> object to contain the instances of controls from the inline template.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.EditFieldTemplate.lbEdit_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the lbEdit control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Rock.Web.UI.Controls.EditFieldTemplate.LinkButtonClick">
            <summary>
            Occurs when [link button click].
            </summary>
        </member>
        <member name="T:Rock.Web.UI.Controls.DeleteField">
            <summary>
            <see cref="T:Rock.Web.UI.Controls.Grid"/> Column for deleting a row in a grid
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.DeleteField.Initialize(System.Boolean,System.Web.UI.Control)">
            <summary>
            Performs basic instance initialization for a data control field.
            </summary>
            <param name="sortingEnabled">A value that indicates whether the control supports the sorting of columns of data.</param>
            <param name="control">The data control that owns the <see cref="T:System.Web.UI.WebControls.DataControlField"/>.</param>
            <returns>
            Always returns false.
            </returns>
        </member>
        <member name="M:Rock.Web.UI.Controls.DeleteField.deleteFieldTemplate_LinkButtonClick(System.Object,Rock.Web.UI.Controls.RowEventArgs)">
            <summary>
            Handles the LinkButtonClick event of the deleteFieldTemplate control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Rock.Web.UI.Controls.RowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.DeleteField.OnClick(Rock.Web.UI.Controls.RowEventArgs)">
            <summary>
            Raises the <see cref="E:Click"/> event.
            </summary>
            <param name="e">The <see cref="T:Rock.Web.UI.Controls.RowEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Rock.Web.UI.Controls.DeleteField.Click">
            <summary>
            Occurs when [click].
            </summary>
        </member>
        <member name="T:Rock.Web.UI.Controls.DeleteFieldTemplate">
            <summary>
            Template used by the <see cref="T:Rock.Web.UI.Controls.DeleteField"/> control
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.DeleteFieldTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            When implemented by a class, defines the <see cref="T:System.Web.UI.Control"/> object that child controls and templates belong to. These child controls are in turn defined within an inline template.
            </summary>
            <param name="container">The <see cref="T:System.Web.UI.Control"/> object to contain the instances of controls from the inline template.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.DeleteFieldTemplate.lbDelete_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the lbDelete control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Rock.Web.UI.Controls.DeleteFieldTemplate.LinkButtonClick">
            <summary>
            Occurs when [link button click].
            </summary>
        </member>
        <member name="T:Rock.Web.UI.Controls.Grid">
            <summary>
            Rock Grid Control
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.Grid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Web.UI.Controls.Grid"/> class.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.Grid.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.Grid.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.Grid.OnDataBound(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.WebControls.BaseDataBoundControl.DataBound"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.Grid.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.WebControls.GridView.RowDataBound"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Web.UI.WebControls.GridViewRowEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.Grid.CreateChildTable">
            <summary>
            Creates a new child table.
            </summary>
            <returns>
            Always returns a new <see cref="T:System.Web.UI.WebControls.Table"/> that represents the child table.
            </returns>
        </member>
        <member name="M:Rock.Web.UI.Controls.Grid.CreateChildControls(System.Collections.IEnumerable,System.Boolean)">
            <summary>
            Creates the control hierarchy used to render the <see cref="T:System.Web.UI.WebControls.GridView"/> control using the specified data source.
            </summary>
            <param name="dataSource">An <see cref="T:System.Collections.IEnumerable"/> that contains the data source for the <see cref="T:System.Web.UI.WebControls.GridView"/> control.</param>
            <param name="dataBinding">true to indicate that the child controls are bound to data; otherwise, false.</param>
            <returns>
            The number of rows created.
            </returns>
            <exception cref="T:System.Web.HttpException">
              <paramref name="dataSource"/> returns a null <see cref="T:System.Web.UI.DataSourceView"/>.-or-<paramref name="dataSource"/> does not implement the <see cref="T:System.Collections.ICollection"/> interface and cannot return a <see cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount"/>. -or-<see cref="P:System.Web.UI.WebControls.GridView.AllowPaging"/> is true and <paramref name="dataSource"/> does not implement the <see cref="T:System.Collections.ICollection"/> interface and cannot perform data source paging.-or-<paramref name="dataSource"/> does not implement the <see cref="T:System.Collections.ICollection"/> interface and <paramref name="dataBinding"/> is set to false.</exception>
        </member>
        <member name="M:Rock.Web.UI.Controls.Grid.Grid_Sorting(System.Object,System.Web.UI.WebControls.GridViewSortEventArgs)">
            <summary>
            Handles the Sorting event of the Grid control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.GridViewSortEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.Grid.pagerTemplate_ItemsPerPageClick(System.Object,Rock.Web.UI.Controls.NumericalEventArgs)">
            <summary>
            Handles the ItemsPerPageClick event of the pagerTemplate control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Rock.Web.UI.Controls.NumericalEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.Grid.pagerTemplate_NavigateClick(System.Object,Rock.Web.UI.Controls.NumericalEventArgs)">
            <summary>
            Handles the NavigateClick event of the pagerTemplate control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Rock.Web.UI.Controls.NumericalEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.Grid.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            Raises the appropriate events for the <see cref="T:System.Web.UI.WebControls.GridView"/> control when it posts back to the server.
            </summary>
            <param name="eventArgument">The event argument from which to create a <see cref="T:System.Web.UI.WebControls.CommandEventArgs"/> for the event or events that are raised.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.Grid.OnGridReorder(Rock.Web.UI.Controls.GridReorderEventArgs)">
            <summary>
            Raises the <see cref="E:GridReorder"/> event.
            </summary>
            <param name="e">The <see cref="T:Rock.Web.UI.Controls.GridReorderEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.Grid.OnGridRebind(System.EventArgs)">
            <summary>
            Raises the <see cref="E:GridRebind"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Rock.Web.UI.Controls.Grid.ActionRow">
            <summary>
            Gets the action row.
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Controls.Grid.Actions">
            <summary>
            Gets the actions control
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Controls.Grid.ShowActionRow">
            <summary>
            Gets or sets a value indicating whether the action row should be displayed.
            </summary>
            <value>
              <c>true</c> if action row should be displayed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.Grid.ShowActionExcelExport">
            <summary>
            Gets or sets a value indicating whether the export to excel action should be displayed.
            </summary>
            <value>
              <c>true</c> if the eport to excel action should be displayed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.Grid.SortProperty">
            <summary>
            Gets the sort property.
            </summary>
        </member>
        <member name="E:Rock.Web.UI.Controls.Grid.GridReorder">
            <summary>
            Occurs when [grid reorder].
            </summary>
        </member>
        <member name="E:Rock.Web.UI.Controls.Grid.GridRebind">
            <summary>
            Occurs when [grid rebind].
            </summary>
        </member>
        <member name="T:Rock.Web.UI.Controls.GridReorderEventHandler">
            <summary>
            Delegate used for raising the grid reorder event
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Rock.Web.UI.Controls.GridReorderEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Rock.Web.UI.Controls.GridRebindEventHandler">
            <summary>
            Delegate used for raising the grid rebind event
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Rock.Web.UI.Controls.PageNavigationEventHandler">
            <summary>
            Delegate used for raising the grid items per page changed event
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Rock.Web.UI.Controls.NumericalEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Rock.Web.UI.Controls.NumericalEventArgs">
            <summary>
            Items Per Page Event Argument
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.NumericalEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Web.UI.Controls.NumericalEventArgs"/> class.
            </summary>
            <param name="number">The number.</param>
        </member>
        <member name="P:Rock.Web.UI.Controls.NumericalEventArgs.Number">
            <summary>
            Gets the items per page.
            </summary>
        </member>
        <member name="T:Rock.Web.UI.Controls.GridReorderEventArgs">
            <summary>
            Grid Reorder Event Argument
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.GridReorderEventArgs.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Web.UI.Controls.GridReorderEventArgs"/> class.
            </summary>
            <param name="dataKey">The data key.</param>
            <param name="oldIndex">The old index.</param>
            <param name="newIndex">The new index.</param>
        </member>
        <member name="P:Rock.Web.UI.Controls.GridReorderEventArgs.DataKey">
            <summary>
            Gets the data key.
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Controls.GridReorderEventArgs.OldIndex">
            <summary>
            Gets the old index.
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Controls.GridReorderEventArgs.NewIndex">
            <summary>
            Gets the new index.
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Controls.GridReorderEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the reorder event should be cancelled
            </summary>
            <value>
              <c>true</c> if cancelled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Rock.Web.UI.Controls.JsonResult">
            <summary>
            JSON Result  
            </summary>
        </member>
        <member name="T:Rock.Web.UI.Controls.SortProperty">
            <summary>
            Class for saving sort expression
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.SortProperty.#ctor(System.Web.UI.WebControls.GridViewSortEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Web.UI.Controls.SortProperty"/> class.
            </summary>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.GridViewSortEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Rock.Web.UI.Controls.SortProperty.Direction">
            <summary>
            Gets or sets the direction.
            </summary>
            <value>
            The direction.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.SortProperty.Property">
            <summary>
            Gets or sets the property name
            </summary>
            <value>
            The property.
            </value>
        </member>
        <member name="T:Rock.Web.UI.Controls.PagerTemplate">
            <summary>
            Template used for the pager row in the <see cref="T:Rock.Web.UI.Controls.Grid"/> control
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.PagerTemplate.InstantiateIn(System.Web.UI.Control)">
            <summary>
            When implemented by a class, defines the <see cref="T:System.Web.UI.Control"/> object that child controls and templates belong to. These child controls are in turn defined within an inline template.
            </summary>
            <param name="container">The <see cref="T:System.Web.UI.Control"/> object to contain the instances of controls from the inline template.</param>
        </member>
        <member name="M:Rock.Web.UI.Controls.PagerTemplate.lbItems_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the lbPageSize control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Rock.Web.UI.Controls.PagerTemplate.NavigateClick">
            <summary>
            Occurs when [navigate click].
            </summary>
        </member>
        <member name="E:Rock.Web.UI.Controls.PagerTemplate.ItemsPerPageClick">
            <summary>
            Occurs when [page click].
            </summary>
        </member>
        <member name="T:Rock.Web.UI.Controls.BoolField">
            <summary>
            <see cref="T:Rock.Web.UI.Controls.Grid"/> Column to display a boolean value.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.BoolField.Initialize(System.Boolean,System.Web.UI.Control)">
            <summary>
            Initializes the <see cref="T:System.Web.UI.WebControls.BoundField"/> object.
            </summary>
            <param name="enableSorting">true if sorting is supported; otherwise, false.</param>
            <param name="control">The data control that owns the <see cref="T:System.Web.UI.WebControls.BoundField"/>.</param>
            <returns>
            false in all cases.
            </returns>
        </member>
        <member name="M:Rock.Web.UI.Controls.BoolField.FormatDataValue(System.Object,System.Boolean)">
            <summary>
            Formats the specified field value for a cell in the <see cref="T:System.Web.UI.WebControls.BoundField"/> object.
            </summary>
            <param name="dataValue">The field value to format.</param>
            <param name="encode">true to encode the value; otherwise, false.</param>
            <returns>
            The field value converted to the format specified by <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString"/>.
            </returns>
        </member>
        <member name="T:Rock.Web.UI.Controls.HtmlGenericContainer">
            <summary>
            An HtmlGenericContainer that implements the INamingContainer interface
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.HtmlGenericContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Web.UI.Controls.HtmlGenericContainer"/> class.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.HtmlGenericContainer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Web.UI.Controls.HtmlGenericContainer"/> class.
            </summary>
            <param name="tag">The name of the element for which this instance of the class is created.</param>
        </member>
        <member name="T:Rock.Web.UI.Controls.NotificationBox">
            <summary>
            Displays a standard warning or error message box
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.NotificationBox.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the server control content.</param>
        </member>
        <member name="P:Rock.Web.UI.Controls.NotificationBox.Title">
            <summary>
            Gets or sets the title (title is inline with the message text but is bold).
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.NotificationBox.Heading">
            <summary>
            Gets or sets the heading (heading is on it's own line at the top)
            </summary>
            <value>
            The heading.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.NotificationBox.IsPadded">
            <summary>
            Gets or sets extra padding around the inner text
            </summary>
            <value>
            Enable extra padding.
            </value>
        </member>
        <member name="P:Rock.Web.UI.Controls.NotificationBox.NotificationBoxType">
            <summary>
            Gets or sets the type of the notification box.
            </summary>
            <value>
            The type of the notification box.
            </value>
        </member>
        <member name="T:Rock.Web.UI.Controls.NotificationBoxType">
            <summary>
            The type of notification box to display
            </summary>
        </member>
        <member name="F:Rock.Web.UI.Controls.NotificationBoxType.Info">
            <summary>
            Display an information box
            </summary>
        </member>
        <member name="F:Rock.Web.UI.Controls.NotificationBoxType.Warning">
            <summary>
            Display a warning box
            </summary>
        </member>
        <member name="F:Rock.Web.UI.Controls.NotificationBoxType.Error">
            <summary>
            Display an error box
            </summary>
        </member>
        <member name="F:Rock.Web.UI.Controls.NotificationBoxType.Success">
            <summary>
            Display a success box
            </summary>
        </member>
        <member name="T:Rock.Web.UI.Controls.RowEventArgs">
            <summary>
            Event argument used by the <see cref="T:Rock.Web.UI.Controls.Grid"/> events
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.RowEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Web.UI.Controls.RowEventArgs"/> class.
            </summary>
            <param name="rowIndex">Index of the row.</param>
        </member>
        <member name="P:Rock.Web.UI.Controls.RowEventArgs.RowIndex">
            <summary>
            Gets the index of the row that fired the event
            </summary>
            <value>
            The index of the row.
            </value>
        </member>
        <member name="T:Rock.ExtensionMethods">
            <summary>
            Extension Methods
            </summary>
        </member>
        <member name="M:Rock.ExtensionMethods.ToJSON(System.Object)">
            <summary>
            Converts object to JSON string
            </summary>
            <param name="obj">Object.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.ExtensionMethods.ToJSON(System.Object,System.Int32)">
            <summary>
            Converts object to JSON string
            </summary>
            <param name="obj">Object.</param>
            <param name="recursionDepth">constrains the number of object levels to process.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.ExtensionMethods.SplitCase(System.String)">
            <summary>
            Splits a Camel or Pascal cased identifier into seperate words.
            </summary>
            <param name="str">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.ExtensionMethods.SplitDelimitedValues(System.String)">
            <summary>
            Returns a string array that contains the substrings in this string that are delimited by any combination of whitespace, comma, semi-colon, or pipe characters
            </summary>
            <param name="str">The string.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.ExtensionMethods.ReplaceCaseInsensitive(System.String,System.String,System.String)">
            <summary>
            Replaces every instance of oldValue (regardless of case) with the newValue.
            </summary>
            <param name="str">The source string.</param>
            <param name="oldValue">The value to replace.</param>
            <param name="newValue">The value to insert.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.ExtensionMethods.TotalMonths(System.DateTime,System.DateTime)">
            <summary>
            The total months.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.ExtensionMethods.TotalYears(System.DateTime,System.DateTime)">
            <summary>
            The total years.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.ExtensionMethods.ToElapsedString(System.Nullable{System.DateTime})">
            <summary>
            Returns a friendly elapsed time string.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.ExtensionMethods.LoadControl(System.Web.UI.Control,System.String,System.Object[])">
            <summary>
            Loads a user control using the constructor with the parameters specified.
            </summary>
            <param name="control">The control.</param>
            <param name="userControlPath">The user control path.</param>
            <param name="constructorParameters">The constructor parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.ExtensionMethods.AddCssClass(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            Adds a CSS class name to a web control
            </summary>
            <param name="webControl">The web control.</param>
            <param name="className">Name of the class.</param>
        </member>
        <member name="M:Rock.ExtensionMethods.RemoveCssClass(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            Removes a CSS class name from a web control.
            </summary>
            <param name="webControl">The web control.</param>
            <param name="className">Name of the class.</param>
        </member>
        <member name="M:Rock.ExtensionMethods.AddCssClass(System.Web.UI.HtmlControls.HtmlControl,System.String)">
            <summary>
            Adds a CSS class name to an html control
            </summary>
            <param name="htmlControl">The html control.</param>
            <param name="className">Name of the class.</param>
        </member>
        <member name="M:Rock.ExtensionMethods.RemoveCssClass(System.Web.UI.HtmlControls.HtmlControl,System.String)">
            <summary>
            Removes a CSS class name from an html control.
            </summary>
            <param name="htmlControl">The html control.</param>
            <param name="className">Name of the class.</param>
        </member>
        <member name="M:Rock.ExtensionMethods.SetValue(System.Web.UI.WebControls.DropDownList,System.String)">
            <summary>
            Try's to set the selected value, if the value does not exist, wills et the first item in the list
            </summary>
            <param name="ddl">The DDL.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Rock.ExtensionMethods.ConvertToString(System.Enum)">
            <summary>
            Converts to the enum value to it's string value
            </summary>
            <param name="eff">The eff.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.ExtensionMethods.ConvertToEnum``1(System.String)">
            <summary>
            Converts a string value to an enum value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumValue">The enum value.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.ExtensionMethods.AsDelimited``1(System.Collections.Generic.List{``0},System.String)">
            <summary>
            Concatonate the items
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items">The items.</param>
            <param name="delimiter">The delimiter.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.ExtensionMethods.Join(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Joins a dictionary of items
            </summary>
            <param name="items">The items.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.ExtensionMethods.OrderBy``1(System.Linq.IQueryable{``0},System.String)">
            <summary>
            Orders the list by the name of a property.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The type of object.</param>
            <param name="property">The property to order by.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.ExtensionMethods.OrderByDescending``1(System.Linq.IQueryable{``0},System.String)">
            <summary>
            Orders the list by the name of a property in descending order
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The type of object.</param>
            <param name="property">The property to order by.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.ExtensionMethods.ThenBy``1(System.Linq.IOrderedQueryable{``0},System.String)">
            <summary>
            Then Orders the list by the name of a property.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The type of object.</param>
            <param name="property">The property to order by.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.ExtensionMethods.ThenByDescending``1(System.Linq.IOrderedQueryable{``0},System.String)">
            <summary>
            Then Orders the list by a a property in descending order
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The type of object.</param>
            <param name="property">The property to order by.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.ExtensionMethods.Sort``1(System.Linq.IQueryable{``0},Rock.Web.UI.Controls.SortProperty)">
            <summary>
            Sorts the object by the specified sort property.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="sortProperty">The sort property.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Field.Types.Boolean">
            <summary>
            Field Type used to display a list of options as checkboxes.  Value is saved as a | delimited list
            </summary>
        </member>
        <member name="M:Rock.Field.Types.Boolean.FormatValue(System.Web.UI.Control,System.String,System.Boolean)">
            <summary>
            Returns the field's current value(s)
            </summary>
            <param name="parentControl">The parent control.</param>
            <param name="value">Information about the value</param>
            <param name="condensed">Flag indicating if the value should be condensed (i.e. for use in a grid column)</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.Boolean.IsValid(System.String,System.Boolean,System.String@)">
            <summary>
            Tests the value to ensure that it is a valid value.  If not, message will indicate why
            </summary>
            <param name="value"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.Boolean.EditControl(System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Renders the controls neccessary for prompting user for a new value and adds them to the parentControl
            </summary>
            <param name="value"></param>
            <param name="setValue"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.Boolean.GetEditValue(System.Web.UI.Control,System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Reads new values entered by the user for the field
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.Boolean.SetEditValue(System.Web.UI.Control,System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue},System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="control">The control.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Rock.Field.Types.PageReference">
            <summary>
            Field used to save and dispaly a page reference
            </summary>
        </member>
        <member name="T:Rock.Field.Types.Integer">
            <summary>
            Field used to save and dispaly a numeric value
            </summary>
        </member>
        <member name="M:Rock.Field.Types.Integer.IsValid(System.String,System.Boolean,System.String@)">
            <summary>
            Tests the value to ensure that it is a valid value.  If not, message will indicate why
            </summary>
            <param name="value"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Rock.Field.Types.Color">
            <summary>
            Field Type used to display a dropdown list of System.Drawing.Color options
            </summary>
        </member>
        <member name="M:Rock.Field.Types.Color.EditControl(System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Renders the controls neccessary for prompting user for a new value and adds them to the parentControl
            </summary>
            <param name="value"></param>
            <param name="setValue"></param>
            <returns></returns>
        </member>
        <member name="M:Rock.Field.Types.Color.GetEditValue(System.Web.UI.Control,System.Collections.Generic.Dictionary{System.String,Rock.Field.ConfigurationValue})">
            <summary>
            Reads new values entered by the user for the field
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="T:Rock.Field.Helper">
            <summary>
            Helper class for use with <see cref="T:Rock.Field.IFieldType"/> classes
            </summary>
        </member>
        <member name="M:Rock.Field.Helper.InstantiateFieldType(System.String,System.String)">
            <summary>
            Instantiates an instance of a specific field type based on the assembly and class name of the field type
            </summary>
            <param name="assembly">Assembly Name (i.e. Rock)</param>
            <param name="typeName">Class Name (i.e. Rock.Field.Types.Text)</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Field.Types.Text">
            <summary>
            Field used to save and dispaly a text value
            </summary>
        </member>
        <member name="T:Rock.Attribute.Helper">
            <summary>
            Static Helper class for creating, saving, and reading attributes and attribute values of any <see cref="T:Rock.Attribute.IHasAttributes"/> class
            </summary>
        </member>
        <member name="M:Rock.Attribute.Helper.UpdateAttributes(System.Type,System.String,System.Nullable{System.Int32})">
            <param name="type">The type (should be a <see cref="T:Rock.Attribute.IHasAttributes"/> object.</param>
            <param name="entity">The entity.</param>
            <param name="currentPersonId">The current person id.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Attribute.Helper.UpdateAttributes(System.Type,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Uses reflection to find any <see cref="T:Rock.Attribute.PropertyAttribute"/> attributes for the specified type and will create and/or update
            a <see cref="T:Rock.Core.Attribute"/> record for each attribute defined.
            </summary>
            <param name="type">The type (should be a <see cref="T:Rock.Attribute.IHasAttributes"/> object.</param>
            <param name="entity">The entity.</param>
            <param name="entityQualifierColumn">The entity qualifier column.</param>
            <param name="entityQualifierValue">The entity qualifier value.</param>
            <param name="currentPersonId">The current person id.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Attribute.Helper.UpdateAttribute(Rock.Attribute.PropertyAttribute,System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Adds or Updates a <see cref="T:Rock.Core.Attribute"/> item for the attribute.
            </summary>
            <param name="property">The property.</param>
            <param name="entity">The entity.</param>
            <param name="entityQualifierColumn">The entity qualifier column.</param>
            <param name="entityQualifierValue">The entity qualifier value.</param>
            <param name="currentPersonId">The current person id.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Attribute.Helper.LoadAttributes(Rock.Attribute.IHasAttributes)">
            <summary>
            Loads the <see cref="P:IHasAttributes.Attributes"/> and <see cref="P:IHasAttributes.AttributeValues"/> of any <see cref="T:Rock.Attribute.IHasAttributes"/> object
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Rock.Attribute.Helper.SaveAttributeValues(Rock.Attribute.IHasAttributes,System.Nullable{System.Int32})">
            <summary>
            Saves the attribute values.
            </summary>
            <param name="model">The model.</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Attribute.Helper.SaveAttributeValue(Rock.Attribute.IHasAttributes,Rock.Web.Cache.Attribute,System.String,System.Nullable{System.Int32})">
            <summary>
            Saves an attribute value.
            </summary>
            <param name="model">The model.</param>
            <param name="attribute">The attribute.</param>
            <param name="value">The value.</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Attribute.Helper.SaveAttributeValues(Rock.Attribute.IHasAttributes,Rock.Web.Cache.Attribute,System.Collections.Generic.List{Rock.Web.Cache.AttributeValue},System.Nullable{System.Int32})">
            <summary>
            Saves an attribute value.
            </summary>
            <param name="model">The model.</param>
            <param name="attribute">The attribute.</param>
            <param name="value">The value.</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="M:Rock.Attribute.Helper.GetEditControls(Rock.Attribute.IHasAttributes,System.Boolean)">
            <summary>
            Helper method to generate a list of <![CDATA[<li>]]> tags that contain the appropriate html edit
            control returned by each attribute's <see cref="T:Rock.Field.IFieldType"/>
            </summary>
            <param name="item">The item.</param>
            <param name="setValue">if set to <c>true</c> set the edit control's value based on the attribute value.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Attribute.Helper.SetErrorIndicators(System.Web.UI.Control,Rock.Attribute.IHasAttributes)">
            <summary>
            Sets any missing required field error indicators.
            </summary>
            <param name="parentControl">The parent control.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Rock.Attribute.Helper.GetEditValues(System.Web.UI.Control,Rock.Attribute.IHasAttributes)">
            <summary>
            Gets the values entered into the edit controls generated by the <see cref="M:Rock.Attribute.Helper.GetEditControls(Rock.Attribute.IHasAttributes,System.Boolean)"/> method and sets the <see cref="P:IHasAttributes.AttributeValues"/> of 
            the <see cref="T:Rock.Attribute.IHasAttributes"/> object
            </summary>
            <param name="parentControl">The parent control.</param>
            <param name="item">The item.</param>
        </member>
        <member name="T:Rock.Web.UI.Controls.HtmlHelper">
            <summary>
            Provides helper methods for use in rendering HTML
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Controls.HtmlHelper.CssClassFormat(System.String)">
            <summary>
            Formats a string for use as a CCS class or id value
            </summary>
            <param name="value">String to format</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Web.UI.Controls.HtmlHelper.CalculateMD5Hash(System.String)">
            <summary>
            Hashes a string using MD5
            </summary>
            <param name="input">String to format</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Web.HttpModule">
            <summary>
            Provides application start, and module initialization and disposal events to the implementing class.
            </summary>
        </member>
        <member name="M:Rock.Web.HttpModule.Dispose">
            <summary>
            Disposes of the resources (other than memory) used by the module that implements <see cref="T:System.Web.IHttpModule"/>.
            </summary>
        </member>
        <member name="M:Rock.Web.HttpModule.Init(System.Web.HttpApplication)">
            <summary>
            Initializes a module and prepares it to handle requests.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpApplication"/> that provides access to the methods, properties, and events common to all application objects within an ASP.NET application</param>
        </member>
        <member name="M:Rock.Web.HttpModule.Application_Start(System.Web.HttpApplication)">
            <summary>
            Method that will be called once on application start.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Rock.Web.UI.PageReference">
            <summary>
            Helper class to work with the PageReference field type
            </summary>
        </member>
        <member name="M:Rock.Web.UI.PageReference.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Web.UI.PageReference"/> class.
            </summary>
        </member>
        <member name="M:Rock.Web.UI.PageReference.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Web.UI.PageReference"/> class.
            </summary>
            <param name="reference">The reference.</param>
        </member>
        <member name="M:Rock.Web.UI.PageReference.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Web.UI.PageReference"/> class.
            </summary>
            <param name="pageId">The page id.</param>
            <param name="routeId">The route id.</param>
        </member>
        <member name="P:Rock.Web.UI.PageReference.PageId">
            <summary>
            Gets the page id.
            </summary>
        </member>
        <member name="P:Rock.Web.UI.PageReference.RouteId">
            <summary>
            Gets the route id.
            </summary>
        </member>
        <member name="P:Rock.Web.UI.PageReference.IsValid">
            <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
            <value>
              <c>true</c> if this instance is valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Rock.Reflection">
            <summary>
            Static helper methods for using Reflection
            </summary>
        </member>
        <member name="M:Rock.Reflection.FindTypes(System.Type)">
            <summary>
            Finds the all the types that implement or inherit from the baseType.  The baseType
            will not be included in the result
            </summary>
            <param name="baseType">base type.</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Reflection.FindTypes(System.Type,System.Boolean)">
            <summary>
            Finds the all the types that implement or inherit from the baseType.  
            </summary>
            <param name="baseType">base type.</param>
            <param name="includeBaseType">if set to <c>true</c> the base type will be included in the result</param>
            <returns></returns>
        </member>
        <member name="M:Rock.Reflection.ClassName(System.Type)">
            <summary>
            Returns the name of the type.  If a <see cref="T:System.ComponentModel.DescriptionAttribute"/> is 
            present for the type, it's value will be returned, otherwise the type name will be returned
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Jobs.JobPulse">
            <summary>
            Job to keep a heartbeat of the job process so we know when the jobs stop working
            </summary>
            <author>Jon Edmiston</author>
            <author>Spark Development Network</author>
        </member>
        <member name="M:Rock.Jobs.JobPulse.#ctor">
            <summary> 
            Empty constructor for job initilization
            <para>
            Jobs require a public empty constructor so that the
            scheduler can instantiate the class whenever it needs.
            </para>
            </summary>
        </member>
        <member name="M:Rock.Jobs.JobPulse.Execute(Quartz.IJobExecutionContext)">
            <summary> 
            Job that updates the JobPulse setting with the current date/time.
            This will allow us to notify an admin if the jobs stop running.
            
            Called by the <see cref="T:Quartz.IScheduler"/> when a
            <see cref="T:Quartz.ITrigger"/> fires that is associated with
            the <see cref="T:Quartz.IJob"/>.
            </summary>
        </member>
        <member name="T:Rock.Jobs.RockJobListener">
            <summary>
            Summary description for JobListener
            </summary>
        </member>
        <member name="M:Rock.Jobs.RockJobListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Jobs.RockJobListener"/> class.
            </summary>
        </member>
        <member name="M:Rock.Jobs.RockJobListener.JobToBeExecuted(Quartz.IJobExecutionContext)">
            <summary>
            Called by the <see cref="T:Quartz.IScheduler"/> when a <see cref="T:Quartz.IJobDetail"/>
            is about to be executed (an associated <see cref="T:Quartz.ITrigger"/>
            has occurred).
            <para>
            This method will not be invoked if the execution of the Job was vetoed
            by a <see cref="T:Quartz.ITriggerListener"/>.
            </para>
            </summary>
            <param name="context"></param>
            <seealso cref="M:Rock.Jobs.RockJobListener.JobExecutionVetoed(Quartz.IJobExecutionContext)"/>
        </member>
        <member name="M:Rock.Jobs.RockJobListener.JobExecutionVetoed(Quartz.IJobExecutionContext)">
            <summary>
            Called by the <see cref="T:Quartz.IScheduler"/> when a <see cref="T:Quartz.IJobDetail"/>
            was about to be executed (an associated <see cref="T:Quartz.ITrigger"/>
            has occurred), but a <see cref="T:Quartz.ITriggerListener"/> vetoed it's
            execution.
            </summary>
            <param name="context"></param>
            <seealso cref="M:Rock.Jobs.RockJobListener.JobToBeExecuted(Quartz.IJobExecutionContext)"/>
        </member>
        <member name="M:Rock.Jobs.RockJobListener.JobWasExecuted(Quartz.IJobExecutionContext,Quartz.JobExecutionException)">
            <summary>
            Called by the <see cref="T:Quartz.IScheduler"/> after a <see cref="T:Quartz.IJobDetail"/>
            has been executed, and before the associated <see cref="T:Quartz.Spi.IOperableTrigger"/>'s
            <see cref="M:Quartz.Spi.IOperableTrigger.Triggered(Quartz.ICalendar)"/> method has been called.
            </summary>
            <param name="context"></param>
            <param name="jobException"></param>
        </member>
        <member name="P:Rock.Jobs.RockJobListener.Name">
            <summary>
            Get the name of the <see cref="T:Quartz.IJobListener"/>.
            </summary>
        </member>
        <member name="T:Rock.Jobs.TestJob">
            <summary>
            Job to keep a heartbeat of the job process so we know when the jobs stop working
            </summary>
            <author>Jon Edmiston</author>
            <author>Spark Development Network</author>
        </member>
        <member name="M:Rock.Jobs.TestJob.#ctor">
            <summary> 
            Empty constructor for job initilization
            <para>
            Jobs require a public empty constructor so that the
            scheduler can instantiate the class whenever it needs.
            </para>
            </summary>
        </member>
        <member name="M:Rock.Jobs.TestJob.Execute(Quartz.IJobExecutionContext)">
            <summary> 
            Job that updates the JobPulse setting with the current date/time.
            This will allow us to notify an admin if the jobs stop running.
            
            Called by the <see cref="T:Quartz.IScheduler"/> when a
            <see cref="T:Quartz.ITrigger"/> fires that is associated with
            the <see cref="T:Quartz.IJob"/>.
            </summary>
        </member>
        <member name="T:Rock.Data.ModelUpdatedEventArgs">
            <summary>
            Event argument used when model was added, updated, or deleted
            </summary>
        </member>
        <member name="F:Rock.Data.ModelUpdatedEventArgs.Model">
            <summary>
            The affected model
            </summary>
        </member>
        <member name="F:Rock.Data.ModelUpdatedEventArgs.PersonId">
            <summary>
            The id of the person making the update
            </summary>
        </member>
        <member name="M:Rock.Data.ModelUpdatedEventArgs.#ctor(Rock.Data.IModel,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Data.ModelUpdatedEventArgs"/> class.
            </summary>
            <param name="model">The model.</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="T:Rock.Data.ModelUpdatingEventArgs">
            <summary>
            Event argument used when model is being added, updated, or deleted
            </summary>
        </member>
        <member name="M:Rock.Data.ModelUpdatingEventArgs.#ctor(Rock.Data.IModel,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Data.ModelUpdatingEventArgs"/> class.
            </summary>
            <param name="model">The model.</param>
            <param name="personId">The person id.</param>
        </member>
        <member name="P:Rock.Data.ModelUpdatingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether event should be cancelled.
            </summary>
            <value>
              <c>true</c> if event should be canceled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Rock.Data.KeyModel">
            <summary>
            Object used for current model (context) implementation 
            </summary>
        </member>
        <member name="T:Rock.Data.TrackChangesAttribute">
            <summary>
            Custom attribute used to decorate model properties that should be tracked.  Any changes to
            properties with this attribute will be logged in the coreEntityChange table
            </summary>
        </member>
        <member name="T:Rock.Data.RockContext">
            <summary>
            Entity Framework Context
            </summary>
        </member>
        <member name="M:Rock.Data.RockContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Data.RockContext"/> class.
            </summary>
        </member>
        <member name="M:Rock.Data.RockContext.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Data.RockContext"/> class.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:Rock.Data.RockContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>
            This method is called when the context has been initialized, but
            before the model has been locked down and used to initialize the context. 
            </summary>
            <param name="modelBuilder">The builder that defines the model for the context being created.</param>
        </member>
        <member name="P:Rock.Data.RockContext.Auths">
            <summary>
            Gets or sets the Auths.
            </summary>
            <value>
            the Auths.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.Blocks">
            <summary>
            Gets or sets the Blocks.
            </summary>
            <value>
            the Blocks.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.BlockInstances">
            <summary>
            Gets or sets the Block Instances.
            </summary>
            <value>
            the Block Instances.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.Files">
            <summary>
            Gets or sets the Files.
            </summary>
            <value>
            the Files.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.HtmlContents">
            <summary>
            Gets or sets the Html Contents.
            </summary>
            <value>
            the Html Contents.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.Pages">
            <summary>
            Gets or sets the Pages.
            </summary>
            <value>
            the Pages.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.PageRoutes">
            <summary>
            Gets or sets the Page Routes.
            </summary>
            <value>
            the Page Routes.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.Sites">
            <summary>
            Gets or sets the Sites.
            </summary>
            <value>
            the Sites.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.SiteDomains">
            <summary>
            Gets or sets the Site Domains.
            </summary>
            <value>
            the Site Domains.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.Users">
            <summary>
            Gets or sets the Users.
            </summary>
            <value>
            the Users.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.Attributes">
            <summary>
            Gets or sets the Attributes.
            </summary>
            <value>
            the Attributes.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.AttributeQualifiers">
            <summary>
            Gets or sets the Attribute Qualifiers.
            </summary>
            <value>
            the Attribute Qualifiers.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.AttributeValues">
            <summary>
            Gets or sets the Attribute Values.
            </summary>
            <value>
            the Attribute Values.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.DefinedTypes">
            <summary>
            Gets or sets the Defined Types.
            </summary>
            <value>
            the Defined Types.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.DefinedValues">
            <summary>
            Gets or sets the Defined Values.
            </summary>
            <value>
            the Defined Values.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.EntityChanges">
            <summary>
            Gets or sets the Entity Changes.
            </summary>
            <value>
            the Entity Changes.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.ExceptionLogs">
            <summary>
            Gets or sets the Exception Logs.
            </summary>
            <value>
            the Exception Logs.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.FieldTypes">
            <summary>
            Gets or sets the Field Types.
            </summary>
            <value>
            the Field Types.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.ServiceLogs">
            <summary>
            Gets or sets the Service Logs.
            </summary>
            <value>
            the Service Logs.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.Addresses">
            <summary>
            Gets or sets the Addresses.
            </summary>
            <value>
            the Addresses.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.Campuses">
            <summary>
            Gets or sets the Campuses.
            </summary>
            <value>
            the Campuses.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.EmailTemplates">
            <summary>
            Gets or sets the Email Templates.
            </summary>
            <value>
            the Email Templates.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.People">
            <summary>
            Gets or sets the People.
            </summary>
            <value>
            the People.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.PersonMerges">
            <summary>
            Gets or sets the Person Trails.
            </summary>
            <value>
            the Person Trails.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.PersonVieweds">
            <summary>
            Gets or sets the Person Vieweds.
            </summary>
            <value>
            the Person Vieweds.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.PhoneNumbers">
            <summary>
            Gets or sets the Phone Numbers.
            </summary>
            <value>
            the Phone Numbers.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.Groups">
            <summary>
            Gets or sets the Groups.
            </summary>
            <value>
            the Groups.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.GroupRoles">
            <summary>
            Gets or sets the Group Roles.
            </summary>
            <value>
            the Group Roles.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.GroupTypes">
            <summary>
            Gets or sets the Group Types.
            </summary>
            <value>
            the Group Types.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.Members">
            <summary>
            Gets or sets the Members.
            </summary>
            <value>
            the Members.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.Jobs">
            <summary>
            Gets or sets the Jobs.
            </summary>
            <value>
            the Jobs.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.Batches">
            <summary>
            Gets or sets the batches.
            </summary>
            <value>
            The batches.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.Fund">
            <summary>
            Gets or sets the fund.
            </summary>
            <value>
            The fund.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.Pledges">
            <summary>
            Gets or sets the pledges.
            </summary>
            <value>
            The pledges.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.Transactions">
            <summary>
            Gets or sets the transactions.
            </summary>
            <value>
            The transactions.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.TransactionDetails">
            <summary>
            Gets or sets the transaction details.
            </summary>
            <value>
            The transaction details.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.PersonAccountLookups">
            <summary>
            Gets or sets the person account lookups.
            </summary>
            <value>
            The person account lookups.
            </value>
        </member>
        <member name="P:Rock.Data.RockContext.TransactionFunds">
            <summary>
            Gets or sets the transaction funds.
            </summary>
            <value>
            The transaction funds.
            </value>
        </member>
        <member name="T:Rock.Data.UnitOfWorkScope">
            <summary>
            Class used when services need to share the same DbContext
            </summary>
        </member>
        <member name="F:Rock.Data.UnitOfWorkScope.objectContext">
            <summary>
            The object context
            </summary>
        </member>
        <member name="M:Rock.Data.UnitOfWorkScope.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Data.UnitOfWorkScope"/> class.
            </summary>
        </member>
        <member name="M:Rock.Data.UnitOfWorkScope.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Data.UnitOfWorkScope"/> class.
            </summary>
            <param name="saveAllChangesAtScopeEnd">if set to <c>true</c> changes should be saved at scope end.</param>
        </member>
        <member name="M:Rock.Data.UnitOfWorkScope.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Rock.Data.UnitOfWorkScope.SaveAllChangesAtScopeEnd">
            <summary>
            Gets or sets a value indicating whether all changes should be saved when scope ends.
            </summary>
            <value>
            	<c>true</c> if changes should be saved; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Rock.Data.UnitOfWorkScope.CurrentObjectContext">
            <summary>
            Gets the current object context.
            </summary>
        </member>
        <member name="T:Rock.Data.EFRepository`1">
            <summary>
            Repository for working with the Entity Framework
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Rock.Data.EFRepository`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Data.EFRepository`1"/> class.
            </summary>
        </member>
        <member name="M:Rock.Data.EFRepository`1.#ctor(System.Data.Entity.DbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Data.EFRepository`1"/> class.
            </summary>
            <param name="objectContext">The object context.</param>
        </member>
        <member name="M:Rock.Data.EFRepository`1.AsQueryable">
            <summary>
            An <see cref="T:System.Linq.IQueryable`1"/> list of entitities
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.EFRepository`1.GetAll">
            <summary>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> list of all entities
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.EFRepository`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> list of all entities that match the where clause
            </summary>
            <param name="where">
            <example>An example where clause: <c>t =&gt; t.Id == id</c></example>
            </param>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.EFRepository`1.Single(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Gets the only entity that matches the where clause
            </summary>
            <remarks>If more than one entity matches the where clause, and exception occurs</remarks>
            <param name="where">
            <example>An example where clause: <c>t => t.Id == id</c></example>
            </param>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.EFRepository`1.First(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Get's the first entity that matches the where clause
            </summary>
            <remarks>If an entity that matches the where clause does not exist, an exception occurs</remarks>
            <param name="where">
            <example>An example where clause: <c>t => t.Id == id</c></example>
            </param>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.EFRepository`1.FirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Get's the first entity that matches the where clause
            </summary>
            <remarks>If an entity that matches the where clause does not exist, a null value is returned</remarks>
            <param name="where">
            <example>An example where clause: <c>t => t.Id == id</c></example>
            </param>
            <returns></returns>
        </member>
        <member name="M:Rock.Data.EFRepository`1.Add(`0)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Rock.Data.EFRepository`1.Attach(`0)">
            <summary>
            Attaches the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Rock.Data.EFRepository`1.Delete(`0)">
            <summary>
            Deletes the specified entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Rock.Data.EFRepository`1.Save(System.Nullable{System.Int32})">
            <summary>
            Saves the entity and returns a list of any entity changes that 
            need to be logged
            </summary>
            <param name="PersonId">The id of the person making the change</param>
            <returns></returns>
        </member>
        <member name="P:Rock.Data.EFRepository`1.Context">
            <summary>
            Gets the context.
            </summary>
        </member>
        <member name="T:Rock.MelissaData.AddressCheck.RequestArray">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.RequestArray.TransmissionReference">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.RequestArray.CustomerID">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.RequestArray.OptAddressParsed">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.RequestArray.Record">
            <remarks/>
        </member>
        <member name="T:Rock.MelissaData.AddressCheck.RequestArrayRecord">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.RequestArrayRecord.RecordID">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.RequestArrayRecord.Company">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.RequestArrayRecord.LastName">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.RequestArrayRecord.Urbanization">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.RequestArrayRecord.AddressLine1">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.RequestArrayRecord.AddressLine2">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.RequestArrayRecord.Suite">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.RequestArrayRecord.City">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.RequestArrayRecord.State">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.RequestArrayRecord.Zip">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.RequestArrayRecord.Plus4">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.RequestArrayRecord.Country">
            <remarks/>
        </member>
        <member name="T:Rock.MelissaData.AddressCheck.ResponseArray">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArray.Version">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArray.TransmissionReference">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArray.Results">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArray.TotalRecords">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArray.Record">
            <remarks/>
        </member>
        <member name="T:Rock.MelissaData.AddressCheck.ResponseArrayRecord">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecord.RecordID">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecord.Results">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecord.Address">
            <remarks/>
        </member>
        <member name="T:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddress">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddress.Company">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddress.Urbanization">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddress.Address1">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddress.Address2">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddress.Suite">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddress.PrivateMailBox">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddress.City">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddress.State">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddress.Zip">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddress.Plus4">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddress.CarrierRoute">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddress.DeliveryPointCode">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddress.DeliveryPointCheckDigit">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddress.CongressionalDistrict">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddress.Type">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddress.Country">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddress.AddressKey">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddress.Parsed">
            <remarks/>
        </member>
        <member name="T:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressUrbanization">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressUrbanization.Name">
            <remarks/>
        </member>
        <member name="T:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressCity">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressCity.Name">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressCity.Abbreviation">
            <remarks/>
        </member>
        <member name="T:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressState">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressState.Name">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressState.Abbreviation">
            <remarks/>
        </member>
        <member name="T:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressType">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressType.Address">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressType.Zip">
            <remarks/>
        </member>
        <member name="T:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressTypeAddress">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressTypeAddress.Code">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressTypeAddress.Description">
            <remarks/>
        </member>
        <member name="T:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressTypeZip">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressTypeZip.Code">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressTypeZip.Description">
            <remarks/>
        </member>
        <member name="T:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressCountry">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressCountry.Abbreviation">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressCountry.Name">
            <remarks/>
        </member>
        <member name="T:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsed">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsed.StreetName">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsed.AddressRange">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsed.Suffix">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsed.Direction">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsed.Suite">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsed.PrivateMailbox">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsed.Garbage">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsed.RouteService">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsed.LockBox">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsed.DeliveryInstallation">
            <remarks/>
        </member>
        <member name="T:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsedDirection">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsedDirection.Post">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsedDirection.Pre">
            <remarks/>
        </member>
        <member name="T:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsedSuite">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsedSuite.Range">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsedSuite.Name">
            <remarks/>
        </member>
        <member name="T:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsedPrivateMailbox">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsedPrivateMailbox.Name">
            <remarks/>
        </member>
        <member name="P:Rock.MelissaData.AddressCheck.ResponseArrayRecordAddressParsedPrivateMailbox.Range">
            <remarks/>
        </member>
        <member name="T:Rock.ServiceObjects.GeoCoder.Location">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Location.Error">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Location.Latitude">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Location.Longitude">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Location.Zip">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Location.Tract">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Location.Block">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Location.Level">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Location.LevelDescription">
            <remarks/>
        </member>
        <member name="T:Rock.ServiceObjects.GeoCoder.Err">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Err.Desc">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Err.Number">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Err.Location">
            <remarks/>
        </member>
        <member name="T:Rock.ServiceObjects.GeoCoder.DistanceBetweenInfo">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.DistanceBetweenInfo.Error">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.DistanceBetweenInfo.MilesBetween">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.DistanceBetweenInfo.KilometersBetween">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.DistanceBetweenInfo.FeetBetween">
            <remarks/>
        </member>
        <member name="T:Rock.ServiceObjects.GeoCoder.DistanceToWaterInfo">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.DistanceToWaterInfo.Error">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.DistanceToWaterInfo.MilesToWater">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.DistanceToWaterInfo.Latitude">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.DistanceToWaterInfo.Longitude">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.DistanceToWaterInfo.ClosestWaterLatitude">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.DistanceToWaterInfo.ClosestWaterLongitude">
            <remarks/>
        </member>
        <member name="T:Rock.ServiceObjects.GeoCoder.ReverseAddress">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ReverseAddress.Error">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ReverseAddress.Address">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ReverseAddress.City">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ReverseAddress.State">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ReverseAddress.Zip">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ReverseAddress.County">
            <remarks/>
        </member>
        <member name="T:Rock.ServiceObjects.GeoCoder.GeocodeCityWorldwideInfo">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.GeocodeCityWorldwideInfo.City">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.GeocodeCityWorldwideInfo.Region">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.GeocodeCityWorldwideInfo.Country">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.GeocodeCityWorldwideInfo.Latitude">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.GeocodeCityWorldwideInfo.Longitude">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.GeocodeCityWorldwideInfo.Error">
            <remarks/>
        </member>
        <member name="T:Rock.ServiceObjects.GeoCoder.ZipCodeInfo">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.Error">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.City">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.State">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.County">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.AreaCode">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.CityAbbreviation">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.CityType">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.CountyFIPS">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.StateFIPS">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.TimeZone">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.DayLightSavings">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.MSA">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.MD">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.CBSA">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.PMSA">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.DMA">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.Latitude">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.Longitude">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.Zip">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.ZipCodeInfo.CityAlternativeName">
            <remarks/>
        </member>
        <member name="T:Rock.ServiceObjects.GeoCoder.Location_V3">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Location_V3.Error">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Location_V3.Latitude">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Location_V3.Longitude">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Location_V3.Zip">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Location_V3.Tract">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Location_V3.Block">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Location_V3.Level">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Location_V3.LevelDescription">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Location_V3.StateFIPS">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Location_V3.CountyFIPS">
            <remarks/>
        </member>
        <member name="P:Rock.ServiceObjects.GeoCoder.Location_V3.Debug">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.LicenseInfo">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.LicenseInfo.UnregisteredUser">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.LicenseInfo.RegisteredUser">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.UnregisteredUser">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.UnregisteredUser.EmailAddress">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.ServiceInfoRecord">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.ServiceInfoRecord.InfoKey">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.ServiceInfoRecord.InfoValue">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.SIWsResultArrayOfServiceInfoRecord">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SIWsResultArrayOfServiceInfoRecord.Results">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.SIWsOutputOfSIWsResultArrayOfServiceInfoRecord">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SIWsOutputOfSIWsResultArrayOfServiceInfoRecord.ServiceStatus">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SIWsOutputOfSIWsResultArrayOfServiceInfoRecord.ServiceResult">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.SIWsStatus">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SIWsStatus.StatusNbr">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SIWsStatus.StatusDescription">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.SIWsResultArrayOfMethodStatusRecord">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SIWsResultArrayOfMethodStatusRecord.Results">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.MethodStatusRecord">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.SIWsResultArrayOfSIWsStatus">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SIWsResultArrayOfSIWsStatus.Results">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.MethodStatusRecord.MethodName">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.SIWsOutputOfSIWsResultArrayOfMethodStatusRecord">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SIWsOutputOfSIWsResultArrayOfMethodStatusRecord.ServiceStatus">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SIWsOutputOfSIWsResultArrayOfMethodStatusRecord.ServiceResult">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.SIWsOutputOfMethodStatusRecord">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SIWsOutputOfMethodStatusRecord.ServiceStatus">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SIWsOutputOfMethodStatusRecord.ServiceResult">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.SIWsResultWithStatus">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SIWsResultWithStatus.ItemStatus">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.USAddressWithStatus">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddressWithStatus.Address">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.USAddress">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.Address">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.Address.AddressLine1">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.Address.AddressLine2">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.Address.StreetNumber">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.Address.Firm">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.Address.PreDirection">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.Address.StreetName">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.Address.StreetType">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.Address.PostDirection">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.Address.Extension">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.Address.ExtensionNumber">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.Address.Village">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.Address.City">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.Address.AddressStatus">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.State">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.Urbanization">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.ZIPPlus4">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.ZIPCode">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.ZIPAddOn">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.CarrierRoute">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.PMB">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.PMBDesignator">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.DeliveryPoint">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.DPCheckDigit">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.LACS">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.CMRA">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.DPV">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.DPVFootnote">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.RDI">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.RecordType">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.CongressDistrict">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.County">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.CountyNumber">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.StateNumber">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USAddress.GeoCode">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.USGeocode">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.Geocode">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.Geocode.Latitude">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.Geocode.Longitude">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USGeocode.CensusTract">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USGeocode.StateNumber">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USGeocode.CountyNumber">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USGeocode.BlockNumber">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USGeocode.BlockGroup">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.SIWsResultArrayOfUSAddressWithStatus">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SIWsResultArrayOfUSAddressWithStatus.Results">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.SIWsOutputOfSIWsResultArrayOfUSAddressWithStatus">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SIWsOutputOfSIWsResultArrayOfUSAddressWithStatus.ServiceStatus">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SIWsOutputOfSIWsResultArrayOfUSAddressWithStatus.ServiceResult">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.USBatchAddress">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USBatchAddress.AddressLine1">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USBatchAddress.AddressLine2">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USBatchAddress.CityStateZIPCode">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USBatchAddress.Firm">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.USBatchAddress.Urbanization">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.SubscriptionInfo">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SubscriptionInfo.LicenseStatusCode">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SubscriptionInfo.LicenseStatus">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SubscriptionInfo.LicenseActionCode">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SubscriptionInfo.LicenseAction">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SubscriptionInfo.RemainingHits">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SubscriptionInfo.Amount">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.RegisteredUser">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.RegisteredUser.UserID">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.RegisteredUser.Password">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.SIWsOutputOfUSAddress">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SIWsOutputOfUSAddress.ServiceStatus">
            <remarks/>
        </member>
        <member name="P:Rock.StrikeIron.USAddressVerification.SIWsOutputOfUSAddress.ServiceResult">
            <remarks/>
        </member>
        <member name="T:Rock.StrikeIron.USAddressVerification.CasingEnum">
            <remarks/>
        </member>
        <member name="F:Rock.StrikeIron.USAddressVerification.CasingEnum.UPPER">
            <remarks/>
        </member>
        <member name="F:Rock.StrikeIron.USAddressVerification.CasingEnum.LOWER">
            <remarks/>
        </member>
        <member name="F:Rock.StrikeIron.USAddressVerification.CasingEnum.PROPER">
            <remarks/>
        </member>
        <member name="T:Rock.TeleAtlas.Geocoding.NameValue">
            <remarks/>
        </member>
        <member name="P:Rock.TeleAtlas.Geocoding.NameValue.name">
            <remarks/>
        </member>
        <member name="P:Rock.TeleAtlas.Geocoding.NameValue.value">
            <remarks/>
        </member>
        <member name="T:Rock.TeleAtlas.Geocoding.Geocode">
            <remarks/>
        </member>
        <member name="P:Rock.TeleAtlas.Geocoding.Geocode.resultCode">
            <remarks/>
        </member>
        <member name="P:Rock.TeleAtlas.Geocoding.Geocode.mAttributes">
            <remarks/>
        </member>
        <member name="T:Rock.TeleAtlas.Geocoding.MatchType">
            <remarks/>
        </member>
        <member name="P:Rock.TeleAtlas.Geocoding.MatchType.name">
            <remarks/>
        </member>
        <member name="P:Rock.TeleAtlas.Geocoding.MatchType.description">
            <remarks/>
        </member>
        <member name="P:Rock.TeleAtlas.Geocoding.MatchType.id">
            <remarks/>
        </member>
        <member name="T:Rock.TeleAtlas.Geocoding.OutputField">
            <remarks/>
        </member>
        <member name="P:Rock.TeleAtlas.Geocoding.OutputField.name">
            <remarks/>
        </member>
        <member name="P:Rock.TeleAtlas.Geocoding.OutputField.description">
            <remarks/>
        </member>
        <member name="P:Rock.TeleAtlas.Geocoding.OutputField.type">
            <remarks/>
        </member>
        <member name="T:Rock.Data.IFeed">
            <summary>
            Represents a model that supports generating a feed
            </summary>
        </member>
        <member name="M:Rock.Data.IFeed.ReturnFeed(System.Int32,System.Int32,System.String,System.String@,System.String@)">
            <summary>
            Returns the feed.
            </summary>
            <param name="key">The key.</param>
            <param name="count">The count.</param>
            <param name="format">The format.</param>
            <param name="errorMessage">The error message.</param>
            <param name="contentType">Type of the content.</param>
            <returns></returns>
        </member>
        <member name="T:Rock.Jobs.JobLoadFailedException">
            <summary>
            Job failed to load exception
            </summary>
        </member>
        <member name="M:Rock.Jobs.JobLoadFailedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rock.Jobs.JobLoadFailedException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Rock.Web.UI.Validation.DataAnnotationValidator">
            <summary>
            Data Annotation Validator for validating based on data attributes
            </summary>
        </member>
        <member name="M:Rock.Web.UI.Validation.DataAnnotationValidator.EvaluateIsValid">
            <summary>
            When overridden in a derived class, this method contains the code to determine whether the value in the input control is valid.
            </summary>
            <returns>
            true if the value in the input control is valid; otherwise, false.
            </returns>
        </member>
        <member name="P:Rock.Web.UI.Validation.DataAnnotationValidator.SourceTypeName">
            <summary>
            The type of the source to check
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Validation.DataAnnotationValidator.PropertyName">
            <summary>
            The property that is annotated
            </summary>
        </member>
        <member name="P:Rock.Web.UI.Validation.DataAnnotationValidator.IsRequired">
            <summary>
            Gets a value indicating whether this <see cref="T:Rock.Web.UI.Validation.DataAnnotationValidator"/> is required.
            </summary>
            <value>
              <c>true</c> if required; otherwise, <c>false</c>.
            </value>
        </member>
    </members>
</doc>
