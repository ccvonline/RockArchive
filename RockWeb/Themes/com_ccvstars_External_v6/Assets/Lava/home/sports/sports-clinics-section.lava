{% comment %} 
    {% include '~~/Assets/Lava/home/sports/sports-clinics-section.lava' %}
{% endcomment %}

{% comment %} check for campus page parameter {% endcomment %}
{% assign campusParameter = PageParameter.Campus | Downcase %}

{% comment %} get the sport from the path {% endcomment %}
{% assign sport = 'Global' | Page:'Path' | Split:'/' | First %}

<div id="clinics" class="clinics-row hidden">
    <div class="rectangle">
        <h3 class="clinics-desktop">{{ 'Global' | Page:'Path' | Split:'/' | First }} Clinics</h3>

        <a id="singleCampus" href="/register?Sport={{ sport }}&Campus={{ campusParameter }}&SeasonType=clinic" class="btn btn-secondary hidden"><h6>More Info</h6></a>

        <div id="multipleCampuses" class="select-dropdown hidden">
            <button class="dropdown-toggle select-dropdown-button" type="button" data-toggle="dropdown"><h6>{{ selectButtonText | Default:'CHOOSE A CAMPUS' }}</h6><b class="fa fa-caret-down"></b></button>
            <ul id="campusesDropdown" class="dropdown-menu"></ul>
        </div>
    </div>
</div>

<script>
    // setup arrays
    var activeClinics = [];
    var availableCampuses = [];

    // check for campus parameter
    var specifiedCampus = "{{ campusParameter }}";

    // setup getUrl
    var getUrl = "/api/STARS/ActiveRegistrations?CalendarId=6";
    getUrl += `&sport={{ 'Global' | Page:'Path' | Split:'/' | First }}`;

    if ( specifiedCampus !== '' ) {
        getUrl += '&campusName=' + specifiedCampus;
    }

    getUrl += '&seasonType=clinic';
    getUrl += '&returnRegistrationData=true';

    // make api call
    $.get(getUrl, function(data, status) {
        if ( data.Message === 'Success') {
            // clinics exist
            activeClinics = data.Data;

            $(document).ready(function(){
                if ( activeClinics !== null && specifiedCampus === '' ) {   
                    // specific campus not specified                 
                    // hydrate availabe campuses
                    for (let i = 0; i < activeClinics.length; i++) {
                        if (!availableCampuses.includes(activeClinics[i].Campus)) {
                            availableCampuses.push(activeClinics[i].Campus)
                        }            
                    }
                
                    // add available campuses to dropdown
                    for (let i = 0; i < availableCampuses.length; i++) {
                        var li = document.createElement('li');
                        var a = document.createElement('a');

                        a.setAttribute('href', `/register?Sport={{ sport }}&Campus=` + availableCampuses[i].toLowerCase().replace(/\s/g,'-') + '&SeasonType=clinic' );
                        a.text = availableCampuses[i];

                        li.append(a);

                        $('#campusesDropdown').append(li);                    
                    }

                    // hide single button and show dropdown
                    $('#singleCampus').addClass('hidden');
                    $('#multipleCampuses').removeClass('hidden');
                } else {
                    // single campus specified
                    // hide dropdown and show single button
                    $('#multipleCampuses').addClass('hidden');
                    $('#singleCampus').removeClass('hidden');
                }

                // Success means api returned clinics, unhide clinics row
                if ( data.Message === 'Success') {
                    $('#clinics').removeClass('hidden');    
                }                
            });            
        }        
    });
</script>