<style>
    .page-background {
        background-image: unset;
        background-color: #000;
    }

    .main-feature {
        height: 120px;
        padding-top: 65px;
    }

    .visit-card, .arrived-form {
        box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 6px, rgba(0, 0, 0, 0.12) 0px 1px 4px;
        transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;
        border-radius: 5px;
        background-color: #FFFFFF;
        margin: 0 auto 20px auto;
        min-height: 200px;
        max-width: 600px;
    }

    .card-header {
        display: flex;
        justify-content: space-evenly;
        align-items: center;
        border-bottom: 1px solid #ddd;
        padding-bottom: 5px
    }

    .card-header h4, .details-content h5 {
        line-height: 100%;
        min-width: 150px;
        text-align: center;
    }

    .card-header i, .visit i {
        font-size: 40px;
        color: #7A1315;
        position: relative;
        z-index: 1;
    }

    .header-content {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .visit {
        color: #000;
        cursor: pointer;
        padding: 13px 18px;
        width: 100%;
        text-align: left;
        border: none;
        border-bottom: 1px solid #ddd;
        outline: none;
        transition: 0.4s;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .content {
        padding: 0 18px 20px 18px;
        background-color: #FFFFFF;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        overflow: hidden;
        width: 100%;
    }

    .content-form {
        overflow: unset;
        padding: 18px 20px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: flex-start;
    }

    .details-content {
        display: none;
    }

    .details-content h4, .details-content, .details-content h5, .details-content p {
        color: #545454;
        text-align: center;
    }

    .child {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .child-info {
        display: flex;
        justify-content: center;
    }

    .child-info p:first-of-type {
        margin-right: 10px;
    }

    .btn-arrived {
        margin-top: 40px;
        font-weight: normal;
        font-family: akrobat;
        color: #FFFFFF;
    }

    .no-visits {
        padding: 40px 0;
    }

    /* dropdowns */
    .custom-dropdown  { 
        list-style: none;
        height: 22px;
    }

    #ulCampuses
    {
        color: #7A1315;
        text-align: center;
        padding: 0;
        font-size: 2.28rem;
        font-family: akrobat;
        text-transform: uppercase;
        font-weight: 700;
    }

    #ulCampuses span {
        padding-left: 22px;
    }

    .custom-dropdown li:not(.init) { 
        width: 100%; 
        display: none; 
        background-color: #FFFFFF;
        color: #333;
        position: relative;
        top: 8px;
        left: -14px;
        border-left: 1px solid #e7e7e7;
        border-right: 1px solid #e7e7e7;
        font-size: 16px;
        z-index: 2;
        padding: 5px;
    }

    #ulCampusesForm li:not(.init), #ulServicesForm li:not(.init) {
        padding-left: 20px;
    }

    .custom-dropdown li:nth-child(2):not(.init) { 
        border-radius: 4px 4px 0 0;
    }

    .custom-dropdown li:last-child:not(.init) { 
        border-radius: 0 0 4px 4px;
        border-bottom: 1px solid #e7e7e7;
    }

    .custom-dropdown li:not(.init):hover, .custom-dropdown li.selected:not(.init) { 
        background-color: #7A1315; 
        color: #FFFFFF;
    }

    li.init { 
        cursor: pointer; 
    }

    li.init:focus {
        outline: none;
    }

    /* Arrived form */
    .arrived-form {
        min-height: 400px;
        display: flex;
        flex-direction: column;
    }

    .panel-close-button {
        align-self: flex-start;
        padding: 0 0 0 10px;
        font-size: 40px;
        color: #7A1315;
    }

    .arrived-form .card-header h4 {
        margin-top: -20px;
        width: 75%;
    }

    .arrived-form-control {
        width: 100%;
        margin-bottom: 10px;
    }

    .arrived-form-control p {
        margin: 0;
    }

    .arrived-form-input {
        border-bottom: 2px solid lightgrey;
    }

    #dpAttendedDate {
        padding-left: 40px;
        color: #545454;
        font-weight: normal;
        width: 100%;
        height: 22px;
        margin-bottom: 10px;
    }

    .has-error, .has-error p, .has-error input {
        color: red !important;
        font-style: italic;
    }

    .has-error input, .has-error ul {
        border: 2px solid red;
    }

    #pnlMessage {
        min-height: 200px;
    }

    .card-header-close {
        min-height: 30px;
        display: flex;
        justify-content: flex-end;
    }

    @media screen and (max-width: 768px) {
        .content h4 {
            font-size: 20px;
            line-height: 22px;
        }

        #ulCampusesForm li:not(.init), #ulServicesForm li:not(.init) { 
            width: 90%;
            left: 0;
        }

        #ulCampuses li:not(.init) {
            width: 90%;
            left: 5%;
        }
    }

    /* loading spinner */
    .loading {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 200px;
    }
    .lds-spinner {
        display: inline-block;
        position: relative;
        width: 64px;
        height: 64px;
    }

    .lds-spinner div {
        transform-origin: 32px 32px;
        animation: lds-spinner 1.2s linear infinite;
    }

    .lds-spinner div:after {
        content: " ";
        display: block;
        position: absolute;
        top: 3px;
        left: 29px;
        width: 5px;
        height: 14px;
        border-radius: 20%;
        background: #7A1315;
    }

    .lds-spinner div:nth-child(1) {
        transform: rotate(0deg);
        animation-delay: -1.1s;
    }

    .lds-spinner div:nth-child(2) {
        transform: rotate(30deg);
        animation-delay: -1s;
    }

    .lds-spinner div:nth-child(3) {
        transform: rotate(60deg);
        animation-delay: -0.9s;
    }

    .lds-spinner div:nth-child(4) {
        transform: rotate(90deg);
        animation-delay: -0.8s;
    }

    .lds-spinner div:nth-child(5) {
        transform: rotate(120deg);
        animation-delay: -0.7s;
    }

    .lds-spinner div:nth-child(6) {
        transform: rotate(150deg);
        animation-delay: -0.6s;
    }

    .lds-spinner div:nth-child(7) {
        transform: rotate(180deg);
        animation-delay: -0.5s;
    }

    .lds-spinner div:nth-child(8) {
        transform: rotate(210deg);
        animation-delay: -0.4s;
    }

    .lds-spinner div:nth-child(9) {
        transform: rotate(240deg);
        animation-delay: -0.3s;
    }

    .lds-spinner div:nth-child(10) {
        transform: rotate(270deg);
        animation-delay: -0.2s;
    }

    .lds-spinner div:nth-child(11) {
        transform: rotate(300deg);
        animation-delay: -0.1s;
    }

    .lds-spinner div:nth-child(12) {
        transform: rotate(330deg);
        animation-delay: 0s;
    }

    @keyframes lds-spinner {
        0% {
            opacity: 1;
        }
        100% {
            opacity: 0;
        }
    }
    /* end loading spinner */
</style>

{% comment %} yes we need all these div's {% endcomment %}
<div id="pnlFormLoading" class="visit-card loading">
    <div class="lds-spinner"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
</div>

<div id="pnlVisits" class="hidden">
    <div id="divVisitsCard" class="visit-card">
        <ul id="ulCampuses" class="custom-dropdown">
            <li class="init"><span>Select A Campus</span><i class="mdi mdi-chevron-down"></i></li>
            <li data-value="-1">All Campuses</li>
        </ul>
        <div class="card-header">
            <i onclick="previousDay()" class="mdi mdi-chevron-left"></i>
            <div class="header-content">
                <h4 id="headerDate">Date</h4>
            </div>
            <i onclick="nextDay()" class="mdi mdi-chevron-right"></i>
        </div>
        <div id="cardContent" class="content"></div>
    </div>
</div>

<div id="pnlArrivedForm" class="arrived-form hidden">
    <i class="mdi mdi-chevron-left panel-close-button" aria-hidden="true" onclick="showPanel('#pnlVisits')"></i>
    <div class="card-header">
        <h4></h4>
    </div>
    <div class="content content-form">
        <div class="arrived-form-control">
            <p>Campus:</p>
            <ul id="ulCampusesForm" class="arrived-form-input custom-dropdown">
                <li class="init">Select A Campus</li>
            </ul>
        </div>

        <div class="arrived-form-control">
            <p>Date:</p>
            <p style="width: 100%;">
                <input type="text" id="dpAttendedDate" class="arrived-form-input">
            </p>
        </div>

        <div class="arrived-form-control">
            <p>Service Time:</p>
            <ul id="ulServicesForm" class="arrived-form-input custom-dropdown">
                <li class="init">Select A Service</li>
            </ul>
        </div>
        
        <input type="hidden" id="hfVisitId" name="hfVisitId" value="">
        
        <div id="btnProcessArrival" class="btn btn-primary btn-arrived" onclick="recordAttended()">Save</div>

    </div>
</div>

<div id="pnlMessage" class="arrived-form hidden">
    <div class="card-header-close">
        <i class="fa fa-times panel-close-button hidden" aria-hidden="true" onclick="showPanel('#pnlVisits')"></i>
    </div>
    <div class="card-header">
        <h4></h4>
    </div>
    <div class="content content-form">
        <p></p>
    </div>
</div>

<script>
    // set defaults
    var cardDate = moment();
    var campusId = "{% assign personCampus = CurrentPerson | Campus %}{{ personCampus.Id }}";
    var scheduledVisits;
    var campuses;

    // ajax call for visits data
    var startDate = moment().subtract(4, "w").format("MM-DD-YYYY");
    var endDate = moment().add(4, "w").format("MM-DD-YYYY");

    var getUrl = "/api/PlanAVisit/ScheduledVisits";
    getUrl += "?startDate=" + startDate;
    getUrl += "&endDate=" + endDate;

    $.get(getUrl, function(data, status){
        scheduledVisits = data.Data.ScheduledVisits;
        campuses = data.Data.Campuses;

        if ( campuses.length === 0 ) {
            displayMessage("Failed to Load","We encountered an issue loading campus data. Please refresh the page to try again.", false);
        } else {
            $(window).ready(function(){
                initializeVisitsCard();
            });
        }
    });

    function initializeVisitsCard() {
        // load campuses dropdowns
        buildCampusesDropdowns();
        
        // initial render of visits
        renderVisitsCard( true );
        
        // set campus
        $('#ulCampuses li[data-value="' + campusId + '"]').addClass("selected");
        $("#ulCampuses").children(".init").children("span").html($('#ulCampuses li[data-value="' + campusId + '"]').html());

        // show/hide campuses dropdown click event
        $("#ulCampuses").on("click", ".init", function() {
            $(this).closest("#ulCampuses").children("li:not(.init)").toggle();
        });

        // handle selected item from campuses dropdown
        $("#ulCampuses").on("click", "li:not(.init)", function() {
            // set campusId from the data-value of the item selected
            campusId = $(this).data("value");

            // get the items
            var campusesItems = $("#ulCampuses").children("li:not(.init)");

            // deselect previous selected item
            campusesItems.removeClass("selected");

            // select new item
            $(this).addClass("selected");

            // update button text to selected item
            $("#ulCampuses").children(".init").children("span").html($(this).html());

            // hide dropdown
            campusesItems.toggle();

            // render visits card
            renderVisitsCard( true );
        });

        // show/hide campuses form dropdown click event
        $("#ulCampusesForm").on("click", ".init", function() {
            $(this).closest("#ulCampusesForm").children("li:not(.init)").toggle();

            // ensure services form dropdown is hidden
            var servicesFormItems = $("#ulServicesForm").children("li:not(.init)");
            servicesFormItems.hide();
        });

        // handle selected item from dropdown
        $("#ulCampusesForm").on("click", "li:not(.init)", function() {
            // get selected value and selected date 
            var selectedCampusId = $(this).data('value');
            var selectedDate = $('#dpAttendedDate').datepicker( "getDate" );

            buildServiceTimeDropdown( selectedCampusId, selectedDate.format('dddd') );

            // get the items
            var campusesFormItems = $("#ulCampusesForm").children("li:not(.init)");

            // deselect previous selected item
            campusesFormItems.removeClass("selected");

            // select new item
            $(this).addClass("selected");

            // update button text to selected item
            $("#ulCampusesForm").children(".init").html($(this).html());

            // hide dropdown
            campusesFormItems.toggle();
        });

        // show/hide services form dropdown click event
        $("#ulServicesForm").on("click", ".init", function() {
            $(this).closest("#ulServicesForm").children("li:not(.init)").toggle();

            // ensure campuses form dropdown is hidden
            var campusesFormItems = $("#ulCampusesForm").children("li:not(.init)");
            campusesFormItems.hide();
        });

        // handle selected item from dropdown
        $("#ulServicesForm").on("click", "li:not(.init)", function() {
            // get the items
            var servicesFormItems = $("#ulServicesForm").children("li:not(.init)");

            // deselect previous selected item
            servicesFormItems.removeClass("selected");

            // select new item
            $(this).addClass("selected");

            // update button text to selected item
            $("#ulServicesForm").children(".init").html($(this).html());

            // hide dropdown
            servicesFormItems.toggle();
        });

        // initialize datepicker
        $("#dpAttendedDate").datepicker("setDate",cardDate._d);

        $("#dpAttendedDate").on("click", function() {
            // ensure dropdowns are hidden
            var servicesFormItems = $("#ulServicesForm").children("li:not(.init)");
            servicesFormItems.hide();

            var campusesFormItems = $("#ulCampusesForm").children("li:not(.init)");
            campusesFormItems.hide();
        });

        // handle date change
        $("#dpAttendedDate").on("change", function() {
            var selectedCampusId = $('#ulCampusesForm li.selected').data("value");
            var selectedDate = $(this).datepicker('getDate');

            if ( selectedCampusId && selectedDate ) {
                // rebuild the service times dropdown
                // to ensure we have valid service times for campus / date selected
                buildServiceTimeDropdown( selectedCampusId, selectedDate.format("dddd"));
            }
        });
    }

    function nextDay() {
        cardDate = cardDate.add(1, 'days');

        renderVisitsCard( true );
    }

    function previousDay() {
        cardDate = cardDate.add(-1, 'days');

        renderVisitsCard( true );
    }

    function renderVisitsCard( showVisitsCard ) {
        var itemsProcessed = 0;
        var hasVisits = false;
        var visitItemHTML = "";

        // update date title
        $('#headerDate').text(cardDate.format("MM/DD/YYYY"));

        // ensure card is blank before proceeding
        $('#cardContent').html("");

        // get list of visits to display
        // -1 = display all campuses
        const visitsToDisplay = scheduledVisits.filter( scheduledVisit => scheduledVisit.ScheduledDate == cardDate.format("MM/DD/YYYY") && ( scheduledVisit.ScheduledCampusId == campusId || campusId == "-1") );

        // sort list
        visitsToDisplay.sort(sortByAdultOneFirstName);        

        // loop through visits to display (foreach does not guarentee squential processing)
        for (let i = 0; i < visitsToDisplay.length; i++) {
            const visit = visitsToDisplay[i];
            
            hasVisits = true;

            // family name
            var familyName = visit.AdultOneFirstName + " " + visit.AdultOneLastName;

            if ( visit.AdultTwoFirstName != "" ) {
                // change family name to include adult two                   
                if ( visit.AdultOneLastName !== visit.AdultTwoLastName ) {
                    // lastnames are different
                    familyName = visit.AdultOneFirstName + " " + visit.AdultOneLastName + " & " + visit.AdultTwoFirstName + " " + visit.AdultTwoLastName;
                } else {
                    // lastnames are same
                    familyName = visit.AdultOneFirstName + " & " + visit.AdultTwoFirstName + " " + visit.AdultTwoLastName;
                }                    
            }

            // reset html to empty
            visitHtml = ""

            // family name 
            visitHtml += '<div id="divVisit_' + visit.Id + '" class="visit">';
                visitHtml += "<h4>" + familyName + "</h4>";
                visitHtml += '<i id="tglIconVisit_' + visit.Id + '" class="mdi mdi-chevron-down"></i>';
            visitHtml += "</div>";

            // family content
            visitHtml += '<div id="divVisitContent_' + visit.Id + '" class="content details-content">'                
                visitHtml += "<h4>Scheduled Service Time:</h4>";
                visitHtml += "<p>" + visit.ScheduledCampusName + "<br />" + visit.ScheduledServiceName + "</p>";

                if ( visit.AdultOneMobileNumber !== "" ) {
                    visitHtml += "<h4>Mobile Number:</h4>";
                    visitHtml += "<p>" + visit.AdultOneMobileNumber + "</p>";
                }
                    
                if ( visit.Children.length > 0 ) {
                    visitHtml += "<h4>Children:</h4>";

                    visit.Children.sort(sortByAge);

                    for (let j = 0; j < visit.Children.length; j++) {
                        const child = visit.Children[j];
                        
                        visitHtml += '<div class="child">';
                            visitHtml += "<h5>" + child.FirstName + " <strong>(" + child.Age + ")</strong></h5>";
                            visitHtml += '<div class="child-info">'
                                if ( child.Grade !== "" ) {
                                    visitHtml += '<p>' + child.Grade + "</p>"
                                }
                                visitHtml += "<p>Birthday: " + child.BirthDate + "</p>"
                            visitHtml += "</div>";
                        visitHtml += "</div>"
                    }
                }

                if ( visit.AttendedDate === "" ) {
                    visitHtml += '<div id="btnArrived_' + visit.Id + '" class="btn btn-primary btn-arrived" onclick="showArrivedForm( ' + visit.Id + ',' + visit.ScheduledCampusId + ',' + visit.ScheduledServiceId + ',\'' + familyName + '\' )">Arrived</div>';                    
                } else {
                    visitHtml += '<div class="btn btn-secondary btn-arrived" disabled>Attended on ' + visit.AttendedDate + '</div>';                    
                }
                                
            visitHtml += "</div>"

            // appending the html here so the following jquery can attach
            $('#cardContent').append( visitHtml);            

            $('#divVisit_' + visit.Id).on('click', function() {
                $('#divVisitContent_' + visit.Id).toggle();
                $('#tglIconVisit_' + visit.Id).toggleClass('mdi-chevron-down');
                $('#tglIconVisit_' + visit.Id).toggleClass('mdi-chevron-up');
            });

             itemsProcessed++;
        }

        if (hasVisits == false) {
            // campus selected has no visits for date selected
            visitHtml = '<div class="no-visits"><h5>No visits scheduled</h5></div>';

            $('#cardContent').append( visitHtml);
        }

        if ( showVisitsCard ) {
            // ensure all items processed before unhiding          
            if ( itemsProcessed === visitsToDisplay.length ) {
                showPanel("#pnlVisits");
            }
        }
    }

    // sort compare for adults
    function sortByAdultOneFirstName(a, b) {
        var nameOne = a.AdultOneFirstName.toLowerCase();
        var nameTwo = b.AdultOneFirstName.toLowerCase();

        return ( ( nameOne < nameTwo ) ? -1 : ( ( nameOne > nameTwo ) ? 1 : 0 ) );
    }

    // sort compare for children
    function sortByAge(a, b) {
        var ageOne = a.Age;
        var ageTwo = b.Age;

        return ( ( ageOne < ageTwo ) ? -1 : ( ( ageOne > ageTwo ) ? 1 : 0 ) );
    }  

    // render campuses dropdowns
    function buildCampusesDropdowns() {
        for (let i = 0; i < campuses.length; i++) {
            var liCampus = '<li data-value="' + campuses[i].Id + '">' + campuses[i].Name + "</li>";
            
            $('#ulCampuses').append(liCampus);
            $('#ulCampusesForm').append(liCampus);            
        }
    }

    // render service time drop down
    function buildServiceTimeDropdown( campusId, serviceDay ) {
        // clear out existing items
        $("#ulServicesForm").children("li:not(.init)").remove();

        // get service times for the selected campus
        const campus = campuses.find( campus => campus.Id == campusId );
        const availableServiceTimes = campus.ServiceTimes.filter( serviceTime => serviceTime.Day === serviceDay );

        // add each service time to the ul dropdown
        if ( availableServiceTimes.length > 0 ) {
            for (let i = 0; i < availableServiceTimes.length; i++) {
                const liServiceTime = '<li data-value="' + availableServiceTimes[i].ScheduleId + '">' + availableServiceTimes[i].Time + "</li>";

                $('#ulServicesForm').append(liServiceTime);
            }
        } else {
            const liServiceTime = '<li data-value="-1">No Services Available</li>';

            $('#ulServicesForm').append(liServiceTime);
        }

        // default to the first service time
        $('#ulServicesForm li:not(.init)').first().addClass("selected");
        $("#ulServicesForm").children(".init").html($('#ulServicesForm li:not(.init)').first().html());
    }    

    function showArrivedForm( visitid, scheduledCampusId, scheduledServiceId, familyName ) {
        // set title
        $('#pnlArrivedForm .card-header h4').text(familyName);

        // set date to current card date
        $( "#dpAttendedDate" ).datepicker( "setDate", cardDate._d );

        // set campus to current card campus
        $('#ulCampusesForm li').removeClass("selected");        
        $('#ulCampusesForm li[data-value="' + scheduledCampusId + '"]').addClass("selected");
        $("#ulCampusesForm").children(".init").html($('#ulCampusesForm li[data-value="' + scheduledCampusId + '"]').html());

        // rebuild service time dropdown and then set to scheduledServiceId
        buildServiceTimeDropdown( scheduledCampusId, cardDate.format("dddd"));
        $('#ulServicesForm li[data-value="' + scheduledServiceId + '"]').addClass("selected");
        $("#ulServicesForm").children(".init").html($('#ulServicesForm li[data-value="' + scheduledServiceId + '"]').html());

        // set visit id in hidden field for save post
        $('#hfVisitId').val(visitid);

        // show arrived form
        showPanel("#pnlArrivedForm")
    }

    function recordAttended() {
        // ensure fields are valid
        if ( validateAttendedForm() ) {
            showPanel('#pnlFormLoading');

            // get the values for the post
            const visitId = $('#hfVisitId').val();
            const attendedCampusId = $('#ulCampusesForm li.selected').data("value");
            const attendedScheduleId = $('#ulServicesForm li.selected').data("value");
            const attendedDate = $("#dpAttendedDate").datepicker("getDate").format("MM-dd-yyyy");

            // build post url
            var postUrl = "/api/PlanAVisit/Attended";
            postUrl += "?visitId=" + $('#hfVisitId').val();
            postUrl += "&attendedCampusId=" + attendedCampusId;
            postUrl += "&attendedScheduleId=" + $('#ulServicesForm li.selected').data("value");
            postUrl += "&attendedDate=" + $("#dpAttendedDate").datepicker("getDate").format("MM-dd-yyyy");
            postUrl += "&personAliasId={{CurrentPerson.PrimaryAliasId}}";

            $.post(postUrl,function( postData, postStatus ) {
                if (postData.Message === "Success") {
                    // success, refetch visits data
                    $.get(getUrl, function(getData, getStatus){
                        scheduledVisits = getData.Data.ScheduledVisits;
                        campuses = getData.Data.Campuses;                        

                        renderVisitsCard( false );

                        displayMessage("Success", "Visit information successfuly updated", true);
                    });
                } else {
                    // failed
                    var messageTitle = "";

                    switch (postData.Message) {
                        case "AlreadyAttended":
                            messageTitle = "Already Attended";
                            break;
                        case "VisitNotFound":
                            messageTitle = "Visit Not Found";
                            break;                    
                        default:
                            // default to message from post
                            messageTitle = postData.Message;
                            break;
                    }

                    displayMessage(messageTitle,postData.Data, true);
                }
            });
        }
    }

    // validate attended form is ready for submit
    function validateAttendedForm() {
        const attendedScheduleId = $('#ulServicesForm li.selected').data("value");
        const attendedDate = $("#dpAttendedDate").datepicker("getDate");

        if ( attendedScheduleId == "-1") {
            // no schedule selected
            $('#ulServicesForm').parent('.arrived-form-control').addClass("has-error");
        } else {
            // schedule selected
            $('#ulServicesForm').parent('.arrived-form-control').removeClass("has-error");
        }

        if ( !attendedDate ) {
            // no date selected
            $("#dpAttendedDate").parent('p').parent('.arrived-form-control').addClass("has-error");
        } else {
            // date selected
            $("#dpAttendedDate").parent('p').parent('.arrived-form-control').removeClass("has-error");
        }

        if (!$(".has-error")[0]) {
            // no errors found, ready for submit
            return true;
        }

        // default fail
        return false;
    }

    // display message
    function displayMessage( title, message, showCloseButton ) {
        if ( showCloseButton ) {
            $('#pnlMessage .panel-close-button').removeClass("hidden");
        } else {
            $('#pnlMessage .panel-close-button').addClass("hidden");
        }

        $('#pnlMessage h4').text(title);        
        $('#pnlMessage p').text(message);

        showPanel("#pnlMessage");
    }

    // show panel
    function showPanel( panel ) {
        hideAllPanels();

        window.scrollTo(0,0);

        $(panel).removeClass("hidden");
    }

    // hide all panels
    function hideAllPanels() {
        $('#pnlVisits').addClass("hidden");
        $('#pnlFormLoading').addClass("hidden");
        $('#pnlArrivedForm').addClass("hidden");
        $('#pnlMessage').addClass("hidden");
    }
</script>
