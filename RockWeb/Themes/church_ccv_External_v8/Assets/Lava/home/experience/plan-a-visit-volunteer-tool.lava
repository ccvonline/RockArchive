<style>
    .campus-actions {
        display: flex;
        justify-content: center;
        max-width: 600px;
        margin: 0 auto 20px auto;
    }

    .visit-card, .arrived-form {
        box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 6px, rgba(0, 0, 0, 0.12) 0px 1px 4px;
        transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;
        border-radius: 5px;
        background-color: #FFFFFF;
        margin: 0 auto 20px auto;
        min-height: 200px;
        max-width: 600px;
    }

    .visit-card i {
        font-size: 32px;
        line-height: 34px;
        color: #7A1315;
    }

    .card-header {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 75px;
        border-bottom: 1px solid #ddd;
    }

    .card-header h4, h5 {
        padding: 2px 20px;
        line-height: 100%;
    }

    .card-header i {
        font-size: 40px;
        line-height: 42px;
    }

    .header-content {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .visit {
        color: #000;
        cursor: pointer;
        padding: 13px 18px;
        width: 100%;
        text-align: left;
        border: none;
        border-bottom: 1px solid #ddd;
        outline: none;
        transition: 0.4s;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }   

    .content {
        padding: 0 18px 20px 18px;
        background-color: #FFFFFF;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        overflow: hidden;
        width: 100%;
    }

    .content-form {
        overflow: unset;
        padding: 18px 20px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: flex-start;
    }

    .details-content {
        display: none;
    }

    .details-content h4, .details-content, h5, .details-content p {
        color: #7c7c7c;
        text-align: center;
    }

    .child {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .child-info {
        display: flex;
        justify-content: center;
    }

    .child-info p:first-of-type {
        margin-right: 10px;
    }

    .btn-arrived {
        margin-top: 40px;
        font-weight: normal;
        font-family: akrobat;
        color: #FFFFFF;
    }

    .no-visits {
        padding: 40px 0;
    }

    /* dropdowns */
    .custom-dropdown  { 
        height: 22px;
        list-style: none;
    }

    #ulCampuses
    {
        height: 38px;
        background-color: #7A1315;
        border-color: #7A1315;
    }

    .custom-dropdown li:not(.init) { 
        width: 100%; 
        display: none; 
        background-color: #FFFFFF;
        color: #333;
        position: relative;
        top: 8px;
        left: -14px;
        border-left: 1px solid #e7e7e7;
        border-right: 1px solid #e7e7e7;
    }

    #ulCampusesForm li:not(.init), #ulServicesForm li:not(.init) {
        padding-left: 20px;
    }

    .custom-dropdown li:nth-child(2):not(.init) { 
        border-radius: 4px 4px 0 0;
    }

    .custom-dropdown li:last-child:not(.init) { 
        border-radius: 0 0 4px 4px;
        border-bottom: 1px solid #e7e7e7;
    }

    .custom-dropdown li:not(.init):hover, .custom-dropdown li.selected:not(.init) { 
        background-color: #7A1315; 
        color: #FFFFFF;
    }

    li.init { 
        cursor: pointer; 
    }

    li.init:focus {
        outline: none;
    }

    /* Arrived form */
    .arrived-form {
        display: none;
    }

    .arrived-form {
        min-height: 400px;
    }

    .arrived-form-control {
        border-bottom: 2px solid lightgrey;
        width: 100%;
    }

    #dpAttendedDate {
        padding-left: 40px;
        color: #7c7c7c;
        font-weight: normal;
    }

    @media screen and (max-width: 768px) {
        .content h4 {
            font-size: 20px;
            line-height: 22px;
        }

        #ulCampuses li:not(.init), #ulCampusesForm li:not(.init), #ulServicesForm li:not(.init) { 
            width: 100%;
            left: 0;
        }
    }
</style>

<div id="btnAttended" class="btn btn-primary btn-arrived" onclick="showArrivedForm()">Arrived</div>

<div id="divVisits" class="hidden">
    <div class="campus-actions">
        <ul id="ulCampuses" class="btn btn-primary custom-dropdown">
            <li class="init">Select A Campus</li>
            <li data-value="-1">All Campuses</li>
        </ul>
    </div>
    <div class="visit-card">
        <div class="card-header">
            <i onclick="previousDay()" class="mdi mdi-chevron-left"></i>
            <div class="header-content">
                <h4 id="headerDate">Date</h4>
            </div>
            <i onclick="nextDay()" class="mdi mdi-chevron-right"></i>
        </div>
        <div id="cardContent" class="content"></div>
    </div>
</div>

<div id="divArrivedForm" class="arrived-form">
    <div class="card-header">
        <h4>What service is being attended?</h4>
    </div>
    <div class="content content-form">
        <p>Campus</p>
        <ul id="ulCampusesForm" class="arrived-form-control custom-dropdown">
            <li class="init">Select A Campus</li>
        </ul>

        <p>Date:</p>
        <p style="width: 100%;">
            <input type="text" id="dpAttendedDate" class="arrived-form-control">
        </p>

        <p>Service Time:</p>
        <ul id="ulServicesForm" class="arrived-form-control custom-dropdown">
            <li class="init">Select A Service</li>
        </ul>

        <input type="hidden" id="hfVisitId" name="hfVisitId" value="">

        <div id="btnProcessArrival" class="btn btn-primary btn-arrived" onclick="recordAttended()">Save</div>

    </div>

</div>

<script>
    // default to todays date
    var cardDate = moment();

    // default to campus in context
    var campusId = "{{ Context.Campus.Id }}";

    // build visit data
    var visitData = buildVisitDataObject();

    function pageLoad() {
        // load campuses dropdown
        buildCampusesDropdown();
        
        // initial render of visits
        renderVisitsCard();
        
        // default selected item to campus in context
        $("#ulCampuses").children(".init").html($('li[data-value="' + campusId + '"]').html());

        // show/hide campuses form dropdown click event
        $("#ulCampuses").on("click", ".init", function() {
            $(this).closest("#ulCampuses").children("li:not(.init)").toggle();
        });

        // handle selected item from dropdown
        var allOptionsCampuses = $("#ulCampuses").children("li:not(.init)");

        $("#ulCampuses").on("click", "li:not(.init)", function() {
            // set campusId from the data-value of the item selected
            campusId = $(this).data("value");

            // deselect previous selected item
            allOptionsCampuses.removeClass("selected");

            // select new item
            $(this).addClass("selected");

            // update button text to selected item
            $("#ulCampuses").children(".init").html($(this).html());

            // hide dropdown
            allOptionsCampuses.toggle();

            // render visits card
            renderVisitsCard();
        });

        // show/hide campuses form dropdown click event
        $("#ulCampusesForm").on("click", ".init", function() {
            $(this).closest("#ulCampusesForm").children("li:not(.init)").toggle();
        });

        // handle selected item from dropdown
        var allOptionsCampusesForm = $("#ulCampusesForm").children("li:not(.init)");

        $("#ulCampusesForm").on("click", "li:not(.init)", function() {
            // deselect previous selected item
            allOptionsCampusesForm.removeClass("selected");

            // select new item
            $(this).addClass("selected");

            // update button text to selected item
            $("#ulCampusesForm").children(".init").html($(this).html());

            // hide dropdown
            allOptionsCampusesForm.toggle();
        });

        // show/hide services form dropdown click event
        $("#ulServicesForm").on("click", ".init", function() {
            $(this).closest("#ulServicesForm").children("li:not(.init)").toggle();
        });

        // handle selected item from dropdown
        var allOptionsServicesForm = $("#ulServicesForm").children("li:not(.init)");

        $("#ulServicesForm").on("click", "li:not(.init)", function() {
            // deselect previous selected item
            allOptionsServicesForm.removeClass("selected");

            // select new item
            $(this).addClass("selected");

            // update button text to selected item
            $("#ulServicesForm").children(".init").html($(this).html());

            // hide dropdown
            allOptionsServicesForm.toggle();
        });

        // initialize datepicker
        $( "#dpAttendedDate" ).datepicker();
    }

    function sortByAdultOneFirstName(a, b) {
        var nameOne = a.AdultOneFirstName.toLowerCase();
        var nameTwo = b.AdultOneFirstName.toLowerCase();

        return ( ( nameOne < nameTwo ) ? -1 : ( ( nameOne > nameTwo ) ? 1 : 0 ) );
    }

    function nextDay() {
        cardDate = cardDate.add(1, 'days');

        // render card
        renderVisitsCard();
    }

    function previousDay() {
        cardDate = cardDate.add(-1, 'days');

        // render card
        renderVisitsCard();
    }

    function renderVisitsCard() {
        var itemsProcessed = 0;
        var hasVisits = false;
        var visitItemHTML = "";

        // update date title
        $('#headerDate').text(cardDate.format("MM/DD/YYYY"));

        // ensure card is blank before proceeding
        $('#cardContent').html("");

        // sort visit data by family name
        visitData.sort(sortByAdultOneFirstName);

        // loop through all the visits ( javascript foreach is not guarenteed to execute in order, so using regular for loop )
        for (let i = 0; i < visitData.length; i++) {
            const visitItem = visitData[i];
            
            // display the visit if it matches selected campus or if all campuses are selected. 
            // -1 is value of "All Campuses" select item
            if ( ( campusId == "-1" || visitItem.ScheduledCampusId == campusId ) && visitItem.ScheduledDate == cardDate.format("MM/DD/YYYY") ) {
                hasVisits = true;

                // build family name
                var familyName = visitItem.AdultOneFirstName;

                if ( visitItem.AdultTwoFirstName != "" ) {
                    // add adult two to family name
                    familyName = familyName + " & " + visitItem.AdultTwoFirstName;
                }

                familyName = familyName + " " + visitItem.FamilyName;

                // reset html to empty
                visitItemHTML = ""

                // family name 
                visitItemHTML += '<div id="divVisit_' + visitItem.Id + '" class="visit">';
                    visitItemHTML += "<h4>" + familyName + "</h4>";
                    visitItemHTML += '<i id="tglIconVisit_' + visitItem.Id + '" class="mdi mdi-chevron-down"></i>';
                visitItemHTML += "</div>";

                // family content
                visitItemHTML += '<div id="divVisitContent_' + visitItem.Id + '" class="content details-content">'                
                    visitItemHTML += "<h4>Scheduled Service Time:</h4>";
                    visitItemHTML += "<p>" + visitItem.ScheduledCampusName + "<br />" + visitItem.ScheduledServiceName + "</p>";

                    visitItemHTML += "<h4>Mobile Number:</h4>";
                    visitItemHTML += "<p>" + visitItem.AdultOneMobileNumber + "</p>";
                        
                    if ( visitItem.BringingChildren === "true" ) {
                        visitItemHTML += "<h4>Children:</h4>";

                        visitItem.Children.forEach(function(child) {
                            visitItemHTML += '<div class="child">';
                                visitItemHTML += "<h5>" + child.FirstName + " <strong>(" + child.Age + ")</strong></h5>";
                                visitItemHTML += '<div class="child-info">'
                                    if ( child.Grade !== "" ) {
                                        visitItemHTML += '<p>Grade: ' + child.Grade + "</p>"
                                    }
                                    visitItemHTML += "<p>Birthday: " + child.Birthdate + "</p>"
                                visitItemHTML += "</div>";
                            visitItemHTML += "</div>"
                        });                        
                    }

                    if ( visitItem.AttendedDate === "" ) {
                        visitItemHTML += '<div id="btnArrived_' + visitItem.Id + '" class="btn btn-primary btn-arrived" onclick="showArrivedForm( ' + visitItem.Id + ' )">Arrived</div>';                    
                    } else {
                        visitItemHTML += '<div class="btn btn-secondary btn-arrived" disabled>Attended on ' + visitItem.AttendedDate + '</div>';                    
                    }


                                   
                visitItemHTML += "</div>"

                // need to append the html here so the following jquery can attach
                $('#cardContent').append( visitItemHTML);            

                $('#divVisit_' + visitItem.Id).on('click', function() {
                    $('#divVisitContent_' + visitItem.Id).toggle();
                    $('#tglIconVisit_' + visitItem.Id).toggleClass('mdi-chevron-down');
                    $('#tglIconVisit_' + visitItem.Id).toggleClass('mdi-chevron-up');
                });
            }

             itemsProcessed++;
        }

        // unhide the visits card once all items processed           
        if ( itemsProcessed === visitData.length ) {
            $('#divVisits').removeClass("hidden");
        }

        if (hasVisits == false) {
            // campus selected has no visits for date selected
            visitItemHTML = '<div class="no-visits"><h5>No visits scheduled</h5></div>';0

            $('#cardContent').append( visitItemHTML);
        }
    }

    // populate campuses object
    function buildCampusesDropdown() {
        {% for campus in Campuses %}
            {% if campus.IsActive %}
                var liCampus = '<li data-value="{{ campus.Id }}">{{ campus.Name }}</li>';

                $('#ulCampuses').append(liCampus);
                $('#ulCampusesForm').append(liCampus);
            {% endif %}
        {% endfor %}
    }

    // populate visit object
    function buildVisitDataObject() {
        var visitsObject = [];

        {% for visit in Visits %}
            {% assign adultOne = visit.AdultOnePersonAliasId | PersonByAliasId %}
            {% assign adultTwo = visit.AdultTwoPersonAliasId | PersonByAliasId %}
            
            var newVisit = {
                Id: "{{ visit.Id }}",
                FamilyName: "{{ visit.FamilyName }}",
                AdultOneFirstName: "{{ adultOne.NickName }}",
                AdultTwoFirstName: "{{ adultTwo.NickName }}",
                AdultOneMobileNumber: "{{ adultOne | PhoneNumber:'Mobile' }}",
                ScheduledCampusId: "{{ visit.ScheduledCampusId }}",
                ScheduledCampusName: "{{ visit.ScheduledCampusName }}",
                BringingChildren: "{{ visit.BringingChildren }}",
                Children: [],
                ScheduledDate: "{{ visit.ScheduledDate | Date:'MM/dd/yyyy' }}",
                ScheduledServiceName: "{{ visit.ScheduledServiceName }}",
                ScheduledServiceId: "{{ visit.ScheduledServiceId }}",
                AttendedDate: "{{ visit.AttendedDate | Date:'MM/dd/yyyy' }}",
                AttendedServiceName: "{{ visit.AttendedServiceName }}",
                AttendedServiceId: "{{ visit.AttendedServiceId }}",
                AttendedCampusId: "{{ visit.AttendedCampusId }}",
                AttendedCampusName: "{{ visit.AttendedCampusName }}"
            }

            // if bringing chidren add them to visit data
            {% if visit.BringingChildren %}
                {% assign children = adultOne | Children %}

                {% for child in children %}
                    var newChild = {
                        FirstName: "{{  child.NickName }}",
                        Age: "{{ child.Age }}",
                        Birthdate: "{{ child.BirthDate | Date:'M/d/yy' }}",
                        Grade: "{{ child.GradeFormatted }}"
                    }
                    
                    newVisit.Children.push(newChild);
                {% endfor %}

            {% endif %}

            visitsObject.push(newVisit);
        {% endfor %}

        return visitsObject;
    }

    function showArrivedForm( senderId ) {
        $('#divVisits').toggle();
        $('#divArrivedForm').toggle();
        $('#btnArrived_' + senderId).toggle();

        $('#hfVisitId').val(senderId);

    }

    function recordAttended() {
        var postUrl = "/api/PlanAVisit/Attended";
        postUrl += "?visitId=" + $('#hfVisitId').val();
        //postUrl += "&attendedCampusId=" + attendedCampusId;
        //postUrl += "&attendedScheduleId=" + attendedScheduleId;
        //postUrl += "&attendedDate=" + attendedDate;

        console.log('purl: ' + postUrl);

        //$.post( "/api/PlanAVisit/Attended")

        $('#divVisits').toggle();
        $('#divArrivedForm').toggle();
    }
</script>
