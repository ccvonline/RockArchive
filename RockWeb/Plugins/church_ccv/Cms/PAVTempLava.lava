<style>
    .campus-actions {
        display: flex;
        justify-content: space-between;
        max-width: 600px;
        margin: 0 auto 20px auto;
    }

    .visit-card {
        box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 6px, rgba(0, 0, 0, 0.12) 0px 1px 4px;
        transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;
        border-radius: 5px;
        background-color: #FFFFFF;
        margin: 0 auto;
        min-height: 200px;
        max-width: 600px;
    }

    .visit-card i {
        font-size: 32px;
        line-height: 34px;
        color: #7A1315;
    }

    .card-header {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 75px;
        border-bottom: 1px solid #ddd;
    }

    .card-header h4, h5 {
        padding: 0 20px;
        line-height: 100%;
    }

    .card-header i {
        font-size: 40px;
        line-height: 42px;
    }

    .header-content {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .visit {
        color: #000;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        text-align: left;
        border: none;
        border-bottom: 1px solid #ddd;
        outline: none;
        transition: 0.4s;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }   

    .active, .visit:hover {
        background-color: #ccc;
    }

    .content {
        padding: 0 18px;
        background-color: #FFFFFF;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        overflow: hidden;
    }

    .content-hidden {
        display: none;
    }

    .content p {
        text-align: center;
    }

    .child {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .child-info {
        display: flex;
        justify-content: space-between;
    }

    .child-info p:first-of-type {
        margin-right; 10px;
    }

    .no-visits {
        padding: 40px 0;
    }

    /* campuses dropdown */
    #ulCampuses { 
        height: 38px;
        list-style: none;
    }
    #ulCampuses li:not(.init) { 
        width: 200px; 
        display: none; 
        background-color: #FFFFFF;
        color: #333;
        position: relative;
        top: 8px;
        left: -14px;
    }
    #ulCampuses li:not(.init):hover, #ulCampuses li.selected:not(.init) { 
        background-color: #7A1315; 
        color: #FFFFFF;
    }
    li.init { 
        cursor: pointer; 
    }
</style>

<div id="divVisits" class="hidden">
    <div class="campus-actions">
        <ul id="ulCampuses" class="btn btn-primary">
            <li class="init">Select A Campus</li>
        </ul>

        <button class="btn btn-primary" onclick="toggleAllCampuses(); return false;">Show All Campuses</button>
    </div>

    <div class="visit-card">
        <div class="card-header">
            <i onclick="prevDay()" class="mdi mdi-chevron-left"></i>
            <div class="header-content">
                <h4 id="headerDate">Date</h4>
            </div>
            <i onclick="nextDay()" class="mdi mdi-chevron-right"></i>
        </div>

        <div id="cardContent" class="content">

        </div>
    </div>

</div>

<script>
    // default to todays date
    var cardDate = moment();

    // temp
    cardDate = cardDate.add(4, 'days');

    // set campus
    var campusId = "{{ Context.Campus.Id }}";
    var showAllCampuses = false;

    // build visit data
    var visitData = buildVisitDataObject();

    function pageLoad() {
        // load campuses dropdown
        buildCampusesDropdown();
        
        // initial render of visits
        renderVisitsCard();

        // begin handle campuses ul click
        $("#ulCampuses").on("click", ".init", function() {
            $(this).closest("#ulCampuses").children('li:not(.init)').toggle();
        });

        var allOptions = $("#ulCampuses").children('li:not(.init)');

        $("#ulCampuses").on("click", "li:not(.init)", function() {
            allOptions.removeClass('selected');
            $(this).addClass('selected');
            $("#ulCampuses").children('.init').html($(this).html());
            allOptions.toggle();

            campusId = $(this).data('value');

            // re-render
            renderVisitsCard();
        });
        // end handle campuses ul click
    }

    // increase date by 1 day
    function nextDay() {
        cardDate = cardDate.add(1, 'days');

        // re-render
        renderVisitsCard();
    }

    // decreate date by 1 day
    function prevDay() {
        cardDate = cardDate.add(-1, 'days');

        // re-render
        renderVisitsCard();
    }

    // show / hide all campuses
    function toggleAllCampuses() {
        showAllCampuses = !showAllCampuses;

        // re-render
        renderVisitsCard()
    }

    // render visits card
    function renderVisitsCard() {
        var itemsProcessed = 0;
        var hasVisits = false;
        var visitItemHTML = "";

        // update date title
        $('#headerDate').text(cardDate.format("MM/DD/YYYY"));

        // ensure card is blank before proceeding
        $('#cardContent').html("");

        visitData.forEach( function(visitItem, index, array) {
            if ( ( showAllCampuses === true || visitItem.CampusId == campusId ) && visitItem.ScheduledDate == cardDate.format("MM/DD/YYYY") ) {
                console.log( "visit for campus found + date found");

                hasVisits = true;

                var familyName = visitItem.AdultOneFirstName;

                if ( visitItem.AdultTwoFirstName != "") {
                    familyName = familyName + " & " + visitItem.AdultTwoFirstName;
                }

                familyName = familyName + " " + visitItem.FamilyName;

                // ensure we starting with empty html
                visitItemHTML = ""

                // family name 
                visitItemHTML += '<div id="divVisit_' + visitItem.Id + '" class="visit">';
                    visitItemHTML += "<h4>" + familyName + " (" + visitItem.ScheduledDate +")</h4>";
                    visitItemHTML += '<i id="tglIconVisit_' + visitItem.Id + '" class="mdi mdi-chevron-down"></i>';
                visitItemHTML += "</div>";

                // family content
                visitItemHTML += '<div id="divVisitContent_' + visitItem.Id + '" class="content content-hidden">'                
                    visitItemHTML += "<h4>Scheduled Service Time</h4>";
                    visitItemHTML += "<p>" + visitItem.CampusName + "<br />" + visitItem.ScheduledServiceName + "</p>";
                        
                    if ( visitItem.BringingChildren === "true" ) {
                        visitItemHTML += "<h4>Kids</h4>";

                        visitItem.Children.forEach(function(child) {
                            visitItemHTML += '<div class="child">';
                                visitItemHTML += "<h5>" + child.FirstName + "</h5>";
                                visitItemHTML += '<div class="child-info"><p>Age: ' + child.Age + "</p><p>Birthday: " + child.Birthdate + "</p></div>";
                            visitItemHTML += "</div>"
                        });                        
                    }                    
                                   
                visitItemHTML += "</div>"    

                // need to append the html here so the following jquery can attach
                $('#cardContent').append( visitItemHTML);            

                $('#divVisit_' + visitItem.Id).on('click', function() {
                    $('#divVisitContent_' + visitItem.Id).toggleClass('content-hidden');
                    $('#tglIconVisit_' + visitItem.Id).toggleClass('mdi-chevron-down');
                    $('#tglIconVisit_' + visitItem.Id).toggleClass('mdi-chevron-up');
                });


            }

            // unhide the visits card once all items processed
            itemsProcessed++;

            if ( itemsProcessed === array.length ) {
                $('#divVisits').removeClass("hidden");
            }
        });

        if (hasVisits == false) {
            console.log("no visit for campus found + date found")

            visitItemHTML = '<div class="no-visits"><h5>No visits scheduled</h5></div>';0

            $('#cardContent').append( visitItemHTML);
        }
    }

    // populate campuses object
    function buildCampusesDropdown() {
        {% for campus in Campuses %}
            {% if campus.IsActive %}
                var liCampus = '<li data-value="{{ campus.Id }}">{{ campus.Name }}</li>';

                $('#ulCampuses').append(liCampus);

            {% endif %}
        {% endfor %}
    }

    // populate visit object
    function buildVisitDataObject() {
        var visitsObject = [];

        {% for visit in Visits %}
            {% assign adultOne = visit.AdultOnePersonAliasId | PersonByAliasId %}
            {% assign adultTwo = visit.AdultTwoPersonAliasId | PersonByAliasId %}
            
            var newVisit = {
                Id: "{{ visit.Id }}",
                FamilyName: "{{ visit.FamilyLastName }}",
                AdultOneFirstName: "{{ adultOne.NickName }}",
                AdultTwoFirstName: "{{ adultTwo.NickName }}",
                CampusId: "{{ visit.CampusId }}",
                CampusName: "{{ visit.CampusName }}",
                BringingChildren: "{{ visit.BringingChildren }}",
                Children: [],
                ScheduledDate: "{{ visit.ScheduledDate | Date:'MM/dd/yyyy' }}",
                ScheduledServiceName: "{{ visit.ScheduledServiceName }}",
                AttendedDate: "{{ visit.AttendedDate }}",
                AttendedServiceName: "{{ visit.AttendedServiceName }}"
            }

            // if bringing chidren add them to visit data
            {% if visit.BringingChildren %}
                {% assign children = adultOne | Children %}

                {% for child in children %}
                    var newChild = {
                        FirstName: "{{  child.NickName }}",
                        Age: "{{ child.Age }}",
                        Birthdate: "{{ child.BirthDate | Date:'M/d/yy' }}"
                    }
                    
                    newVisit.Children.push(newChild);
                {% endfor %}

            {% endif %}

            visitsObject.push(newVisit);
        {% endfor %}

        return visitsObject;
    }
</script>


{{ Lava | 'Debug' }}



