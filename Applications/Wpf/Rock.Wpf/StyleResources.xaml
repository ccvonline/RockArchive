<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- 
          Label Styles
        -->

    <!-- Label style -->
    <Style x:Key="labelStyle"
           TargetType="{x:Type Label}">
        <Setter Property="Padding"
                Value="4,4,0,0" />
        <Setter Property="Label.HorizontalAlignment"
                Value="Left"></Setter>
        <Setter Property="Label.FontWeight"
                Value="Normal"></Setter>
        <Setter Property="Label.FontSize"
                Value="14"></Setter>
        <Setter Property="Label.Foreground"
                Value="#515151"></Setter>
    </Style>

    <!-- Label style: Bold -->
    <Style x:Key="labelStyleBold"
           BasedOn="{StaticResource labelStyle}"
           TargetType="{x:Type Label}">
        <Setter Property="Label.FontWeight"
                Value="Bold"></Setter>
    </Style>

    <!-- Label style: Caption -->
    <Style x:Key="labelStyleCaption"
           BasedOn="{StaticResource labelStyle}"
           TargetType="{x:Type Label}">
        <Setter Property="Label.FontWeight"
                Value="Bold"></Setter>
        <Setter Property="Label.FontSize"
                Value="16"></Setter>
    </Style>

    <!-- Label style: Title -->
    <Style x:Key="labelStyleTitle"
           TargetType="{x:Type Label}">
        <Setter Property="Label.Margin"
                Value="20,0,0,10"></Setter>
        <Setter Property="Label.VerticalAlignment"
                Value="Center"></Setter>
        <Setter Property="Label.HorizontalAlignment"
                Value="Right"></Setter>
        <Setter Property="Label.FontWeight"
                Value="Bold"></Setter>
        <Setter Property="Label.FontSize"
                Value="30"></Setter>
        <Setter Property="Label.Foreground"
                Value="#d6d6d6"></Setter>
    </Style>

    <!-- Label style: Legend -->
    <Style x:Key="labelStyleLegend"
           TargetType="{x:Type Label}">
        <Setter Property="Label.Margin"
                Value="0,0,0,0"></Setter>
        <Setter Property="Label.VerticalAlignment"
                Value="Center"></Setter>
        <Setter Property="Label.HorizontalAlignment"
                Value="Left"></Setter>
        <Setter Property="Label.FontWeight"
                Value="SemiBold"></Setter>
        <Setter Property="Label.FontSize"
                Value="21"></Setter>
        <Setter Property="Label.Foreground"
                Value="#515151"></Setter>
    </Style>

    
    <!-- *** Banner ***  -->
    
    <!-- Panel Style: panelBanner -->
    <Style x:Key="panelBanner"
           TargetType="{x:Type StackPanel}" >
        <Setter 
            Property="Background"
            Value="#8498ab"
            />
        <Setter 
            Property="Margin"
            Value="10"
            />
        <Setter
            Property="Orientation"
            Value="Horizontal"
            />
    </Style>
    
    <!-- Label style: Banner Title -->
    <Style x:Key="labelStyleBannerTitle"
           TargetType="{x:Type Label}">
        <Setter Property="Label.FontWeight"
                Value="Bold"></Setter>
        <Setter Property="Label.FontSize"
                Value="28"></Setter>
        <Setter Property="Label.Foreground"
                Value="#ecf0f3"></Setter>
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="Margin"
                Value="4,0,0,0"
                />
    </Style>

    <!-- Label style: Banner Text -->
    <Style x:Key="labelStyleBannerText"
           TargetType="{x:Type Label}">
        <Setter Property="FontFamily"
                Value="./resources/#Open Sans Light"></Setter>
        <Setter Property="Label.FontWeight"
                Value="Normal"></Setter>
        <Setter Property="Label.FontSize"
                Value="28"></Setter>
        <Setter Property="Label.Foreground"
                Value="#ecf0f3"></Setter>
        <Setter Property="HorizontalAlignment"
                Value="Left" />
    </Style>
    
    

    <!-- Grid style: PanelGrid -->
    <Style x:Key="gridPanel"
           TargetType="{x:Type Grid}">
        <Setter 
            Property="Background"
            Value="#e7ecf0" 
            />
    </Style>

    <Style x:Key="gridPanelBorderColumn"
           TargetType="{x:Type ColumnDefinition}">
        <Setter 
            Property="Width"
            Value="44" 
            />
    </Style>

    <Style x:Key="gridPanelBorderRow"
           TargetType="{x:Type RowDefinition}">
        <Setter 
            Property="Height"
            Value="44" 
            />
    </Style>


    <!--  Logo style: bottom right -->
    <Style x:Key="logoStyleBottomRight"
           TargetType="{x:Type Frame}">
        <Setter
            Property="Opacity"
            Value="0.2" />
        <Setter
            Property="HorizontalAlignment"
            Value="Right" />
        <Setter
            Property="Padding"
            Value="16" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="0.15" ScaleY="0.15" />
            </Setter.Value>
        </Setter>
    </Style>
    
    
    

    <!-- Label style: Alert-->
    <Style x:Key="labelStyleAlert"
           TargetType="{x:Type Label}">
        <Setter Property="Label.Foreground"
                Value="#c09853"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border CornerRadius="4,4,4,4"
                            BorderThickness="1"
                            BorderBrush="#fbeed5"
                            Padding="14,8,35,8"
                            Background="#FCF8E3"
                            Margin="10">
                        <TextBlock Text="{TemplateBinding Content}"
                                   TextWrapping="Wrap" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Label style: Information-->
    <Style x:Key="labelStyleAlertInfo"
           TargetType="{x:Type Label}">
        <Setter Property="Label.Foreground"
                Value="#3a87ad"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border CornerRadius="4,4,4,4"
                            BorderThickness="1"
                            BorderBrush="#bce8f1"
                            Padding="14,8,35,8"
                            Background="#D9EDF7"
                            Margin="10">
                        <TextBlock Text="{TemplateBinding Content}"
                                   TextWrapping="Wrap" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Label style: Error-->
    <Style x:Key="labelStyleAlertError"
           TargetType="{x:Type Label}">
        <Setter Property="Label.Foreground"
                Value="#b94a48"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border CornerRadius="4,4,4,4"
                            BorderThickness="1"
                            BorderBrush="#eed3d7"
                            Padding="14,8,35,8"
                            Background="#F2DEDE"
                            Margin="5">
                        <TextBlock Text="{TemplateBinding Content}"
                                   TextWrapping="Wrap"
                                   TextTrimming="CharacterEllipsis" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Label style: Grid Title-->
    <Style x:Key="labelStyleGridTitle"
           TargetType="{x:Type Label}"
           BasedOn="{StaticResource labelStyleLegend}">
        <Setter Property="Label.FontSize"
                Value="14"></Setter>
    </Style>

    <!-- Label style: dt (Bootstrap Definition Title)-->
    <Style x:Key="labelStyleDt"
           BasedOn="{StaticResource labelStyle}"
           TargetType="{x:Type Label}">
        <Setter Property="Label.FontWeight"
                Value="Bold" />
    </Style>

    <!-- Label style: dd (Bootstrap Definition definition)-->
    <Style x:Key="labelStyleDd"
           BasedOn="{StaticResource labelStyle}"
           TargetType="{x:Type Label}">
        <Setter Property="Label.Margin"
                Value="10,0,0,0" />
    </Style>

    <!-- Label style: Icon (FontAwesome Icon)-->
    <Style x:Key="labelStyleIcon"
           TargetType="{x:Type Label}">
        <Setter Property="Padding"
                Value="0,0,4,0" />
        <Setter Property="Label.HorizontalAlignment"
                Value="Left"></Setter>
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="./resources/#FontAwesome" />
        <Setter Property="Label.FontWeight"
                Value="Normal"></Setter>
        <Setter Property="Label.Foreground"
                Value="White"></Setter>
    </Style>

    <Style x:Key="labelStyleIconPrimary"
           BasedOn="{StaticResource labelStyleIcon}"
           TargetType="{x:Type Label}">
        <Setter Property="Label.Margin"
                Value="4,6,0,4"></Setter>
    </Style>

    <Style x:Key="labelStyleIconPrimaryLeft"
           BasedOn="{StaticResource labelStyleIcon}"
           TargetType="{x:Type Label}">
        <Setter Property="Label.Margin"
                Value="0,6,0,4"></Setter>
    </Style>

    <!-- Label style: Button Text-->
    <Style x:Key="labelStyleButtonText"
           TargetType="{x:Type Label}">
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Label.HorizontalAlignment"
                Value="Left"></Setter>
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Label.FontWeight"
                Value="Normal"></Setter>
        <Setter Property="Label.Foreground"
                Value="#fff"></Setter>
    </Style>

    <Style x:Key="labelStyleButtonTextPrimary"
           BasedOn="{StaticResource labelStyleButtonText}"
           TargetType="{x:Type Label}">
        <Setter Property="Label.Foreground"
                Value="White"></Setter>
    </Style>

    <!-- Textblock Style: Title Paragraph  -->
    <Style x:Key="textBlockStyleTitleParagraph"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Label.Margin"
                Value="0,0,0,0">
            </Setter>
            <Setter Property="Label.VerticalAlignment"
                Value="Center"></Setter>
            <Setter Property="Label.HorizontalAlignment"
                Value="Left"></Setter>
            <Setter Property="Label.FontWeight"
                Value="Normal"></Setter>
            <Setter Property="Label.FontSize"
                Value="14"></Setter>
            <Setter Property="Label.Foreground"
                Value="#515151"></Setter>
    </Style>

    <!-- Textblock Style: Grid Data  -->
    <Style x:Key="textBlockStyleGridDataTitle"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Padding"
                Value="6,0,0,0" />
        <Setter Property="HorizontalAlignment"
                Value="Left"></Setter>
        <Setter Property="FontWeight"
                Value="SemiBold"></Setter>
        <Setter Property="FontSize"
                Value="15"></Setter>
    </Style>
    <Style x:Key="textBlockStyleGridData"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Padding"
                Value="6,0,0,0" />
        <Setter Property="HorizontalAlignment"
                Value="Left"></Setter>
        <Setter Property="FontWeight"
                Value="Normal"></Setter>
        <Setter Property="FontSize"
                Value="14"></Setter>
    </Style>

    <!--
            Grid related Styles
        -->

    <!-- Grid Style -->
    <Style x:Key="gridStyle"
           TargetType="{x:Type DataGrid}">
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background"
                            Value="#e9e9e9" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Grid Column Header style -->
    <Style x:Key="gridHeaderStyle"
           TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Padding"
                Value="8" />
        <Setter Property="HorizontalAlignment"
                Value="Left"></Setter>
        <Setter Property="VerticalAlignment"
                Value="Bottom" />
        <Setter Property="FontWeight"
                Value="Bold"></Setter>
        <Setter Property="FontSize"
                Value="10"></Setter>
        <Setter Property="Foreground"
                Value="#444444"></Setter>
        <Setter Property="Background"
                Value="#e9e9e9"></Setter>
        <Setter Property="BorderThickness"
                Value="1,0,0,0" />
        <Setter Property="BorderBrush"
                Value="#dddddd" />
    </Style>

    <Style x:Key="gridHeaderStyleWide"
           TargetType="{x:Type DataGridColumnHeader}"
           BasedOn="{StaticResource gridHeaderStyle}">
        <Setter Property="Width"
                Value="240" />
    </Style>

    <Style x:Key="gridHeaderStyleNumber"
           TargetType="{x:Type DataGridColumnHeader}"
           BasedOn="{StaticResource gridHeaderStyle}">
        <Setter Property="HorizontalContentAlignment"
                Value="Right" />
    </Style>

    <Style x:Key="gridHeaderStyleDateTime"
           TargetType="{x:Type DataGridColumnHeader}"
           BasedOn="{StaticResource gridHeaderStyleNumber}">
        <Setter Property="Width"
                Value="180" />
        <Setter Property="HorizontalContentAlignment"
                Value="Right" />
    </Style>

    <Style x:Key="gridHeaderStyleCurrency"
           TargetType="{x:Type DataGridColumnHeader}"
           BasedOn="{StaticResource gridHeaderStyleNumber}">
        <Setter Property="Width"
                Value="120" />
        <Setter Property="HorizontalContentAlignment"
                Value="Right" />
    </Style>

    <!-- Grid Cell Style -->
    <Style x:Key="gridCellStyle"
           TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Background"
                        Value="#515151" />
                <Setter Property="Foreground"
                        Value="White" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Cursor"
                Value="Hand" />
    </Style>
    <Style x:Key="gridCellStyleNumber"
           TargetType="{x:Type DataGridCell}"
           BasedOn="{StaticResource gridCellStyle}">
        <Setter Property="HorizontalAlignment"
                Value="Right" />
    </Style>

    <!-- 
        Button styles 
        -->

    <!-- Button Style -->
    <Style x:Key="buttonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Width"
                Value="Auto" />
        <Setter Property="Height"
                Value="28" />
        <Setter Property="Foreground"
                Value="#fff" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="buttonBorder"
                            CornerRadius="4,4,4,4"
                            BorderThickness="1"
                            BorderBrush="#859bb0"
                            Padding="8,2,8,2"
                            Background="#a4b4c4"
                            >
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Cursor"
                                    Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="buttonBorder"
                                    Property="Background"
                                    Value="Transparent">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button Style: Mini -->
    <Style x:Key="buttonStyleMini"
           BasedOn="{StaticResource buttonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Height"
                Value="24" />
        <Setter Property="FontSize"
                Value="12" />
    </Style>

    <!-- Button Style: Primary -->
    <Style x:Key="buttonStylePrimary"
           TargetType="{x:Type Button}">
        <Setter Property="Width"
                Value="Auto" />
        <Setter Property="Height"
                Value="28" />
        <Setter Property="Foreground"
                Value="#fff" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="buttonBorder"
                            CornerRadius="4,4,4,4"
                            BorderThickness="0"
                            BorderBrush="#758ba1"
                            Padding="8,2,8,2"
                            Background ="#8498ab"
                            >
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Cursor"
                                    Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="buttonBorder"
                                    Property="Background"
                                    Value="#a498ab">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button Style: Primary Mini -->
    <Style x:Key="buttonStylePrimaryMini"
           BasedOn="{StaticResource buttonStylePrimary}"
           TargetType="{x:Type Button}">
        <Setter Property="Height"
                Value="24" />
        <Setter Property="FontSize"
                Value="12" />
    </Style>

    <!-- Button Style -->
    <Style x:Key="toggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Width"
                Value="Auto" />
        <Setter Property="Height"
                Value="50" />
        <Setter Property="Foreground"
                Value="#fff" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="buttonBorder"
                            CornerRadius="4,4,4,4"
                            BorderThickness="0"
                            BorderBrush="#758ba1"
                            Padding="8,2,8,2"
                            Background ="#8498ab"
                            >
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Cursor"
                                    Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="buttonBorder"
                                    Property="Background"
                                    Value="#000000">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 
        Border Styles 
        -->
    <Style x:Key='borderStyleWell'
           TargetType="{x:Type Border}">
        <Setter Property="Background"
                Value="WhiteSmoke" />
        <Setter Property="CornerRadius"
                Value="4" />
        <Setter Property="MinHeight"
                Value="20" />
        <Setter Property="Padding"
                Value="19" />
        <Setter Property="BorderBrush"
                Value="#e3e3e3" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Margin"
                Value="0,0,0,10" />
    </Style>

    <!-- 
           Input Styles
        -->
    <Style x:Key="inputStyleBase"
           TargetType="{x:Type Control}">
        <Setter Property="Margin"
                Value="4,4,0,0" />
        <Setter Property="Width"
                Value="210" />
        <Setter Property="Height"
                Value="24" />
        <Setter Property="HorizontalAlignment"
                Value="Left"></Setter>
    </Style>

    <!-- Textbox Style -->
    <Style x:Key="textboxStyle"
           TargetType="{x:Type Control}"
           BasedOn="{StaticResource ResourceKey=inputStyleBase}">
    </Style>

    <!-- Textbox Style: url -->
    <Style x:Key="textboxStyleUrl"
           BasedOn="{StaticResource ResourceKey=textboxStyle}"
           TargetType="{x:Type Control}">
        <Setter Property="Width"
                Value="420" />
    </Style>

    <!-- Date Picker Style -->
    <Style x:Key="datePickerStyle"
           TargetType="{x:Type DatePicker}"
           BasedOn="{StaticResource ResourceKey=inputStyleBase}">
    </Style>

    <!-- ComboBox Style -->
    <Style x:Key="comboBoxStyle"
           TargetType="ComboBox"
           BasedOn="{StaticResource ResourceKey=inputStyleBase}">
    </Style>

    <!-- Page Styles -->
    <Style x:Key="pageBackground"
           TargetType="{x:Type Page}" >
        <Setter 
               Property="Background"
               Value="#f4f4f4"
               />
    </Style>
    <Style x:Key="pageBackgroundLogin"
           TargetType="{x:Type Page}" >
        <Setter 
               Property="Background"
               Value="#FF373737"
               />
    </Style>

</ResourceDictionary>