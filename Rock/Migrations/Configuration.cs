namespace Rock.Migrations
{
	using System;
	using System.Data.Entity;
	using System.Data.Entity.Migrations;
	using System.Linq;
	using Rock.Groups;
	using Rock.CMS;
	using Rock.Util;
	using System.Collections.Generic;
	using Rock.Core;

	internal sealed class Configuration : DbMigrationsConfiguration<Rock.Data.RockContext>
	{
		public Configuration()
		{
			AutomaticMigrationsEnabled = true;
		}

		protected override void Seed( Rock.Data.RockContext context )
		{
			var groupRoleMember = new GroupRole
			{
				Name = "Member",
				Description = "Member of a group",
				System = true,
				Order = 1,
				Guid = new Guid( "00f3ac1c-71b9-4ee5-a30e-4c48c8a0bf1f" )
			};

			// Could not get gr.Guid match checking to work (WHEN SEEDING A SECOND, THIRD, TIME, etc.... so using Name instead.
			context.GroupRoles.AddOrUpdate( gr => gr.Name, groupRoleMember );

			var groupType1 = new GroupType
			{
				Name = "Type 1",
				Description = "",
				System = true,
				Guid = new Guid( "aece949f-704c-483e-a4fb-93d5e4720c4c" ),
				DefaultGroupRoleId = groupRoleMember.Id
			};

			context.GroupTypes.AddOrUpdate( gt => gt.Name, groupType1 );

			var adminRole = new Group
			{
				Name = "Administrative Users",
				Description = "Group of people who are admins on the site",
				System = true,
				IsSecurityRole = true,
				GroupTypeId = groupType1.Id,
				Guid = new Guid( "628c51a8-4613-43ed-a18d-4a6fb999273e" )
			};

			var staffRole = new Group
			{
				Name = "Staff Members",
				Description = "Used to give rights to the organization's staff members.",
				System = true,
				IsSecurityRole = true,
				GroupTypeId = groupType1.Id,
				Guid = new Guid( "2c112948-ff4c-46e7-981a-0257681eadf4" )
			};

			var webAdminRole = new Group
			{
				Name = "Website Administrator",
				Description = "Group of individuals who administrate portals. They have access to add, remove, update pages and their settings as well as the content on the page.",
				System = true,
				IsSecurityRole = true,
				GroupTypeId = groupType1.Id,
				Guid = new Guid( "1918e74f-c00d-4ddd-94c4-2e7209ce12c3" )
			};

			var webContentEditorRole = new Group
			{
				Name = "Website Content Editors",
				Description = "Group of individuals who have access to edit content on pages, but can not modify settings or add pages.",
				System = true,
				IsSecurityRole = true,
				GroupTypeId = groupType1.Id,
				Guid = new Guid( "cdf68207-2795-42de-b060-fe01c33beaea" )
			};

			context.Groups.AddOrUpdate( r => r.Name, adminRole, staffRole, webAdminRole, webContentEditorRole );

			//
			// Sites
			//
			var defaultSite = new Site
			{
				Theme = "RockCMS",
				Name = "Default",
				FaviconUrl = "Themes/Default/Assets/Icons/favicon.ico",
				System = true,
				AppleTouchIconUrl = "Themes/Default/Assets/Icons/apple-touch.png",
				FacebookAppId = "201981526511937",
				Description = "Default Site",
				Guid = new Guid( "C2D29296-6A87-47A9-A753-EE4E9159C4C4" )
			};
			context.Sites.AddOrUpdate( p => p.Name, defaultSite );

			context.SaveChanges();



			//**************************************************************************
			// Pages		(AUTO GENERATED BY TOOL)
			//**************************************************************************

			var page1_DefaultPage = new Page
			{
				SiteId = defaultSite.Id,
				Name = "Default Page",
				MenuDisplayChildPages = false,
				DisplayInNavWhen = CMS.DisplayInNavWhen.WhenAllowed,
				Title = "Default Page",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Default",
				RequiresEncryption = false,
				EnableViewState = true,
				Order = 1,
				IncludeAdminFooter = true,
				Guid = new Guid( "85F25819-E948-4960-9DDF-00F54D32444E" ),
				Description = "This is the description of the default page",
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page1_DefaultPage );

			var page12_MainPageTest = new Page
			{
				SiteId = defaultSite.Id,
				Name = "Main Page Test",
				MenuDisplayChildPages = true,
				DisplayInNavWhen = CMS.DisplayInNavWhen.WhenAllowed,
				Title = "Rock ChMS",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Default",
				RequiresEncryption = false,
				EnableViewState = false,
				Order = 8,
				IncludeAdminFooter = true,
				Guid = new Guid( "20F97A93-7949-4C2A-8A5E-C756FE8585CA" ),
				Description = "Main Rock ChMS",
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page12_MainPageTest );

			var page41_Communications = new Page
			{
				SiteId = defaultSite.Id,
				Name = "Communications",
				ParentPage = page12_MainPageTest,
				MenuDisplayChildPages = true,
				DisplayInNavWhen = CMS.DisplayInNavWhen.WhenAllowed,
				Title = "Communications",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Default",
				RequiresEncryption = false,
				EnableViewState = true,
				Order = 2,
				IncludeAdminFooter = true,
				Guid = new Guid( "0319BDC8-8CBF-4673-B4B3-63B2BFCA2C3C" ),
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page41_Communications );

			var page44_Administration = new Page
			{
				SiteId = defaultSite.Id,
				Name = "Administration",
				ParentPage = page12_MainPageTest,
				MenuDisplayChildPages = true,
				DisplayInNavWhen = CMS.DisplayInNavWhen.WhenAllowed,
				Title = "Administration",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Default",
				RequiresEncryption = false,
				EnableViewState = true,
				Order = 5,
				IncludeAdminFooter = true,
				Guid = new Guid( "84E12152-E456-478E-AF68-BA640E9CE65B" ),
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page44_Administration );

			var page48_Security = new Page
			{
				SiteId = defaultSite.Id,
				Name = "Security",
				ParentPage = page44_Administration,
				MenuDisplayChildPages = false,
				DisplayInNavWhen = CMS.DisplayInNavWhen.Never,
				Title = "Security",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Default",
				RequiresEncryption = false,
				EnableViewState = true,
				Order = 3,
				IncludeAdminFooter = true,
				Guid = new Guid( "8C71A7E2-18A8-41C0-AB40-AD85CF90CA81" ),
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page48_Security );

			var page49_CMSAdministration = new Page
			{
				SiteId = defaultSite.Id,
				Name = "CMS Administration",
				ParentPage = page44_Administration,
				MenuDisplayChildPages = true,
				DisplayInNavWhen = CMS.DisplayInNavWhen.WhenAllowed,
				Title = "CMS Administration",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Default",
				RequiresEncryption = false,
				EnableViewState = true,
				Order = 0,
				IncludeAdminFooter = true,
				Guid = new Guid( "550A898C-EDEA-48B5-9C58-B20EC13AF13B" ),
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page49_CMSAdministration );

			var page2_Sites = new Page
			{
				SiteId = defaultSite.Id,
				Name = "Sites",
				ParentPage = page49_CMSAdministration,
				MenuDisplayChildPages = false,
				DisplayInNavWhen = CMS.DisplayInNavWhen.WhenAllowed,
				Title = "Sites",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Default",
				RequiresEncryption = false,
				EnableViewState = true,
				Order = 6,
				IncludeAdminFooter = true,
				Guid = new Guid( "7596D389-4EAB-4535-8BEE-229737F46F44" ),
				Description = "Manage Sites",
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page2_Sites );

			var page7_Blocks = new Page
			{
				SiteId = defaultSite.Id,
				Name = "Blocks",
				ParentPage = page49_CMSAdministration,
				MenuDisplayChildPages = true,
				DisplayInNavWhen = CMS.DisplayInNavWhen.WhenAllowed,
				Title = "Blocks",
				MenuDisplayDescription = true,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Default",
				RequiresEncryption = false,
				EnableViewState = true,
				Order = 7,
				IncludeAdminFooter = true,
				Guid = new Guid( "5FBE9019-862A-41C6-ACDC-287D7934757D" ),
				Description = "Manage Blocks",
				MenuDisplayIcon = true
			};
			context.Pages.AddOrUpdate( p => p.Guid, page7_Blocks );

			var page16_ZoneBlocks = new Page
			{
				SiteId = defaultSite.Id,
				Name = "ZoneBlocks",
				ParentPage = page49_CMSAdministration,
				MenuDisplayChildPages = false,
				DisplayInNavWhen = CMS.DisplayInNavWhen.Never,
				Title = "Zone Blocks",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Dialog",
				RequiresEncryption = false,
				EnableViewState = true,
				Order = 9,
				IncludeAdminFooter = false,
				Guid = new Guid( "9F36531F-C1B5-4E23-8FA3-18B6DAFF1B0B" ),
				Description = "Admin page for administering the blocks in a zone",
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page16_ZoneBlocks );

			var page23_BlockProperties = new Page
			{
				SiteId = defaultSite.Id,
				Name = "Block Properties",
				ParentPage = page49_CMSAdministration,
				MenuDisplayChildPages = false,
				DisplayInNavWhen = CMS.DisplayInNavWhen.Never,
				Title = "Block Properties",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Dialog",
				RequiresEncryption = false,
				EnableViewState = true,
				Order = 11,
				IncludeAdminFooter = false,
				Guid = new Guid( "F0B34893-9550-4864-ADB4-EE860E4E427C" ),
				Description = "Lists the attributes for a block instance",
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page23_BlockProperties );

			var page29_ChildPages = new Page
			{
				SiteId = defaultSite.Id,
				Name = "ChildPages",
				ParentPage = page49_CMSAdministration,
				MenuDisplayChildPages = false,
				DisplayInNavWhen = CMS.DisplayInNavWhen.Never,
				Title = "Child Pages",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Dialog",
				RequiresEncryption = false,
				EnableViewState = true,
				Order = 14,
				IncludeAdminFooter = false,
				Guid = new Guid( "D58F205E-E9CC-4BD9-BC79-F3DA86F6E346" ),
				Description = "Manage child pages",
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page29_ChildPages );

			var page37_PageProperties = new Page
			{
				SiteId = defaultSite.Id,
				Name = "Page Properties",
				ParentPage = page49_CMSAdministration,
				MenuDisplayChildPages = false,
				DisplayInNavWhen = CMS.DisplayInNavWhen.Never,
				Title = "Page Properties",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Dialog",
				RequiresEncryption = false,
				EnableViewState = true,
				Order = 15,
				IncludeAdminFooter = false,
				Guid = new Guid( "37759B50-DB4A-440D-A83B-4EF3B4727B1E" ),
				Description = "Page Properties",
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page37_PageProperties );

			var page51_GlobalAttributes = new Page
			{
				SiteId = defaultSite.Id,
				Name = "Global Attributes",
				ParentPage = page49_CMSAdministration,
				MenuDisplayChildPages = false,
				DisplayInNavWhen = CMS.DisplayInNavWhen.WhenAllowed,
				Title = "Global Attributes",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Default",
				RequiresEncryption = false,
				EnableViewState = false,
				Order = 16,
				IncludeAdminFooter = true,
				Guid = new Guid( "A2753E03-96B1-4C83-AA11-FCD68C631571" ),
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page51_GlobalAttributes );

			var page52_GlobalValues = new Page
			{
				SiteId = defaultSite.Id,
				Name = "Global Values",
				ParentPage = page49_CMSAdministration,
				MenuDisplayChildPages = false,
				DisplayInNavWhen = CMS.DisplayInNavWhen.WhenAllowed,
				Title = "Global Values",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Default",
				RequiresEncryption = false,
				EnableViewState = false,
				Order = 17,
				IncludeAdminFooter = true,
				Guid = new Guid( "D5550020-0BD0-43E6-806B-25338830F244" ),
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page52_GlobalValues );

			var page3_Login = new Page
			{
				SiteId = defaultSite.Id,
				Name = "Login",
				ParentPage = page48_Security,
				MenuDisplayChildPages = false,
				DisplayInNavWhen = CMS.DisplayInNavWhen.WhenAllowed,
				Title = "Login",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Splash",
				RequiresEncryption = false,
				EnableViewState = true,
				Order = 0,
				IncludeAdminFooter = true,
				Guid = new Guid( "03CB988A-138C-448B-A43D-8891844EEB18" ),
				Description = "Login",
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page3_Login );

			var page4_NewAccount = new Page
			{
				SiteId = defaultSite.Id,
				Name = "New Account",
				ParentPage = page48_Security,
				MenuDisplayChildPages = false,
				DisplayInNavWhen = CMS.DisplayInNavWhen.WhenAllowed,
				Title = "Create Account ",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Default",
				RequiresEncryption = false,
				EnableViewState = true,
				Order = 2,
				IncludeAdminFooter = true,
				Guid = new Guid( "7D4E2142-D24E-4DD2-84BC-B34C5C3D0D46" ),
				Description = "Create Account",
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page4_NewAccount );

			var page28_Security = new Page
			{
				SiteId = defaultSite.Id,
				Name = "Security",
				ParentPage = page48_Security,
				MenuDisplayChildPages = false,
				DisplayInNavWhen = CMS.DisplayInNavWhen.WhenAllowed,
				Title = "Manage Security",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Dialog",
				RequiresEncryption = false,
				EnableViewState = true,
				Order = 13,
				IncludeAdminFooter = false,
				Guid = new Guid( "86D5E33E-E351-4CA5-9925-849C6C467257" ),
				Description = "Used to manage security for an entity",
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page28_Security );

			var page54_Confirm = new Page
			{
				SiteId = defaultSite.Id,
				Name = "Confirm",
				ParentPage = page48_Security,
				MenuDisplayChildPages = false,
				DisplayInNavWhen = CMS.DisplayInNavWhen.WhenAllowed,
				Title = "Confirm",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Default",
				RequiresEncryption = false,
				EnableViewState = true,
				Order = 14,
				IncludeAdminFooter = true,
				Guid = new Guid( "D73F83B4-E20E-4F95-9A2C-511FB669F44C" ),
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page54_Confirm );

			var page55_ChangePassword = new Page
			{
				SiteId = defaultSite.Id,
				Name = "Change Password",
				ParentPage = page48_Security,
				MenuDisplayChildPages = false,
				DisplayInNavWhen = CMS.DisplayInNavWhen.WhenAllowed,
				Title = "Change Password",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Default",
				RequiresEncryption = false,
				EnableViewState = true,
				Order = 15,
				IncludeAdminFooter = true,
				Guid = new Guid( "4508223C-2989-4592-B764-B3F372B6051B" ),
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page55_ChangePassword );

			var page56_ForgotUserName = new Page
			{
				SiteId = defaultSite.Id,
				Name = "Forgot User Name",
				ParentPage = page48_Security,
				MenuDisplayChildPages = false,
				DisplayInNavWhen = CMS.DisplayInNavWhen.WhenAllowed,
				Title = "Forgot User Name",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Default",
				RequiresEncryption = false,
				EnableViewState = true,
				Order = 16,
				IncludeAdminFooter = true,
				Guid = new Guid( "C6628FBD-F297-4C23-852E-40F1369C23A8" ),
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page56_ForgotUserName );

			var page57_MyAccount = new Page
			{
				SiteId = defaultSite.Id,
				Name = "My Account",
				ParentPage = page48_Security,
				MenuDisplayChildPages = false,
				DisplayInNavWhen = CMS.DisplayInNavWhen.WhenAllowed,
				Title = "My Account",
				MenuDisplayDescription = false,
				System = true,
				OutputCacheDuration = 0,
				Layout = "Default",
				RequiresEncryption = false,
				EnableViewState = true,
				Order = 17,
				IncludeAdminFooter = true,
				Guid = new Guid( "290C53DC-0960-484C-B314-8301882A454C" ),
				MenuDisplayIcon = false
			};
			context.Pages.AddOrUpdate( p => p.Guid, page57_MyAccount );

			context.SaveChanges();

			//**************************************************************************
			// Page Routes		(AUTO GENERATED BY TOOL)
			//**************************************************************************

			var pageroute_Site_xxActionxx = new PageRoute
			{
				Route = "Site/{Action}",
				PageId = page2_Sites.Id,
				Guid = new Guid( "6695D509-5EE5-4498-81A1-D0875AECC223" ),
				System = true
			};
			context.PageRoutes.AddOrUpdate( p => p.Guid, pageroute_Site_xxActionxx );

			var pageroute_Site_xxActionxx_xxSiteIdxx = new PageRoute
			{
				Route = "Site/{Action}/{SiteId}",
				PageId = page2_Sites.Id,
				Guid = new Guid( "1580C995-BA49-4612-B291-C7D3EA35D180" ),
				System = true
			};
			context.PageRoutes.AddOrUpdate( p => p.Guid, pageroute_Site_xxActionxx_xxSiteIdxx );

			var pageroute_Sites = new PageRoute
			{
				Route = "Sites",
				PageId = page2_Sites.Id,
				Guid = new Guid( "2444F430-A4BD-4B1F-B9BC-0C872814F77C" ),
				System = true
			};
			context.PageRoutes.AddOrUpdate( p => p.Guid, pageroute_Sites );

			var pageroute_Login = new PageRoute
			{
				Route = "Login",
				PageId = page3_Login.Id,
				Guid = new Guid( "4257A25E-8F4B-4E6C-9E09-822804C01891" ),
				System = true
			};
			context.PageRoutes.AddOrUpdate( p => p.Guid, pageroute_Login );

			var pageroute_NewAccount = new PageRoute
			{
				Route = "NewAccount",
				PageId = page4_NewAccount.Id,
				Guid = new Guid( "6B940C77-21C7-4F25-BEAC-C05152D30033" ),
				System = true
			};
			context.PageRoutes.AddOrUpdate( p => p.Guid, pageroute_NewAccount );

			var pageroute_Bloc_xxActionxx = new PageRoute
			{
				Route = "Bloc/{Action}",
				PageId = page7_Blocks.Id,
				Guid = new Guid( "9C5F6CD4-E3BA-49B9-8065-129E486F682D" ),
				System = true
			};
			context.PageRoutes.AddOrUpdate( p => p.Guid, pageroute_Bloc_xxActionxx );

			var pageroute_Bloc_xxActionxx_xxBlockIdxx = new PageRoute
			{
				Route = "Bloc/{Action}/{BlockId}",
				PageId = page7_Blocks.Id,
				Guid = new Guid( "D079CEBC-D820-46DB-8572-F36CE47D35BD" ),
				System = true
			};
			context.PageRoutes.AddOrUpdate( p => p.Guid, pageroute_Bloc_xxActionxx_xxBlockIdxx );

			var pageroute_Blocs = new PageRoute
			{
				Route = "Blocs",
				PageId = page7_Blocks.Id,
				Guid = new Guid( "5DCF79F0-CBC3-40E9-BA21-51043BDF8573" ),
				System = true
			};
			context.PageRoutes.AddOrUpdate( p => p.Guid, pageroute_Blocs );

			var pageroute_ZoneBlocks_xxEditPagexx_xxZoneNamexx = new PageRoute
			{
				Route = "ZoneBlocks/{EditPage}/{ZoneName}",
				PageId = page16_ZoneBlocks.Id,
				Guid = new Guid( "1F1A13E4-823C-43F7-B05F-AEBC012B7DDD" ),
				System = true
			};
			context.PageRoutes.AddOrUpdate( p => p.Guid, pageroute_ZoneBlocks_xxEditPagexx_xxZoneNamexx );

			var pageroute_BlockProperties_xxBlockInstancexx = new PageRoute
			{
				Route = "BlockProperties/{BlockInstance}",
				PageId = page23_BlockProperties.Id,
				Guid = new Guid( "6438C940-96F7-4A7E-9DA5-A30FD4FF143A" ),
				System = true
			};
			context.PageRoutes.AddOrUpdate( p => p.Guid, pageroute_BlockProperties_xxBlockInstancexx );

			var pageroute_Secure_xxEntityTypexx_xxEntityIdxx = new PageRoute
			{
				Route = "Secure/{EntityType}/{EntityId}",
				PageId = page28_Security.Id,
				Guid = new Guid( "45BD998E-68F8-4AAF-A094-12E4AEE217A3" ),
				System = true
			};
			context.PageRoutes.AddOrUpdate( p => p.Guid, pageroute_Secure_xxEntityTypexx_xxEntityIdxx );

			var pageroute_Pages_xxEditPagexx = new PageRoute
			{
				Route = "Pages/{EditPage}",
				PageId = page29_ChildPages.Id,
				Guid = new Guid( "926DF96E-55DA-467A-864F-6740C04BA400" ),
				System = true
			};
			context.PageRoutes.AddOrUpdate( p => p.Guid, pageroute_Pages_xxEditPagexx );

			var pageroute_PageProperties_xxPagexx = new PageRoute
			{
				Route = "PageProperties/{Page}",
				PageId = page37_PageProperties.Id,
				Guid = new Guid( "3676BB9B-C96F-4A8D-A418-FBE223020D8D" ),
				System = true
			};
			context.PageRoutes.AddOrUpdate( p => p.Guid, pageroute_PageProperties_xxPagexx );

			var pageroute_ChangePassword = new PageRoute
			{
				Route = "ChangePassword",
				PageId = page55_ChangePassword.Id,
				Guid = new Guid( "5230092F-126D-4169-A060-3B65211DCB71" ),
				System = true
			};
			context.PageRoutes.AddOrUpdate( p => p.Guid, pageroute_ChangePassword );

			var pageroute_ConfirmAccount = new PageRoute
			{
				Route = "ConfirmAccount",
				PageId = page54_Confirm.Id,
				Guid = new Guid( "3C084922-DF00-40E6-971B-72FF4234A54F" ),
				System = true
			};
			context.PageRoutes.AddOrUpdate( p => p.Guid, pageroute_ConfirmAccount );

			var pageroute_ForgotUserName = new PageRoute
			{
				Route = "ForgotUserName",
				PageId = page56_ForgotUserName.Id,
				Guid = new Guid( "A56CF405-CA08-4991-A8D4-E90584E3ADAB" ),
				System = true
			};
			context.PageRoutes.AddOrUpdate( p => p.Guid, pageroute_ForgotUserName );

			var pageroute_MyAccount = new PageRoute
			{
				Route = "MyAccount",
				PageId = page57_MyAccount.Id,
				Guid = new Guid( "8F2692BE-FE9A-4715-AA9F-B7412B2FE69A" ),
				System = true
			};
			context.PageRoutes.AddOrUpdate( p => p.Guid, pageroute_MyAccount );

			context.SaveChanges();


			//**************************************************************************
			// Sites		(AUTO GENERATED BY TOOL)
			//**************************************************************************

			var site_Default = new Site
			{
				Theme = "RockCMS",
				DefaultPageId = page12_MainPageTest.Id,
				Name = "Default",
				FaviconUrl = "Themes/Default/Assets/Icons/favicon.ico",
				System = true,
				AppleTouchIconUrl = "Themes/Default/Assets/Icons/apple-touch.png",
				Description = "Default Site",
				Guid = new Guid( "C2D29296-6A87-47A9-A753-EE4E9159C4C4" )
			};
			context.Sites.AddOrUpdate( p => p.Guid, site_Default );

			context.SaveChanges();


			//**************************************************************************
			// Blocks		(AUTO GENERATED BY TOOL)
			//**************************************************************************

			var block_Sites = new Block
			{
				Name = "Sites",
				System = true,
				Path = "~/Blocks/Administration/Sites.ascx",
				Guid = new Guid( "3E0AFD6E-3E3D-4FF9-9BC6-387AFBF9ACB6" ),
				Description = "Site Administration"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_Sites );

			var block_Login = new Block
			{
				Name = "Login",
				System = true,
				Path = "~/Blocks/Security/Login.ascx",
				Guid = new Guid( "7B83D513-1178-429E-93FF-E76430E038E4" ),
				Description = "Provides ability to login to site."
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_Login );

			var block_CreateAccount = new Block
			{
				Name = "Create Account",
				System = true,
				Path = "~/Blocks/Security/CreateAccount.ascx",
				Guid = new Guid( "292D3578-BC27-4DAB-BFC3-6D249E0905E0" ),
				Description = "Create new user accounts"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_CreateAccount );

			var block_HTMLContent = new Block
			{
				Name = "HTML Content",
				System = true,
				Path = "~/Blocks/Cms/HtmlContent.ascx",
				Guid = new Guid( "19B61D65-37E3-459F-A44F-DEF0089118A3" ),
				Description = "A block that displays HTML"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_HTMLContent );

			var block_Roles = new Block
			{
				Name = "Roles",
				System = true,
				Path = "~/Blocks/Administration/Roles.ascx",
				Guid = new Guid( "EA5F81B5-9086-4D34-8339-46D26B5F775E" ),
				Description = "Role Administration"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_Roles );

			var block_Blocks = new Block
			{
				Name = "Blocks",
				System = true,
				Path = "~/Blocks/Administration/Blocks.ascx",
				Guid = new Guid( "0244A072-6216-49F4-92EC-E6B5FFFF03B5" ),
				Description = "Block Administration"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_Blocks );

			var block_BlogPosts = new Block
			{
				Name = "Blog Posts",
				System = true,
				Path = "~/Blocks/Blog/Posts.ascx",
				Guid = new Guid( "E9918B7E-C108-4813-AE2B-9D5091644AAE" ),
				Description = "Blog Posts"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_BlogPosts );

			var block_BlogCategories = new Block
			{
				Name = "Blog Categories",
				System = true,
				Path = "~/Blocks/Blog/Categories.ascx",
				Guid = new Guid( "B13D3564-72D8-45F5-AE1D-20D0F600C93F" ),
				Description = "Used to list categories for a specific blog."
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_BlogCategories );

			var block_BlogPostDisplay = new Block
			{
				Name = "Blog Post Display",
				System = true,
				Path = "~/Blocks/Blog/PostDisplay.ascx",
				Guid = new Guid( "52FC470C-474C-495C-9620-E74A29AE846E" ),
				Description = "Used to show a post on a public site and allow for commenting."
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_BlogPostDisplay );

			var block_PageXsltTransformation = new Block
			{
				Name = "Page Xslt Transformation",
				System = true,
				Path = "~/Blocks/Cms/PageXslt.ascx",
				Guid = new Guid( "F49AD5F8-1E45-41E7-A88E-8CD285815BD9" ),
				Description = "Used for page navigation controls"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_PageXsltTransformation );

			var block_ZoneBlocks = new Block
			{
				Name = "Zone Blocks",
				System = true,
				Path = "~/Blocks/Administration/ZoneBlocks.ascx",
				Guid = new Guid( "72CAAF77-A015-45F0-A549-F941B9AB4D75" ),
				Description = "~/Blocks/Cms/ZoneBlocks.ascx"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_ZoneBlocks );

			var block_Security = new Block
			{
				Name = "Security",
				System = true,
				Path = "~/Blocks/Administration/Security.ascx",
				Guid = new Guid( "20474B3D-0DE7-4B63-B7B9-E042DBEF788C" ),
				Description = "~/Blocks/Cms/Security.ascx"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_Security );

			var block_Pages = new Block
			{
				Name = "Pages",
				System = true,
				Path = "~/Blocks/Administration/Pages.ascx",
				Guid = new Guid( "AEFC2DBE-37B6-4CAB-882C-B214F587BF2E" ),
				Description = "~/Blocks/Cms/Pages.ascx"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_Pages );

			var block_PageProperties = new Block
			{
				Name = "Page Properties",
				System = true,
				Path = "~/Blocks/Administration/PageProperties.ascx",
				Guid = new Guid( "C7988C3E-822D-4E73-882E-9B7684398BAA" ),
				Description = "Gives the user the ability to edit the properties for a page."
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_PageProperties );

			var block_Geocoding = new Block
			{
				Name = "Geocoding",
				System = true,
				Path = "~/Blocks/Administration/Address/Geocoding.ascx",
				Guid = new Guid( "340F1474-3403-4426-A8F0-2E33C1B4BF2F" ),
				Description = "~/Blocks/Administration/Address/Geocoding.ascx"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_Geocoding );

			var block_Standardization = new Block
			{
				Name = "Standardization",
				System = true,
				Path = "~/Blocks/Administration/Address/Standardization.ascx",
				Guid = new Guid( "363C3382-5148-4097-82B2-C85A4910A837" ),
				Description = "~/Blocks/Administration/Address/Standardization.ascx"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_Standardization );

			var block_Redirect = new Block
			{
				Name = "Redirect",
				System = true,
				Path = "~/Blocks/Cms/Redirect.ascx",
				Guid = new Guid( "B97FB779-5D3E-4663-B3B5-3C2C227AE14A" ),
				Description = "Redirects the user to a provided URL."
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_Redirect );

			var block_LoginStatus = new Block
			{
				Name = "Login Status",
				System = true,
				Path = "~/Blocks/Security/LoginStatus.ascx",
				Guid = new Guid( "04712F3D-9667-4901-A49D-4507573EF7AD" ),
				Description = "~/Blocks/Security/LoginStatus.ascx"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_LoginStatus );

			var block_Attributes = new Block
			{
				Name = "Attributes",
				System = true,
				Path = "~/Blocks/Administration/Attributes.ascx",
				Guid = new Guid( "E5EA2F6D-43A2-48E0-B59C-4409B78AC830" ),
				Description = "~/Blocks/Administration/Attributes.ascx"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_Attributes );

			var block_AttributeValues = new Block
			{
				Name = "Attribute Values",
				System = true,
				Path = "~/Blocks/Administration/AttributeValues.ascx",
				Guid = new Guid( "B084F060-ECE4-462A-B6D0-35B2A30AF3DF" ),
				Description = "~/Blocks/Administration/AttributeValues.ascx"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_AttributeValues );

			var block_ConfirmAccount = new Block
			{
				Name = "Confirm Account",
				System = true,
				Path = "~/Blocks/Security/ConfirmAccount.ascx",
				Guid = new Guid( "734DFF21-7465-4E02-BFC3-D40F7A65FB60" ),
				Description = "~/Blocks/Security/ConfirmAccount.ascx"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_ConfirmAccount );

			var block_NewAccount = new Block
			{
				Name = "New Account",
				System = true,
				Path = "~/Blocks/Security/NewAccount.ascx",
				Guid = new Guid( "99362B60-71A5-44C6-BCFE-DDA9B00CC7F3" ),
				Description = "~/Blocks/Security/NewAccount.ascx"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_NewAccount );

			var block_ChangePassword = new Block
			{
				Name = "Change Password",
				System = true,
				Path = "~/Blocks/Security/ChangePassword.ascx",
				Guid = new Guid( "3C12DE99-2D1B-40F2-A9B8-6FE7C2524B37" ),
				Description = "~/Blocks/Security/ChangePassword.ascx"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_ChangePassword );

			var block_ForgotUserName = new Block
			{
				Name = "Forgot UserName",
				System = true,
				Path = "~/Blocks/Security/ForgotUserName.ascx",
				Guid = new Guid( "02B3D7D1-23CE-4154-B602-F4A15B321757" ),
				Description = "~/Blocks/Security/ForgotUserName.ascx"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_ForgotUserName );

			var block_Components = new Block
			{
				Name = "Components",
				System = true,
				Path = "~/Blocks/Administration/Components.ascx",
				Guid = new Guid( "21F5F466-59BC-40B2-8D73-7314D936C3CB" ),
				Description = "~/Blocks/Administration/Components.ascx"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_Components );

			var block_EmailTemplates = new Block
			{
				Name = "Email Templates",
				System = true,
				Path = "~/Blocks/Administration/EmailTemplates.ascx",
				Guid = new Guid( "10DC44E9-ECC1-4679-8A07-C098A0DCD82E" ),
				Description = "~/Blocks/Administration/EmailTemplates.ascx"
			};
			context.Blocks.AddOrUpdate( p => p.Guid, block_EmailTemplates );

			context.SaveChanges();


			//**************************************************************************
			// BlockInstance		(AUTO GENERATED BY TOOL)
			//**************************************************************************

			var blockinstance_a = new BlockInstance
			{
				Guid = new Guid( "B31AE932-F065-4500-8524-2182431CD18C" ),
				Name = "a",
				System = true,
				OutputCacheDuration = 0,
				Zone = "Content",
				Order = 0,
				PageId = page2_Sites.Id,
				BlockId = block_Sites.Id
			};
			context.BlockInstances.AddOrUpdate( p => p.Guid, blockinstance_a );

			var blockinstance_b = new BlockInstance
			{
				Guid = new Guid( "3D325BB3-E1C9-4194-8E9B-11BFFC347DC3" ),
				Name = "b",
				System = true,
				OutputCacheDuration = 0,
				Zone = "Content",
				Order = 0,
				PageId = page3_Login.Id,
				BlockId = block_Login.Id
			};
			context.BlockInstances.AddOrUpdate( p => p.Guid, blockinstance_b );

			var blockinstance_d = new BlockInstance
			{
				Guid = new Guid( "74B3B85E-33B6-4ACF-8338-CBC12888BC74" ),
				Name = "d",
				System = true,
				OutputCacheDuration = 0,
				Zone = "Content",
				Order = 0,
				PageId = page7_Blocks.Id,
				BlockId = block_Blocks.Id
			};
			context.BlockInstances.AddOrUpdate( p => p.Guid, blockinstance_d );

			var blockinstance_j = new BlockInstance
			{
				Guid = new Guid( "CC8F4186-870D-4CF3-8226-D49F1A0D0DDF" ),
				Name = "j",
				System = true,
				OutputCacheDuration = 0,
				Layout = "Default",
				Zone = "Menu",
				Order = 1,
				BlockId = block_PageXsltTransformation.Id
			};
			context.BlockInstances.AddOrUpdate( p => p.Guid, blockinstance_j );

			var blockinstance_l = new BlockInstance
			{
				Guid = new Guid( "A5E0DD78-BB67-41E5-BDDA-73E2277482DA" ),
				Name = "l",
				System = true,
				OutputCacheDuration = 0,
				Zone = "Content",
				Order = 0,
				PageId = page16_ZoneBlocks.Id,
				BlockId = block_ZoneBlocks.Id
			};
			context.BlockInstances.AddOrUpdate( p => p.Guid, blockinstance_l );

			var blockinstance_Security = new BlockInstance
			{
				Guid = new Guid( "2CA65E58-5ED1-4BBB-B5E1-82F3EBA8EE0C" ),
				Name = "Security",
				System = true,
				OutputCacheDuration = 0,
				Zone = "Content",
				Order = 0,
				PageId = page28_Security.Id,
				BlockId = block_Security.Id
			};
			context.BlockInstances.AddOrUpdate( p => p.Guid, blockinstance_Security );

			var blockinstance_ChildPages = new BlockInstance
			{
				Guid = new Guid( "7B13773C-7477-42B6-B6B9-C69A19FB64EA" ),
				Name = "Child Pages",
				System = true,
				OutputCacheDuration = 0,
				Zone = "Content",
				Order = 0,
				PageId = page29_ChildPages.Id,
				BlockId = block_Pages.Id
			};
			context.BlockInstances.AddOrUpdate( p => p.Guid, blockinstance_ChildPages );

			var blockinstance_PageProperties = new BlockInstance
			{
				Guid = new Guid( "46376422-C33D-4FFF-8005-E7116781B466" ),
				Name = "Page Properties",
				System = true,
				OutputCacheDuration = 0,
				Zone = "Content",
				Order = 0,
				PageId = page37_PageProperties.Id,
				BlockId = block_PageProperties.Id
			};
			context.BlockInstances.AddOrUpdate( p => p.Guid, blockinstance_PageProperties );

			context.SaveChanges();


			//**************************************************************************
			// FieldTypes		(AUTO GENERATED BY TOOL)
			//**************************************************************************

			var fieldtype_Text = new FieldType
			{
				Name = "Text",
				System = true,
				Assembly = "Rock",
				Guid = new Guid( "9C204CD0-1233-41C5-818A-C5DA439445AA" ),
				Class = "Rock.FieldTypes.Text",
				Description = "A Text Field"
			};
			context.FieldTypes.AddOrUpdate( p => p.Guid, fieldtype_Text );

			var fieldtype_MultixxSelect = new FieldType
			{
				Name = "Multi-Select",
				System = true,
				Assembly = "Rock",
				Guid = new Guid( "BD0D9B57-2A41-4490-89FF-F01DAB7D4904" ),
				Class = "Rock.FieldTypes.SelectMulti",
				Description = "Renders a list of checkboxes for user to select one or more values from"
			};
			context.FieldTypes.AddOrUpdate( p => p.Guid, fieldtype_MultixxSelect );

			var fieldtype_Boolean = new FieldType
			{
				Name = "Boolean",
				System = true,
				Assembly = "Rock",
				Guid = new Guid( "1EDAFDED-DFE6-4334-B019-6EECBA89E05A" ),
				Class = "Rock.FieldTypes.Boolean",
				Description = "True / False"
			};
			context.FieldTypes.AddOrUpdate( p => p.Guid, fieldtype_Boolean );

			var fieldtype_Color = new FieldType
			{
				Name = "Color",
				System = true,
				Assembly = "Rock",
				Guid = new Guid( "D747E6AE-C383-4E22-8846-71518E3DD06F" ),
				Class = "Rock.FieldTypes.Color",
				Description = "List of colors to choose from"
			};
			context.FieldTypes.AddOrUpdate( p => p.Guid, fieldtype_Color );

			var fieldtype_SinglexxSelect = new FieldType
			{
				Name = "Single-Select",
				System = true,
				Assembly = "Rock",
				Guid = new Guid( "7525C4CB-EE6B-41D4-9B64-A08048D5A5C0" ),
				Class = "Rock.FieldTypes.SelectSingle",
				Description = "Renders either a drop down list, or a list of radio-buttons for user to select one value from"
			};
			context.FieldTypes.AddOrUpdate( p => p.Guid, fieldtype_SinglexxSelect );

			var fieldtype_Interger = new FieldType
			{
				Name = "Interger",
				System = true,
				Assembly = "Rock",
				Guid = new Guid( "A75DFC58-7A1B-4799-BF31-451B2BBE38FF" ),
				Class = "Rock.FieldTypes.Integer",
				Description = "An integer value (whole number)."
			};
			context.FieldTypes.AddOrUpdate( p => p.Guid, fieldtype_Interger );

			var fieldtype_PageReference = new FieldType
			{
				Name = "Page Reference",
				System = true,
				Assembly = "Rock",
				Guid = new Guid( "BD53F9C9-EBA9-4D3F-82EA-DE5DD34A8108" ),
				Class = "Rock.FieldTypes.PageReference",
				Description = "A reference to a specific page and route"
			};
			context.FieldTypes.AddOrUpdate( p => p.Guid, fieldtype_PageReference );

			var fieldtype_Image = new FieldType
			{
				Name = "Image",
				System = true,
				Assembly = "Rock",
				Guid = new Guid( "97F8157D-A8C8-4AB3-96A2-9CB2A9049E6D" ),
				Class = "Rock.FieldTypes.Image",
				Description = "An image stored in the database."
			};
			context.FieldTypes.AddOrUpdate( p => p.Guid, fieldtype_Image );

			var fieldtype_Date = new FieldType
			{
				Name = "Date",
				System = true,
				Assembly = "Rock",
				Guid = new Guid( "6B6AA175-4758-453F-8D83-FCD8044B5F36" ),
				Class = "Rock.FieldTypes.Date",
				Description = "A date field"
			};
			context.FieldTypes.AddOrUpdate( p => p.Guid, fieldtype_Date );

			var fieldtype_Video = new FieldType
			{
				Name = "Video",
				System = true,
				Assembly = "Rock",
				Guid = new Guid( "FA398F9D-5B01-41EA-9A93-112F910A277D" ),
				Class = "Rock.FieldTypes.Video",
				Description = "A Video field"
			};
			context.FieldTypes.AddOrUpdate( p => p.Guid, fieldtype_Video );

			context.SaveChanges();


			//**************************************************************************
			// DefinedTypes		(AUTO GENERATED BY TOOL)
			//**************************************************************************

			var definedtype_RecordType = new DefinedType
			{
				Description = "Record Types",
				Order = 0,
				Name = "Record Type",
				Category = "Person",
				Guid = new Guid( "26BE73A6-A9C5-4E94-AE00-3AFDCF8C9275" ),
				System = true
			};
			context.DefinedTypes.AddOrUpdate( p => p.Guid, definedtype_RecordType );

			var definedtype_RecordStatus = new DefinedType
			{
				Description = "Record Status",
				Order = 0,
				Name = "Record Status",
				Category = "Person",
				Guid = new Guid( "8522BADD-2871-45A5-81DD-C76DA07E2E7E" ),
				System = true
			};
			context.DefinedTypes.AddOrUpdate( p => p.Guid, definedtype_RecordStatus );

			var definedtype_RecordStatusReason = new DefinedType
			{
				Description = "Record Status Reason",
				Order = 0,
				Name = "Record Status Reason",
				Category = "Person",
				Guid = new Guid( "E17D5988-0372-4792-82CF-9E37C79F7319" ),
				System = true
			};
			context.DefinedTypes.AddOrUpdate( p => p.Guid, definedtype_RecordStatusReason );

			var definedtype_Status = new DefinedType
			{
				Description = "Status",
				Order = 0,
				Name = "Status",
				Category = "Person",
				Guid = new Guid( "2E6540EA-63F0-40FE-BE50-F2A84735E600" ),
				System = true
			};
			context.DefinedTypes.AddOrUpdate( p => p.Guid, definedtype_Status );

			var definedtype_Title = new DefinedType
			{
				Description = "Person Title (i.e. Mr., Mrs., Dr., etc)",
				Order = 0,
				Name = "Title",
				Category = "Person",
				Guid = new Guid( "4784CD23-518B-43EE-9B97-225BF6E07846" ),
				System = true
			};
			context.DefinedTypes.AddOrUpdate( p => p.Guid, definedtype_Title );

			var definedtype_Suffix = new DefinedType
			{
				Description = "Person Suffix (i.e. Sr., Jr. etc)",
				Order = 0,
				Name = "Suffix",
				Category = "Person",
				Guid = new Guid( "16F85B3C-B3E8-434C-9094-F3D41F87A740" ),
				System = true
			};
			context.DefinedTypes.AddOrUpdate( p => p.Guid, definedtype_Suffix );

			var definedtype_MaritalStatus = new DefinedType
			{
				Description = "Marital Status",
				Order = 0,
				Name = "Marital Status",
				Category = "Person",
				Guid = new Guid( "B4B92C3F-A935-40E1-A00B-BA484EAD613B" ),
				System = true
			};
			context.DefinedTypes.AddOrUpdate( p => p.Guid, definedtype_MaritalStatus );

			context.SaveChanges();


			//**************************************************************************
			// DefinedValues		(AUTO GENERATED BY TOOL)
			//**************************************************************************

			var definedvalue_Person = new DefinedValue
			{
				Order = 0,
				Name = "Person",
				DefinedTypeId = definedtype_RecordType.Id,
				Guid = new Guid( "36CF10D6-C695-413D-8E7C-4546EFEF385E" ),
				Description = "A Person Record",
				System = true
			};
			context.DefinedValues.AddOrUpdate( p => p.Guid, definedvalue_Person );

			var definedvalue_Business = new DefinedValue
			{
				Order = 1,
				Name = "Business",
				DefinedTypeId = definedtype_RecordType.Id,
				Guid = new Guid( "BF64ADD3-E70A-44CE-9C4B-E76BBED37550" ),
				Description = "A Business Record",
				System = true
			};
			context.DefinedValues.AddOrUpdate( p => p.Guid, definedvalue_Business );

			var definedvalue_Active = new DefinedValue
			{
				Order = 0,
				Name = "Active",
				DefinedTypeId = definedtype_RecordStatus.Id,
				Guid = new Guid( "618F906C-C33D-4FA3-8AEF-E58CB7B63F1E" ),
				Description = "An Active Record",
				System = true
			};
			context.DefinedValues.AddOrUpdate( p => p.Guid, definedvalue_Active );

			var definedvalue_Inactive = new DefinedValue
			{
				Order = 1,
				Name = "Inactive",
				DefinedTypeId = definedtype_RecordStatus.Id,
				Guid = new Guid( "1DAD99D5-41A9-4865-8366-F269902B80A4" ),
				Description = "An Inactive Record",
				System = true
			};
			context.DefinedValues.AddOrUpdate( p => p.Guid, definedvalue_Inactive );

			var definedvalue_Pending = new DefinedValue
			{
				Order = 3,
				Name = "Pending",
				DefinedTypeId = definedtype_RecordStatus.Id,
				Guid = new Guid( "283999EC-7346-42E3-B807-BCE9B2BABB49" ),
				Description = "Pending Record Status",
				System = true
			};
			context.DefinedValues.AddOrUpdate( p => p.Guid, definedvalue_Pending );

			context.SaveChanges();


			//**************************************************************************
			// Core Attributes		(AUTO GENERATED BY TOOL)
			//**************************************************************************

			var attribute_PrexxText = new Rock.Core.Attribute
			{
				EntityQualifierColumn = "BlockId",
				Required = false,
				Name = "Pre-Text",
				GridColumn = true,
				MultiValue = false,
				Key = "PreText",
				System = true,
				Entity = "Rock.CMS.BlockInstance",
				Order = 0,
				Description = "HTML text to render before the blocks main content.",
				Guid = new Guid( "15E874B8-FF76-40FB-8713-6D0C98609734" ),
				DefaultValue = ".",
				EntityQualifierValue = block_HTMLContent.Id.ToString(),
				FieldTypeId = fieldtype_Text.Id
			};
			context.Attributes.AddOrUpdate( p => p.Guid, attribute_PrexxText );

			var attribute_PostxxText = new Rock.Core.Attribute
			{
				EntityQualifierColumn = "BlockId",
				Required = false,
				Name = "Post-Text",
				GridColumn = true,
				MultiValue = false,
				Key = "PostText",
				System = true,
				Entity = "Rock.CMS.BlockInstance",
				Order = 1,
				Description = "HTML text to render after the blocks main content.",
				Guid = new Guid( "2E9AF795-68FE-4BD6-AF8B-8848CD796AF5" ),
				DefaultValue = ".",
				EntityQualifierValue = block_HTMLContent.Id.ToString(),
				FieldTypeId = fieldtype_Text.Id
			};
			context.Attributes.AddOrUpdate( p => p.Guid, attribute_PostxxText );

			var attribute_PostsPerPage = new Rock.Core.Attribute
			{
				EntityQualifierColumn = "BlockId",
				Required = false,
				Name = "Posts Per Page",
				GridColumn = false,
				MultiValue = false,
				Key = "PostsPerPage",
				System = true,
				Entity = "Rock.CMS.BlockInstance",
				Order = 1,
				Description = "The number of posts to display on a single page.",
				Guid = new Guid( "CE716F50-095B-4F53-9794-57D29C7D490C" ),
				DefaultValue = "5",
				EntityQualifierValue = block_BlogPosts.Id.ToString(),
				FieldTypeId = fieldtype_Interger.Id
			};
			context.Attributes.AddOrUpdate( p => p.Guid, attribute_PostsPerPage );

			var attribute_CacheDuration = new Rock.Core.Attribute
			{
				EntityQualifierColumn = "BlockId",
				Required = false,
				Name = "Cache Duration",
				GridColumn = true,
				MultiValue = false,
				Key = "CacheDuration",
				System = true,
				Entity = "Rock.CMS.BlockInstance",
				Order = 2,
				Description = "Number of seconds to cache the content.",
				Guid = new Guid( "DB1C5F09-2010-4842-86F1-3D9B9AD55C1F" ),
				DefaultValue = "0",
				EntityQualifierValue = block_HTMLContent.Id.ToString(),
				FieldTypeId = fieldtype_Interger.Id
			};
			context.Attributes.AddOrUpdate( p => p.Guid, attribute_CacheDuration );

			var attribute_Heading = new Rock.Core.Attribute
			{
				EntityQualifierColumn = "BlockId",
				Required = false,
				Name = "Heading",
				GridColumn = false,
				MultiValue = false,
				Key = "Heading",
				System = true,
				Entity = "Rock.CMS.BlockInstance",
				Order = 1,
				Description = "The heading to show above the list of categories.",
				Guid = new Guid( "427B8BF7-0A43-4C98-99AB-B65595D686FF" ),
				DefaultValue = "Categories",
				EntityQualifierValue = block_BlogCategories.Id.ToString(),
				FieldTypeId = fieldtype_Text.Id
			};
			context.Attributes.AddOrUpdate( p => p.Guid, attribute_Heading );

			var attribute_PostDetailPage = new Rock.Core.Attribute
			{
				EntityQualifierColumn = "BlockId",
				Required = false,
				Name = "Post Detail Page",
				GridColumn = true,
				MultiValue = false,
				Key = "PostDetailPage",
				System = true,
				Entity = "Rock.CMS.BlockInstance",
				Order = 2,
				Description = "Page reference to the post details page",
				Guid = new Guid( "E998F606-EBD4-4E7D-8AFE-9A92C145F101" ),
				DefaultValue = "-1,-1",
				EntityQualifierValue = block_BlogPosts.Id.ToString(),
				FieldTypeId = fieldtype_PageReference.Id
			};
			context.Attributes.AddOrUpdate( p => p.Guid, attribute_PostDetailPage );

			var attribute_EnableFacebookLogin = new Rock.Core.Attribute
			{
				EntityQualifierColumn = "BlockId",
				Required = false,
				Name = "Enable Facebook Login",
				GridColumn = true,
				MultiValue = false,
				Key = "FacebookEnabled",
				System = true,
				Entity = "Rock.CMS.BlockInstance",
				Order = 0,
				Description = "Enables the user to login using Facebook.  This assumes that the site is configured with both a Facebook App Id and Secret.",
				Guid = new Guid( "C5192287-F27E-4B91-97B5-A1C15490A4B9" ),
				DefaultValue = "True",
				EntityQualifierValue = block_Login.Id.ToString(),
				FieldTypeId = fieldtype_Boolean.Id
			};
			context.Attributes.AddOrUpdate( p => p.Guid, attribute_EnableFacebookLogin );

			var attribute_JobPulse = new Rock.Core.Attribute
			{
				Category = "Jobs",
				Required = false,
				Name = "Job Pulse",
				GridColumn = true,
				MultiValue = false,
				Key = "JobPulse",
				System = true,
				Order = 1,
				Description = "Date and time the last job pulse job ran.  This job allows an administrator to be notified if the jobs stop running.",
				Guid = new Guid( "254F45EE-071C-4337-A522-DFDC20B7966A" ),
				DefaultValue = "1/1/1900",
				FieldTypeId = fieldtype_Text.Id
			};
			context.Attributes.AddOrUpdate( p => p.Guid, attribute_JobPulse );

			var attribute_EmailHeaderLogo = new Rock.Core.Attribute
			{
				Category = "EmailFormat",
				Required = false,
				Name = "Email Header Logo",
				GridColumn = false,
				MultiValue = false,
				Key = "EmailHeaderLogo",
				System = true,
				Order = 1,
				Description = "Logo image to be used at the top off all emails.",
				Guid = new Guid( "B95C446D-6A3C-4672-8718-CF988C447D0D" ),
				DefaultValue = "assets/images/email-header.jpg",
				FieldTypeId = fieldtype_Image.Id
			};
			context.Attributes.AddOrUpdate( p => p.Guid, attribute_EmailHeaderLogo );

			var attribute_EmailBackgroundColor = new Rock.Core.Attribute
			{
				Category = "EmailFormat",
				Required = false,
				Name = "Email Background Color",
				GridColumn = false,
				MultiValue = false,
				Key = "EmailBackgroundColor",
				System = true,
				Order = 2,
				Description = "Background color (format #ffffff) that will be used for default emails.",
				Guid = new Guid( "56C8EC3F-1F7B-410A-A742-42EA217E3302" ),
				DefaultValue = "#cccccc",
				FieldTypeId = fieldtype_Text.Id
			};
			context.Attributes.AddOrUpdate( p => p.Guid, attribute_EmailBackgroundColor );

			context.SaveChanges();


			//**************************************************************************
			// CoreAttribute Qualifiers		(AUTO GENERATED BY TOOL)
			//**************************************************************************

			//context.SaveChanges();


			//**************************************************************************
			// CoreAttribute Values		(AUTO GENERATED BY TOOL)
			//**************************************************************************

			var attributevalue_4_30_20121xx58xx30PM = new AttributeValue
			{
				AttributeId = attribute_JobPulse.Id,
				System = true,
				Guid = new Guid( "67D29ACF-B1D6-411D-A7FC-3DB551F99F85" ),
				Value = "4/30/2012 1:58:30 PM"
			};
			context.AttributeValues.AddOrUpdate( p => p.Guid, attributevalue_4_30_20121xx58xx30PM );

			context.SaveChanges();


			//**************************************************************************
			// CMS Auth??		(AUTO GENERATED BY TOOL)
			//**************************************************************************


			//**************************************************************************
			// Utility: Jobs		(AUTO GENERATED BY TOOL)
			//**************************************************************************

			var job_JobPulse = new Job
			{
				NotificationStatus = Rock.Util.JobNotificationStatus.None,
				Name = "Job Pulse",
				Class = "Rock.Jobs.JobPulse",
				LastStatus = "Success",
				System = true,
				LastRunSchedulerName = "RockSchedulerIIS",
				LastRunDuration = 0,
				CronExpression = "30 * * ? * SUN,MON,TUE,WED,THU,FRI,SAT",
				Active = true,
				Guid = new Guid( "CB24FF2A-5AD3-4976-883F-DAF4EFC1D7C7" ),
				Description = "System job that allows Rock to monitor the jobs engine."
			};
			context.Jobs.AddOrUpdate( p => p.Guid, job_JobPulse );

			var job_RockCleanup = new Job
			{
				NotificationStatus = Rock.Util.JobNotificationStatus.None,
				Name = "Rock Cleanup",
				Class = "Rock.Jobs.RockCleanup",
				LastStatus = "Success",
				System = true,
				LastRunSchedulerName = "RockSchedulerIIS",
				LastRunDuration = 0,
				CronExpression = "0 0 1 * * ?",
				Active = true,
				Guid = new Guid( "1A8238B1-038A-4295-9FDE-C6D93002A5D7" ),
				Description = "General job to clean up various areas of Rock."
			};
			context.Jobs.AddOrUpdate( p => p.Guid, job_RockCleanup );

			context.SaveChanges();
		}
	}
}
