//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the T4\Model.tt template.
//
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//
// THIS WORK IS LICENSED UNDER A CREATIVE COMMONS ATTRIBUTION-NONCOMMERCIAL-
// SHAREALIKE 3.0 UNPORTED LICENSE:
// http://creativecommons.org/licenses/by-nc-sa/3.0/
//
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;
using System.Runtime.Serialization;

using Rock.Data;

namespace Rock.Core
{
    /// <summary>
    /// Metric Value POCO Entity.
    /// </summary>
    [Table( "coreMetricValue" )]
    public partial class MetricValue : ModelWithAttributes<MetricValue>, IAuditable, IOrdered
    {
		/// <summary>
		/// Gets or sets the System.
		/// </summary>
		/// <value>
		/// System.
		/// </value>
		[Required]
		[DataMember]
		public bool IsSystem { get; set; }
		
		/// <summary>
		/// Gets or sets the Metric Id.
		/// </summary>
		/// <value>
		/// Metric Id.
		/// </value>
		[Required]
		[DataMember]
		public int MetricId { get; set; }
				
		/// <summary>
		/// Gets or sets the Value.
		/// </summary>
		/// <value>
		/// Value.
		/// </value>
		[Required]
		[MaxLength( 100 )]
		[DataMember]
		public string Value { get; set; }
		
		/// <summary>
		/// Gets or sets the Description.
		/// </summary>
		/// <value>
		/// Description.
		/// </value>
		[DataMember]
		public string Description { get; set; }

		/// <summary>
		/// Gets or sets the x Value.
		/// </summary>
		/// <value>
		/// xValue.
		/// </value>
		[DataMember]
		public int xValue { get; set; }

		/// <summary>
		/// Gets or sets isDateBased for the associated xValue.
		/// </summary>
		/// <value>
		/// isDateBased.
		/// </value>
		[DataMember]
		public bool isDateBased { get; set; }

		/// <summary>
		/// Gets or sets the Label.
		/// </summary>
		/// <value>
		/// Label.
		/// </value>
		[DataMember]
		public string Label { get; set; }

		/// <summary>
		/// Gets or sets the Order.
		/// </summary>
		/// <value>
		/// Order.
		/// </value>
		[Required]
		[DataMember]
		public int Order { get; set; }
		
		/// <summary>
		/// Gets or sets the Created Date Time.
		/// </summary>
		/// <value>
		/// Created Date Time.
		/// </value>
		[DataMember]
		public DateTime? CreatedDateTime { get; set; }
		
		/// <summary>
		/// Gets or sets the Modified Date Time.
		/// </summary>
		/// <value>
		/// Modified Date Time.
		/// </value>
		[DataMember]
		public DateTime? ModifiedDateTime { get; set; }
		
		/// <summary>
		/// Gets or sets the Created By Person Id.
		/// </summary>
		/// <value>
		/// Created By Person Id.
		/// </value>
		[DataMember]
		public int? CreatedByPersonId { get; set; }
		
		/// <summary>
		/// Gets or sets the Modified By Person Id.
		/// </summary>
		/// <value>
		/// Modified By Person Id.
		/// </value>
		[DataMember]
		public int? ModifiedByPersonId { get; set; }
		
		/// <summary>
        /// Gets a Data Transfer Object (lightweight) version of this object.
        /// </summary>
        /// <value>
        /// A <see cref="Rock.Core.DTO.MetricValue"/> object.
        /// </value>
		/*  DTO no longer used 8/30/12
		public Rock.Core.DTO.MetricValue DataTransferObject
		{
			get 
			{ 
				Rock.Core.DTO.MetricValue dto = new Rock.Core.DTO.MetricValue();
				dto.Id = this.Id;
				dto.IsSystem = this.IsSystem;
				dto.MetricId = this.MetricId;
				dto.Value = this.Value;
				dto.Description = this.Description;
				dto.xValue = this.xValue;
				dto.isDateBased = this.isDateBased;
				dto.Label = this.Label;
				dto.Order = this.Order;
				dto.CreatedDateTime = this.CreatedDateTime;
				dto.ModifiedDateTime = this.ModifiedDateTime;
				dto.CreatedByPersonId = this.CreatedByPersonId;
				dto.ModifiedByPersonId = this.ModifiedByPersonId;
				dto.Guid = this.Guid;
				return dto; 
			}
		} */

        /// <summary>
        /// Gets the auth entity.
        /// </summary>
		[NotMapped]
		public override string AuthEntity { get { return "Core.MetricValue"; } }
        
		/// <summary>
        /// Gets or sets the Metric .
        /// </summary>
        /// <value>
        /// A <see cref="Metric"/> object.
        /// </value>
		public virtual Metric Metric { get; set; }
        
		/// <summary>
        /// Gets or sets the Created By Person.
        /// </summary>
        /// <value>
        /// A <see cref="CRM.Person"/> object.
        /// </value>
		public virtual Crm.Person CreatedByPerson { get; set; }
        
		/// <summary>
        /// Gets or sets the Modified By Person.
        /// </summary>
        /// <value>
        /// A <see cref="CRM.Person"/> object.
        /// </value>
		public virtual Crm.Person ModifiedByPerson { get; set; }

		/// <summary>
		/// Gets the parent authority.
		/// </summary>
		public override Security.ISecured ParentAuthority
		{
			get { return new Security.GenericEntity( "Global" ); }
		}

    }
    /// <summary>
    /// Metric Value Configuration class.
    /// </summary>
    public partial class MetricValueConfiguration : EntityTypeConfiguration<MetricValue>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MetricValueConfiguration"/> class.
        /// </summary>
        public MetricValueConfiguration()
        {
			this.HasRequired( p => p.Metric ).WithMany( p => p.MetricValues ).HasForeignKey( p => p.MetricId ).WillCascadeOnDelete(false);
			this.HasOptional( p => p.CreatedByPerson ).WithMany().HasForeignKey( p => p.CreatedByPersonId ).WillCascadeOnDelete(false);
			this.HasOptional( p => p.ModifiedByPerson ).WithMany().HasForeignKey( p => p.ModifiedByPersonId ).WillCascadeOnDelete(false);
		}
    }
}
