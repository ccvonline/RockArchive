//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//
// THIS WORK IS LICENSED UNDER A CREATIVE COMMONS ATTRIBUTION-NONCOMMERCIAL-
// SHAREALIKE 3.0 UNPORTED LICENSE:
// http://creativecommons.org/licenses/by-nc-sa/3.0/
//

using System;
using System.Linq;

using Rock.Data;

namespace Rock.Core
{
	/// <summary>
	/// EntityChange Service class
	/// </summary>
	public partial class EntityChangeService : Service<EntityChange, EntityChangeDTO>
	{
		/// <summary>
		/// Creates a new model
		/// </summary>
		public override EntityChange CreateNew()
		{
			return new EntityChange();
		}

		/// <summary>
		/// Query DTO objects
		/// </summary>
		/// <returns>A queryable list of DTO objects</returns>
		public override IQueryable<EntityChangeDTO> QueryableDTO()
		{
			return this.Queryable().Select( m => new EntityChangeDTO()
				{
					ChangeSet = m.ChangeSet,
					ChangeType = m.ChangeType,
					EntityType = m.EntityType,
					EntityId = m.EntityId,
					Property = m.Property,
					OriginalValue = m.OriginalValue,
					CurrentValue = m.CurrentValue,
					CreatedDateTime = m.CreatedDateTime,
					CreatedByPersonId = m.CreatedByPersonId,
					Id = m.Id,
					Guid = m.Guid,				});
		}
	}
}
