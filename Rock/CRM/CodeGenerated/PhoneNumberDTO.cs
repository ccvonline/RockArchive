//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//
// THIS WORK IS LICENSED UNDER A CREATIVE COMMONS ATTRIBUTION-NONCOMMERCIAL-
// SHAREALIKE 3.0 UNPORTED LICENSE:
// http://creativecommons.org/licenses/by-nc-sa/3.0/
//
using System;
using System.Collections.Generic;
using System.Dynamic;
using System.Runtime.Serialization;

using Rock.Data;

namespace Rock.Crm
{
    /// <summary>
    /// Data Transfer Object for PhoneNumber object
    /// </summary>
    [Serializable]
    [DataContract]
    public partial class PhoneNumberDto : IDto, DotLiquid.ILiquidizable
    {
        /// <summary />
        [DataMember]
        public bool IsSystem { get; set; }

        /// <summary />
        [DataMember]
        public int PersonId { get; set; }

        /// <summary />
        [DataMember]
        public string Number { get; set; }

        /// <summary />
        [DataMember]
        public string Extension { get; set; }

        /// <summary />
        [DataMember]
        public int? NumberTypeId { get; set; }

        /// <summary />
        [DataMember]
        public bool IsMessagingEnabled { get; set; }

        /// <summary />
        [DataMember]
        public bool IsUnlisted { get; set; }

        /// <summary />
        [DataMember]
        public string Description { get; set; }

        /// <summary />
        [DataMember]
        public int Id { get; set; }

        /// <summary />
        [DataMember]
        public Guid Guid { get; set; }

        /// <summary>
        /// Instantiates a new DTO object
        /// </summary>
        public PhoneNumberDto ()
        {
        }

        /// <summary>
        /// Instantiates a new DTO object from the entity
        /// </summary>
        /// <param name="phoneNumber"></param>
        public PhoneNumberDto ( PhoneNumber phoneNumber )
        {
            CopyFromModel( phoneNumber );
        }

        /// <summary>
        /// Creates a dictionary object.
        /// </summary>
        /// <returns></returns>
        public virtual Dictionary<string, object> ToDictionary()
        {
            var dictionary = new Dictionary<string, object>();
            dictionary.Add( "IsSystem", this.IsSystem );
            dictionary.Add( "PersonId", this.PersonId );
            dictionary.Add( "Number", this.Number );
            dictionary.Add( "Extension", this.Extension );
            dictionary.Add( "NumberTypeId", this.NumberTypeId );
            dictionary.Add( "IsMessagingEnabled", this.IsMessagingEnabled );
            dictionary.Add( "IsUnlisted", this.IsUnlisted );
            dictionary.Add( "Description", this.Description );
            dictionary.Add( "Id", this.Id );
            dictionary.Add( "Guid", this.Guid );
            return dictionary;
        }

        /// <summary>
        /// Creates a dynamic object.
        /// </summary>
        /// <returns></returns>
        public virtual dynamic ToDynamic()
        {
            dynamic expando = new ExpandoObject();
            expando.IsSystem = this.IsSystem;
            expando.PersonId = this.PersonId;
            expando.Number = this.Number;
            expando.Extension = this.Extension;
            expando.NumberTypeId = this.NumberTypeId;
            expando.IsMessagingEnabled = this.IsMessagingEnabled;
            expando.IsUnlisted = this.IsUnlisted;
            expando.Description = this.Description;
            expando.Id = this.Id;
            expando.Guid = this.Guid;
            return expando;
        }

        /// <summary>
        /// Copies the model property values to the DTO properties
        /// </summary>
        /// <param name="model">The model.</param>
        public void CopyFromModel( IEntity model )
        {
            if ( model is PhoneNumber )
            {
                var phoneNumber = (PhoneNumber)model;
                this.IsSystem = phoneNumber.IsSystem;
                this.PersonId = phoneNumber.PersonId;
                this.Number = phoneNumber.Number;
                this.Extension = phoneNumber.Extension;
                this.NumberTypeId = phoneNumber.NumberTypeId;
                this.IsMessagingEnabled = phoneNumber.IsMessagingEnabled;
                this.IsUnlisted = phoneNumber.IsUnlisted;
                this.Description = phoneNumber.Description;
                this.Id = phoneNumber.Id;
                this.Guid = phoneNumber.Guid;
            }
        }

        /// <summary>
        /// Copies the DTO property values to the entity properties
        /// </summary>
        /// <param name="model">The model.</param>
        public void CopyToModel ( IEntity model )
        {
            if ( model is PhoneNumber )
            {
                var phoneNumber = (PhoneNumber)model;
                phoneNumber.IsSystem = this.IsSystem;
                phoneNumber.PersonId = this.PersonId;
                phoneNumber.Number = this.Number;
                phoneNumber.Extension = this.Extension;
                phoneNumber.NumberTypeId = this.NumberTypeId;
                phoneNumber.IsMessagingEnabled = this.IsMessagingEnabled;
                phoneNumber.IsUnlisted = this.IsUnlisted;
                phoneNumber.Description = this.Description;
                phoneNumber.Id = this.Id;
                phoneNumber.Guid = this.Guid;
            }
        }

        /// <summary>
        /// Converts to liquidizable object for dotLiquid templating
        /// </summary>
        /// <returns></returns>
        public object ToLiquid()
        {
            return this.ToDictionary();
        }

    }

    /// <summary>
    /// 
    /// </summary>
    public static class PhoneNumberDtoExtension
    {
        /// <summary>
        /// To the model.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns></returns>
        public static PhoneNumber ToModel( this PhoneNumberDto value )
        {
            PhoneNumber result = new PhoneNumber();
            value.CopyToModel( result );
            return result;
        }

        /// <summary>
        /// To the model.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns></returns>
        public static List<PhoneNumber> ToModel( this List<PhoneNumberDto> value )
        {
            List<PhoneNumber> result = new List<PhoneNumber>();
            value.ForEach( a => result.Add( a.ToModel() ) );
            return result;
        }

        /// <summary>
        /// To the dto.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns></returns>
        public static List<PhoneNumberDto> ToDto( this List<PhoneNumber> value )
        {
            List<PhoneNumberDto> result = new List<PhoneNumberDto>();
            value.ForEach( a => result.Add( a.ToDto() ) );
            return result;
        }

        /// <summary>
        /// To the dto.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns></returns>
        public static PhoneNumberDto ToDto( this PhoneNumber value )
        {
            return new PhoneNumberDto( value );
        }

    }
}