//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//
// THIS WORK IS LICENSED UNDER A CREATIVE COMMONS ATTRIBUTION-NONCOMMERCIAL-
// SHAREALIKE 3.0 UNPORTED LICENSE:
// http://creativecommons.org/licenses/by-nc-sa/3.0/
//

using System;
using System.Linq;

using Rock.Data;

namespace Rock.Financial
{
    /// <summary>
    /// Gateway Service class
    /// </summary>
    public partial class GatewayService : Service<Gateway, GatewayDto>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GatewayService"/> class
        /// </summary>
        public GatewayService()
            : base()
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="GatewayService"/> class
        /// </summary>
        public GatewayService(IRepository<Gateway> repository) : base(repository)
        {
        }

        /// <summary>
        /// Creates a new model
        /// </summary>
        public override Gateway CreateNew()
        {
            return new Gateway();
        }

        /// <summary>
        /// Query DTO objects
        /// </summary>
        /// <returns>A queryable list of DTO objects</returns>
        public override IQueryable<GatewayDto> QueryableDto( )
        {
            return QueryableDto( this.Queryable() );
        }

        /// <summary>
        /// Query DTO objects
        /// </summary>
        /// <returns>A queryable list of DTO objects</returns>
        public IQueryable<GatewayDto> QueryableDto( IQueryable<Gateway> items )
        {
            return items.Select( m => new GatewayDto()
                {
                    Name = m.Name,
                    Description = m.Description,
                    ApiUrl = m.ApiUrl,
                    ApiKey = m.ApiKey,
                    ApiSecret = m.ApiSecret,
                    Id = m.Id,
                    Guid = m.Guid,
                });
        }
    }
}
