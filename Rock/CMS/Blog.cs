//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the T4\Model.tt template.
//
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//
// THIS WORK IS LICENSED UNDER A CREATIVE COMMONS ATTRIBUTION-NONCOMMERCIAL-
// SHAREALIKE 3.0 UNPORTED LICENSE:
// http://creativecommons.org/licenses/by-nc-sa/3.0/
//
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Data.Entity.ModelConfiguration;
using System.Runtime.Serialization;

using Rock.Data;

namespace Rock.CMS
{
    /// <summary>
    /// Blog POCO Entity.
    /// </summary>
    [Table( "cmsBlog" )]
    public partial class Blog : ModelWithAttributes<Blog>, IAuditable
    {
		/// <summary>
		/// Gets or sets the Name.
		/// </summary>
		/// <value>
		/// Name.
		/// </value>
		[MaxLength( 75 )]
		[DataMember]
		public string Name { get; set; }
		
		/// <summary>
		/// Gets or sets the Subtitle.
		/// </summary>
		/// <value>
		/// Subtitle.
		/// </value>
		[MaxLength( 200 )]
		[DataMember]
		public string Subtitle { get; set; }
		
		/// <summary>
		/// Gets or sets the Description.
		/// </summary>
		/// <value>
		/// Description.
		/// </value>
		[MaxLength( 2000 )]
		[DataMember]
		public string Description { get; set; }
		
		/// <summary>
		/// Gets or sets the Moderate Comments.
		/// </summary>
		/// <value>
		/// Moderate Comments.
		/// </value>
		[DataMember]
		public bool ModerateComments { get; set; }
		
		/// <summary>
		/// Gets or sets the Public Publishing Point.
		/// </summary>
		/// <value>
		/// Public Publishing Point.
		/// </value>
		[MaxLength( 250 )]
		[DataMember]
		public string PublicPublishingPoint { get; set; }
		
		/// <summary>
		/// Gets or sets the Public Feed Address.
		/// </summary>
		/// <value>
		/// Public Feed Address.
		/// </value>
		[MaxLength( 250 )]
		[DataMember]
		public string PublicFeedAddress { get; set; }
		
		/// <summary>
		/// Gets or sets the Copyright Statement.
		/// </summary>
		/// <value>
		/// Copyright Statement.
		/// </value>
		[MaxLength( 250 )]
		[DataMember]
		public string CopyrightStatement { get; set; }
		
		/// <summary>
		/// Gets or sets the Allow Comments.
		/// </summary>
		/// <value>
		/// Allow Comments.
		/// </value>
		[DataMember]
		public bool AllowComments { get; set; }
		
		/// <summary>
		/// Gets or sets the Created Date Time.
		/// </summary>
		/// <value>
		/// Created Date Time.
		/// </value>
		[DataMember]
		public DateTime? CreatedDateTime { get; set; }
		
		/// <summary>
		/// Gets or sets the Modified Date Time.
		/// </summary>
		/// <value>
		/// Modified Date Time.
		/// </value>
		[DataMember]
		public DateTime? ModifiedDateTime { get; set; }
		
		/// <summary>
		/// Gets or sets the Created By Person Id.
		/// </summary>
		/// <value>
		/// Created By Person Id.
		/// </value>
		[DataMember]
		public int? CreatedByPersonId { get; set; }
		
		/// <summary>
		/// Gets or sets the Modified By Person Id.
		/// </summary>
		/// <value>
		/// Modified By Person Id.
		/// </value>
		[DataMember]
		public int? ModifiedByPersonId { get; set; }
		
		/// <summary>
        /// Gets a Data Transfer Object (lightweight) version of this object.
        /// </summary>
        /// <value>
        /// A <see cref="Rock.CMS.DTO.Blog"/> object.
        /// </value>
		public Rock.CMS.DTO.Blog DataTransferObject
		{
			get 
			{ 
				Rock.CMS.DTO.Blog dto = new Rock.CMS.DTO.Blog();
				dto.Id = this.Id;
				dto.Guid = this.Guid;
				dto.Name = this.Name;
				dto.Subtitle = this.Subtitle;
				dto.Description = this.Description;
				dto.ModerateComments = this.ModerateComments;
				dto.PublicPublishingPoint = this.PublicPublishingPoint;
				dto.PublicFeedAddress = this.PublicFeedAddress;
				dto.CopyrightStatement = this.CopyrightStatement;
				dto.AllowComments = this.AllowComments;
				dto.CreatedDateTime = this.CreatedDateTime;
				dto.ModifiedDateTime = this.ModifiedDateTime;
				dto.CreatedByPersonId = this.CreatedByPersonId;
				dto.ModifiedByPersonId = this.ModifiedByPersonId;
				return dto; 
			}
		}

        /// <summary>
        /// Gets the auth entity.
        /// </summary>
		[NotMapped]
		public override string AuthEntity { get { return "CMS.Blog"; } }
        
		/// <summary>
        /// Gets or sets the Blog Categories.
        /// </summary>
        /// <value>
        /// Collection of Blog Categories.
        /// </value>
		public virtual ICollection<BlogCategory> BlogCategories { get; set; }
        
		/// <summary>
        /// Gets or sets the Blog Posts.
        /// </summary>
        /// <value>
        /// Collection of Blog Posts.
        /// </value>
		public virtual ICollection<BlogPost> BlogPosts { get; set; }
        
		/// <summary>
        /// Gets or sets the Blog Tags.
        /// </summary>
        /// <value>
        /// Collection of Blog Tags.
        /// </value>
		public virtual ICollection<BlogTag> BlogTags { get; set; }
        
		/// <summary>
        /// Gets or sets the Created By Person.
        /// </summary>
        /// <value>
        /// A <see cref="CRM.Person"/> object.
        /// </value>
		public virtual CRM.Person CreatedByPerson { get; set; }
        
		/// <summary>
        /// Gets or sets the Modified By Person.
        /// </summary>
        /// <value>
        /// A <see cref="CRM.Person"/> object.
        /// </value>
		public virtual CRM.Person ModifiedByPerson { get; set; }

    }
    /// <summary>
    /// Blog Configuration class.
    /// </summary>
    public partial class BlogConfiguration : EntityTypeConfiguration<Blog>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BlogConfiguration"/> class.
        /// </summary>
        public BlogConfiguration()
        {
			this.HasOptional( p => p.CreatedByPerson ).WithMany().HasForeignKey( p => p.CreatedByPersonId ).WillCascadeOnDelete(false);
			this.HasOptional( p => p.ModifiedByPerson ).WithMany().HasForeignKey( p => p.ModifiedByPersonId ).WillCascadeOnDelete(false);
		}
    }
}
