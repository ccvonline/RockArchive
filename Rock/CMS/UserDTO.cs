//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//
// THIS WORK IS LICENSED UNDER A CREATIVE COMMONS ATTRIBUTION-NONCOMMERCIAL-
// SHAREALIKE 3.0 UNPORTED LICENSE:
// http://creativecommons.org/licenses/by-nc-sa/3.0/
//
using System;

using Rock.Data;

namespace Rock.Cms
{
    /// <summary>
    /// Data Transfer Object for User object
    /// </summary>
    public partial class UserDto : IDto
    {

#pragma warning disable 1591
        public string UserName { get; set; }
        public string Provider { get; set; }
        public string Password { get; set; }
        public bool? IsConfirmed { get; set; }
        public DateTimeOffset? LastActivityDate { get; set; }
        public DateTimeOffset? LastLoginDate { get; set; }
        public DateTimeOffset? LastPasswordChangedDate { get; set; }
        public DateTimeOffset? CreationDate { get; set; }
        public bool? IsOnLine { get; set; }
        public bool? IsLockedOut { get; set; }
        public DateTimeOffset? LastLockedOutDate { get; set; }
        public int? FailedPasswordAttemptCount { get; set; }
        public DateTimeOffset? FailedPasswordAttemptWindowStart { get; set; }
        public string ApiKey { get; set; }
        public int? PersonId { get; set; }
        public int Id { get; set; }
        public Guid Guid { get; set; }
#pragma warning restore 1591

        /// <summary>
        /// Instantiates a new DTO object
        /// </summary>
        public UserDto ()
        {
        }

        /// <summary>
        /// Instantiates a new DTO object from the entity
        /// </summary>
        /// <param name="user"></param>
        public UserDto ( User user )
        {
            CopyFromModel( user );
        }

        /// <summary>
        /// Copies the model property values to the DTO properties
        /// </summary>
        /// <param name="model">The model.</param>
        public void CopyFromModel( IEntity model )
        {
            if ( model is User )
            {
                var user = (User)model;
                this.UserName = user.UserName;
                this.Password = user.Password;
                this.IsConfirmed = user.IsConfirmed;
                this.LastActivityDate = user.LastActivityDate;
                this.LastLoginDate = user.LastLoginDate;
                this.LastPasswordChangedDate = user.LastPasswordChangedDate;
                this.CreationDate = user.CreationDate;
                this.IsOnLine = user.IsOnLine;
                this.IsLockedOut = user.IsLockedOut;
                this.LastLockedOutDate = user.LastLockedOutDate;
                this.FailedPasswordAttemptCount = user.FailedPasswordAttemptCount;
                this.FailedPasswordAttemptWindowStart = user.FailedPasswordAttemptWindowStart;
                this.ApiKey = user.ApiKey;
                this.PersonId = user.PersonId;
                this.Id = user.Id;
                this.Guid = user.Guid;
            }
        }

        /// <summary>
        /// Copies the DTO property values to the entity properties
        /// </summary>
        /// <param name="model">The model.</param>
        public void CopyToModel ( IEntity model )
        {
            if ( model is User )
            {
                var user = (User)model;
                user.UserName = this.UserName;
                user.Password = this.Password;
                user.IsConfirmed = this.IsConfirmed;
                user.LastActivityDate = this.LastActivityDate;
                user.LastLoginDate = this.LastLoginDate;
                user.LastPasswordChangedDate = this.LastPasswordChangedDate;
                user.CreationDate = this.CreationDate;
                user.IsOnLine = this.IsOnLine;
                user.IsLockedOut = this.IsLockedOut;
                user.LastLockedOutDate = this.LastLockedOutDate;
                user.FailedPasswordAttemptCount = this.FailedPasswordAttemptCount;
                user.FailedPasswordAttemptWindowStart = this.FailedPasswordAttemptWindowStart;
                user.ApiKey = this.ApiKey;
                user.PersonId = this.PersonId;
                user.Id = this.Id;
                user.Guid = this.Guid;
            }
        }
    }
}
