//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//
// THIS WORK IS LICENSED UNDER A CREATIVE COMMONS ATTRIBUTION-NONCOMMERCIAL-
// SHAREALIKE 3.0 UNPORTED LICENSE:
// http://creativecommons.org/licenses/by-nc-sa/3.0/
//
using System;
using System.Collections.Generic;
using System.Dynamic;
using System.Runtime.Serialization;

using Rock.Data;

namespace Rock.Cms
{
    /// <summary>
    /// Data Transfer Object for MarketingCampaignCampus object
    /// </summary>
    [Serializable]
    [DataContract]
    public partial class MarketingCampaignCampusDto : IDto
    {
        /// <summary />
        [DataMember]
        public int MarketingCampaignId { get; set; }

        /// <summary />
        [DataMember]
        public int CampusId { get; set; }

        /// <summary />
        [DataMember]
        public int Id { get; set; }

        /// <summary />
        [DataMember]
        public Guid Guid { get; set; }

        /// <summary>
        /// Instantiates a new DTO object
        /// </summary>
        public MarketingCampaignCampusDto ()
        {
        }

        /// <summary>
        /// Instantiates a new DTO object from the entity
        /// </summary>
        /// <param name="marketingCampaignCampus"></param>
        public MarketingCampaignCampusDto ( MarketingCampaignCampus marketingCampaignCampus )
        {
            CopyFromModel( marketingCampaignCampus );
        }

        /// <summary>
        /// Creates a dictionary object.
        /// </summary>
        /// <returns></returns>
        public virtual Dictionary<string, object> ToDictionary()
        {
            var dictionary = new Dictionary<string, object>();
            dictionary.Add( "MarketingCampaignId", this.MarketingCampaignId );
            dictionary.Add( "CampusId", this.CampusId );
            dictionary.Add( "Id", this.Id );
            dictionary.Add( "Guid", this.Guid );
            return dictionary;
        }

        /// <summary>
        /// Creates a dynamic object.
        /// </summary>
        /// <returns></returns>
        public virtual dynamic ToDynamic()
        {
            dynamic expando = new ExpandoObject();
            expando.MarketingCampaignId = this.MarketingCampaignId;
            expando.CampusId = this.CampusId;
            expando.Id = this.Id;
            expando.Guid = this.Guid;
            return expando;
        }

        /// <summary>
        /// Copies the model property values to the DTO properties
        /// </summary>
        /// <param name="model">The model.</param>
        public void CopyFromModel( IEntity model )
        {
            if ( model is MarketingCampaignCampus )
            {
                var marketingCampaignCampus = (MarketingCampaignCampus)model;
                this.MarketingCampaignId = marketingCampaignCampus.MarketingCampaignId;
                this.CampusId = marketingCampaignCampus.CampusId;
                this.Id = marketingCampaignCampus.Id;
                this.Guid = marketingCampaignCampus.Guid;
            }
        }

        /// <summary>
        /// Copies the DTO property values to the entity properties
        /// </summary>
        /// <param name="model">The model.</param>
        public void CopyToModel ( IEntity model )
        {
            if ( model is MarketingCampaignCampus )
            {
                var marketingCampaignCampus = (MarketingCampaignCampus)model;
                marketingCampaignCampus.MarketingCampaignId = this.MarketingCampaignId;
                marketingCampaignCampus.CampusId = this.CampusId;
                marketingCampaignCampus.Id = this.Id;
                marketingCampaignCampus.Guid = this.Guid;
            }
        }
    }

    /// <summary>
    /// 
    /// </summary>
    public static class MarketingCampaignCampusDtoExtension
    {
        /// <summary>
        /// To the model.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns></returns>
        public static MarketingCampaignCampus ToModel( this MarketingCampaignCampusDto value )
        {
            MarketingCampaignCampus result = new MarketingCampaignCampus();
            value.CopyToModel( result );
            return result;
        }

        /// <summary>
        /// To the model.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns></returns>
        public static List<MarketingCampaignCampus> ToModel( this List<MarketingCampaignCampusDto> value )
        {
            List<MarketingCampaignCampus> result = new List<MarketingCampaignCampus>();
            value.ForEach( a => result.Add( a.ToModel() ) );
            return result;
        }

        /// <summary>
        /// To the dto.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns></returns>
        public static List<MarketingCampaignCampusDto> ToDto( this List<MarketingCampaignCampus> value )
        {
            List<MarketingCampaignCampusDto> result = new List<MarketingCampaignCampusDto>();
            value.ForEach( a => result.Add( new MarketingCampaignCampusDto( a ) ) );
            return result;
        }
    }
}