//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//
// THIS WORK IS LICENSED UNDER A CREATIVE COMMONS ATTRIBUTION-NONCOMMERCIAL-
// SHAREALIKE 3.0 UNPORTED LICENSE:
// http://creativecommons.org/licenses/by-nc-sa/3.0/
//

using System;
using System.Linq;

using Rock.Data;

namespace Rock.Util
{
	/// <summary>
	/// Job Service class
	/// </summary>
	public partial class JobService : Service<Job, JobDto>
	{
		/// <summary>
		/// Initializes a new instance of the <see cref="JobService"/> class
		/// </summary>
		public JobService() : base()
		{
		}

		/// <summary>
		/// Initializes a new instance of the <see cref="JobService"/> class
		/// </summary>
		public JobService(IRepository<Job> repository) : base(repository)
		{
		}

		/// <summary>
		/// Creates a new model
		/// </summary>
		public override Job CreateNew()
		{
			return new Job();
		}

		/// <summary>
		/// Query DTO objects
		/// </summary>
		/// <returns>A queryable list of DTO objects</returns>
		public override IQueryable<JobDto> QueryableDto()
		{
			return this.Queryable().Select( m => new JobDto()
				{
					IsSystem = m.IsSystem,
					IsActive = m.IsActive,
					Name = m.Name,
					Description = m.Description,
					Assemby = m.Assemby,
					Class = m.Class,
					CronExpression = m.CronExpression,
					LastSuccessfulRun = m.LastSuccessfulRun,
					LastRunDate = m.LastRunDate,
					LastRunDuration = m.LastRunDuration,
					LastStatus = m.LastStatus,
					LastStatusMessage = m.LastStatusMessage,
					LastRunSchedulerName = m.LastRunSchedulerName,
					NotificationEmails = m.NotificationEmails,
					NotificationStatus = m.NotificationStatus,
					CreatedDateTime = m.CreatedDateTime,
					ModifiedDateTime = m.ModifiedDateTime,
					CreatedByPersonId = m.CreatedByPersonId,
					ModifiedByPersonId = m.ModifiedByPersonId,
					Id = m.Id,
					Guid = m.Guid,				});
		}
	}
}
