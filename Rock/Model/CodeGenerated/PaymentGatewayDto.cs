//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
//
// THIS WORK IS LICENSED UNDER A CREATIVE COMMONS ATTRIBUTION-NONCOMMERCIAL-
// SHAREALIKE 3.0 UNPORTED LICENSE:
// http://creativecommons.org/licenses/by-nc-sa/3.0/
//
using System;
using System.Collections.Generic;
using System.Dynamic;
using System.Runtime.Serialization;

using Rock.Data;

namespace Rock.Model
{
    /// <summary>
    /// Data Transfer Object for PaymentGateway object
    /// </summary>
    [Serializable]
    [DataContract]
    public partial class PaymentGatewayDto : DtoSecured<PaymentGatewayDto>
    {
        /// <summary />
        [DataMember]
        public string Name { get; set; }

        /// <summary />
        [DataMember]
        public string Description { get; set; }

        /// <summary />
        [DataMember]
        public string ApiUrl { get; set; }

        /// <summary />
        [DataMember]
        public string ApiKey { get; set; }

        /// <summary />
        [DataMember]
        public string ApiSecret { get; set; }

        /// <summary>
        /// Instantiates a new DTO object
        /// </summary>
        public PaymentGatewayDto ()
        {
        }

        /// <summary>
        /// Instantiates a new DTO object from the entity
        /// </summary>
        /// <param name="paymentGateway"></param>
        public PaymentGatewayDto ( PaymentGateway paymentGateway )
        {
            CopyFromModel( paymentGateway );
        }

        /// <summary>
        /// Creates a dictionary object.
        /// </summary>
        /// <returns></returns>
        public override Dictionary<string, object> ToDictionary()
        {
            var dictionary = base.ToDictionary();
            dictionary.Add( "Name", this.Name );
            dictionary.Add( "Description", this.Description );
            dictionary.Add( "ApiUrl", this.ApiUrl );
            dictionary.Add( "ApiKey", this.ApiKey );
            dictionary.Add( "ApiSecret", this.ApiSecret );
            return dictionary;
        }

        /// <summary>
        /// Creates a dynamic object.
        /// </summary>
        /// <returns></returns>
        public override dynamic ToDynamic()
        {
            dynamic expando = base.ToDynamic();
            expando.Name = this.Name;
            expando.Description = this.Description;
            expando.ApiUrl = this.ApiUrl;
            expando.ApiKey = this.ApiKey;
            expando.ApiSecret = this.ApiSecret;
            return expando;
        }

        /// <summary>
        /// Copies the model property values to the DTO properties
        /// </summary>
        /// <param name="model">The model.</param>
        public override void CopyFromModel( IEntity model )
        {
            base.CopyFromModel( model );

            if ( model is PaymentGateway )
            {
                var paymentGateway = (PaymentGateway)model;
                this.Name = paymentGateway.Name;
                this.Description = paymentGateway.Description;
                this.ApiUrl = paymentGateway.ApiUrl;
                this.ApiKey = paymentGateway.ApiKey;
                this.ApiSecret = paymentGateway.ApiSecret;
            }
        }

        /// <summary>
        /// Copies the DTO property values to the entity properties
        /// </summary>
        /// <param name="model">The model.</param>
        public override void CopyToModel ( IEntity model )
        {
            base.CopyToModel( model );

            if ( model is PaymentGateway )
            {
                var paymentGateway = (PaymentGateway)model;
                paymentGateway.Name = this.Name;
                paymentGateway.Description = this.Description;
                paymentGateway.ApiUrl = this.ApiUrl;
                paymentGateway.ApiKey = this.ApiKey;
                paymentGateway.ApiSecret = this.ApiSecret;
            }
        }

    }

    /// <summary>
    /// 
    /// </summary>
    public static class PaymentGatewayDtoExtension
    {
        /// <summary>
        /// To the model.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns></returns>
        public static PaymentGateway ToModel( this PaymentGatewayDto value )
        {
            PaymentGateway result = new PaymentGateway();
            value.CopyToModel( result );
            return result;
        }

        /// <summary>
        /// To the model.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns></returns>
        public static List<PaymentGateway> ToModel( this List<PaymentGatewayDto> value )
        {
            List<PaymentGateway> result = new List<PaymentGateway>();
            value.ForEach( a => result.Add( a.ToModel() ) );
            return result;
        }

        /// <summary>
        /// To the dto.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns></returns>
        public static List<PaymentGatewayDto> ToDto( this List<PaymentGateway> value )
        {
            List<PaymentGatewayDto> result = new List<PaymentGatewayDto>();
            value.ForEach( a => result.Add( a.ToDto() ) );
            return result;
        }

        /// <summary>
        /// To the dto.
        /// </summary>
        /// <param name="value">The value.</param>
        /// <returns></returns>
        public static PaymentGatewayDto ToDto( this PaymentGateway value )
        {
            return new PaymentGatewayDto( value );
        }

    }
}